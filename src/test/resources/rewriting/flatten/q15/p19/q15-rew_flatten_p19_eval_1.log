WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT r_0.x AS X0, p28_3.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0) UNION (SELECT r_0.x AS X0, p28_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0) UNION (SELECT r_0.x AS X0, r_2.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN r AS r_2 ON r_0.y = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x) UNION (SELECT r_0.x AS X0, r_4.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN a AS a_5 ON r_4.y = a_5.x)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1 UNION (SELECT r_0.x AS X0, p40_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1 INNER JOIN b AS b_4 ON s_2.y = b_4.x) UNION (SELECT r_0.x AS X0, p43_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1) UNION (SELECT r_0.x AS X0, p43_4.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: f0986555_8f88_4fb4_933b_994470e50edb

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT r_0.x AS X0, p28_3.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN b AS b_2 ON r_0.y = b_2.x
                      INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0)
            UNION
            (SELECT r_0.x AS X0, p28_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
                      INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0)
            UNION
            (SELECT r_0.x AS X0, r_2.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN r AS r_2 ON r_0.y = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)
            UNION
            (SELECT r_0.x AS X0, r_4.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN b AS b_3 ON s_2.y = b_3.x
                      INNER JOIN r AS r_4 ON s_2.y = r_4.x
                      INNER JOIN a AS a_5 ON r_4.y = a_5.x)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1
             UNION
             (SELECT r_0.x AS X0, p40_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1
                       INNER JOIN b AS b_4 ON s_2.y = b_4.x)
             UNION
             (SELECT r_0.x AS X0, p43_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_0.y = b_2.x
                       INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1)
             UNION
             (SELECT r_0.x AS X0, p43_4.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN r AS r_3 ON s_2.y = r_3.x
                       INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
         :  :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
         :  :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
         :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$8])
         :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 2912.59226235326, cumulative cost = {2.8672933383409645E7 rows, 8.733157182226516E8 cpu, 3.94326984E8 io, 1.076680992936729E8 network, 6.6467603337281115E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 2912.59226235326, cumulative cost = {2.867002079114729E7 rows, 8.73269116746454E8 cpu, 3.94326984E8 io, 1.076680992936729E8 network, 6.6281197432490505E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 2912.59226235326, cumulative cost = {2.8667108198884938E7 rows, 8.727565005082798E8 cpu, 3.94326984E8 io, 1.0759819707937643E8 network, 6.6281197432490505E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 16067.768315969526, cumulative cost = {2.8664195606622584E7 rows, 8.724994162152243E8 cpu, 3.94326984E8 io, 1.0759819707937643E8 network, 6.6094791527699895E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 13921.166401625342, cumulative cost = {1.7952183613182686E7 rows, 5.3514176242502975E8 cpu, 2.46454428E8 io, 6.591190056063828E7 network, 4.033843677779263E7 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 9941.063312445078, cumulative cost = {1.0950477154817805E7 rows, 2.8972831143322676E8 cpu, 1.5403344E8 io, 3.475152002219337E7 network, 2.5321212919205904E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 9941.063312445078, cumulative cost = {1.094053609150536E7 rows, 2.8972831143322676E8 cpu, 1.5403344E8 io, 3.475152002219337E7 network, 2.5321212919205904E7 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 26526.820594535093, cumulative cost = {7006281.306379433 rows, 2.496636835770026E8 cpu, 9.24204E7 io, 3.1796827432713747E7 network, 1.5016994258586725E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26526.820594535093, cumulative cost = {6979754.485784898 rows, 2.452071777171207E8 cpu, 9.24204E7 io, 3.1160183738444906E7 network, 1.5016994258586725E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26526.820594535093, cumulative cost = {6953227.665190362 rows, 2.4478274858760816E8 cpu, 9.24204E7 io, 3.1160183738444906E7 network, 1.331927774053648E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26526.820594535093, cumulative cost = {6926700.844595827 rows, 2.4011402816296998E8 cpu, 9.24204E7 io, 3.0523540044176064E7 network, 1.331927774053648E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 146339.3324844942, cumulative cost = {6900174.024001292 rows, 2.3777259884321806E8 cpu, 9.24204E7 io, 3.0523540044176064E7 network, 1.1621561222486233E7 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 102055.0192806121, cumulative cost = {5418837.081507478 rows, 1.8296476918432772E8 cpu, 7.3936044E7 io, 2.3408088175363615E7 network, 9318049.179105937 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 89613.57958806484, cumulative cost = {3539576.8880935344 rows, 1.1322025497836874E8 cpu, 4.9291572E7 io, 1.4282047813788552E7 network, 4803361.585946204 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 82813.8530544164, cumulative cost = {2100893.3845408806 rows, 5.797963363802442E7 cpu, 3.0807336E7 io, 7145932.203021051 network, 2451714.1446707817 memory}
         :  :     :              :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 38529.68467775339, cumulative cost = {688813.7532776924 rows, 2972557.130224987 cpu, 1.2323268E7 io, 30487.87137748509 network, 147949.33535829588 memory}
         :  :     :              :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.68467775339, cumulative cost = {650284.068599939 rows, 2972557.130224987 cpu, 1.2323268E7 io, 30487.87137748509 network, 147949.33535829588 memory}
         :  :     :              :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :     :              :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :     :              :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :     :              :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.16837666301, cumulative cost = {1329265.778208772 rows, 5.492426265474501E7 cpu, 1.8484068E7 io, 7115444.3316435665 network, 2303764.8093124856 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.16837666301, cumulative cost = {1284981.609832109 rows, 5.492426265474501E7 cpu, 1.8484068E7 io, 7115444.3316435665 network, 2303764.8093124856 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 38528.78917775339, cumulative cost = {727299.4414554458 rows, 9437008.341322992 cpu, 1.2323292E7 io, 954668.3316435665 network, 146152.6153582959 memory}
         :  :     :              :  :  :           +- Calc(select=[x, X0]): rowcount = 38528.78917775339, cumulative cost = {688770.6522776925 rows, 2964171.759460422 cpu, 1.2323292E7 io, 29977.39137748509 network, 146152.6153582959 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 38528.78917775339, cumulative cost = {650241.8630999391 rows, 2964171.759460422 cpu, 1.2323292E7 io, 29977.39137748509 network, 146152.6153582959 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 159.59451835589724, cumulative cost = {355014.0739221857 rows, 909303.0033135752 cpu, 6162516.0 io, 29977.39137748509 network, 137215.32233036566 memory}
         :  :     :              :  :  :                    +- Calc(select=[X0, x0]): rowcount = 159.59451835589724, cumulative cost = {354854.4794038298 rows, 883767.8803766316 cpu, 6162516.0 io, 26147.122936943557 network, 137215.32233036566 memory}
         :  :     :              :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 159.59451835589724, cumulative cost = {354694.8848854739 rows, 883767.8803766316 cpu, 6162516.0 io, 26147.122936943557 network, 137215.32233036566 memory}
         :  :     :              :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :     :              :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :     :              :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :     :              :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :     :              :  :  :                             +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 6799.7265336484425, cumulative cost = {1349069.923964589 rows, 5.515100776075626E7 cpu, 1.8484236E7 io, 7136115.610767501 network, 2351647.441275422 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 6799.7265336484425, cumulative cost = {1342270.1974309403 rows, 5.515100776075626E7 cpu, 1.8484236E7 io, 7136115.610767501 network, 2351647.441275422 memory}
         :  :     :              :  :        :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :     :              :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :     :              :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :     :              :  :        :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :     :              :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 12441.439692547267, cumulative cost = {1777205.1741333317 rows, 6.964245918667838E7 cpu, 2.4644472E7 io, 9126040.361575063 network, 4514687.593159734 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 12441.439692547267, cumulative cost = {1764763.7344407844 rows, 6.964245918667838E7 cpu, 2.4644472E7 io, 9126040.361575063 network, 4514687.593159734 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y00]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :  :     :              :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :        :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 38662.33128364844, cumulative cost = {733866.4947482373 rows, 9327011.936409198 cpu, 1.2322896E7 io, 978385.9615750639 network, 193289.04127542186 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 39746.934821765426, cumulative cost = {3924313.7218134813 rows, 3.9534437812893756E7 cpu, 6.161304E7 io, 2954692.589479629 network, 8818716.707325213 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 39746.934821765426, cumulative cost = {3884566.786991716 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39746.934821765426, cumulative cost = {3844819.8521699505 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 8280.565478436212, cumulative cost = {3548373.917348185 rows, 3.0737116239009675E7 cpu, 5.5452264E7 io, 2000766.1537572588 network, 8355005.040532785 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                             :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                             :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                             :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :                             :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :                             :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :                             :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :                             :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :                             :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 3980.103089180264, cumulative cost = {6987785.291963257 rows, 2.4539952982540137E8 cpu, 9.2420988E7 io, 3.1160380538444906E7 network, 1.5017223858586725E7 memory}
         :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 3980.103089180264, cumulative cost = {6983805.188874077 rows, 2.4539952982540137E8 cpu, 9.2420988E7 io, 3.1160380538444906E7 network, 1.5017223858586725E7 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26526.820594535093, cumulative cost = {6979754.485784898 rows, 2.452071777171207E8 cpu, 9.24204E7 io, 3.1160183738444906E7 network, 1.5016994258586725E7 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26526.820594535093, cumulative cost = {6953227.665190362 rows, 2.4478274858760816E8 cpu, 9.24204E7 io, 3.1160183738444906E7 network, 1.331927774053648E7 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26526.820594535093, cumulative cost = {6926700.844595827 rows, 2.4011402816296998E8 cpu, 9.24204E7 io, 3.0523540044176064E7 network, 1.331927774053648E7 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 146339.3324844942, cumulative cost = {6900174.024001292 rows, 2.3777259884321806E8 cpu, 9.24204E7 io, 3.0523540044176064E7 network, 1.1621561222486233E7 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 102055.0192806121, cumulative cost = {5418837.081507478 rows, 1.8296476918432772E8 cpu, 7.3936044E7 io, 2.3408088175363615E7 network, 9318049.179105937 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 89613.57958806484, cumulative cost = {3539576.8880935344 rows, 1.1322025497836874E8 cpu, 4.9291572E7 io, 1.4282047813788552E7 network, 4803361.585946204 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 82813.8530544164, cumulative cost = {2100893.3845408806 rows, 5.797963363802442E7 cpu, 3.0807336E7 io, 7145932.203021051 network, 2451714.1446707817 memory}
         :        :           :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 38529.68467775339, cumulative cost = {688813.7532776924 rows, 2972557.130224987 cpu, 1.2323268E7 io, 30487.87137748509 network, 147949.33535829588 memory}
         :        :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.68467775339, cumulative cost = {650284.068599939 rows, 2972557.130224987 cpu, 1.2323268E7 io, 30487.87137748509 network, 147949.33535829588 memory}
         :        :           :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :        :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :        :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :        :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :        :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.16837666301, cumulative cost = {1329265.778208772 rows, 5.492426265474501E7 cpu, 1.8484068E7 io, 7115444.3316435665 network, 2303764.8093124856 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.16837666301, cumulative cost = {1284981.609832109 rows, 5.492426265474501E7 cpu, 1.8484068E7 io, 7115444.3316435665 network, 2303764.8093124856 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 38528.78917775339, cumulative cost = {727299.4414554458 rows, 9437008.341322992 cpu, 1.2323292E7 io, 954668.3316435665 network, 146152.6153582959 memory}
         :        :           :  :  :           +- Calc(select=[x, X0]): rowcount = 38528.78917775339, cumulative cost = {688770.6522776925 rows, 2964171.759460422 cpu, 1.2323292E7 io, 29977.39137748509 network, 146152.6153582959 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 38528.78917775339, cumulative cost = {650241.8630999391 rows, 2964171.759460422 cpu, 1.2323292E7 io, 29977.39137748509 network, 146152.6153582959 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 159.59451835589724, cumulative cost = {355014.0739221857 rows, 909303.0033135752 cpu, 6162516.0 io, 29977.39137748509 network, 137215.32233036566 memory}
         :        :           :  :  :                    +- Calc(select=[X0, x0]): rowcount = 159.59451835589724, cumulative cost = {354854.4794038298 rows, 883767.8803766316 cpu, 6162516.0 io, 26147.122936943557 network, 137215.32233036566 memory}
         :        :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 159.59451835589724, cumulative cost = {354694.8848854739 rows, 883767.8803766316 cpu, 6162516.0 io, 26147.122936943557 network, 137215.32233036566 memory}
         :        :           :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :        :           :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :        :           :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :        :           :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :        :           :  :  :                             +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 6799.7265336484425, cumulative cost = {1349069.923964589 rows, 5.515100776075626E7 cpu, 1.8484236E7 io, 7136115.610767501 network, 2351647.441275422 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 6799.7265336484425, cumulative cost = {1342270.1974309403 rows, 5.515100776075626E7 cpu, 1.8484236E7 io, 7136115.610767501 network, 2351647.441275422 memory}
         :        :           :  :        :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :        :           :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :        :           :  :        :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :        :           :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :           :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :           :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :           :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :           :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :           :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 12441.439692547267, cumulative cost = {1777205.1741333317 rows, 6.964245918667838E7 cpu, 2.4644472E7 io, 9126040.361575063 network, 4514687.593159734 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 12441.439692547267, cumulative cost = {1764763.7344407844 rows, 6.964245918667838E7 cpu, 2.4644472E7 io, 9126040.361575063 network, 4514687.593159734 memory}
         :        :           :        :- Exchange(distribution=[hash[y00]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :        :           :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :        :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 38662.33128364844, cumulative cost = {733866.4947482373 rows, 9327011.936409198 cpu, 1.2322896E7 io, 978385.9615750639 network, 193289.04127542186 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 2146.601914344184, cumulative cost = {1.0695944225123927E7 rows, 3.373415860218786E8 cpu, 1.47872556E8 io, 4.168629651873816E7 network, 2.5756354749907263E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2146.601914344184, cumulative cost = {1.0693797623209583E7 rows, 3.373415860218786E8 cpu, 1.47872556E8 io, 4.168629651873816E7 network, 2.5756354749907263E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 13060.044607195796, cumulative cost = {7147691.764960193 rows, 3.0753895272867703E8 cpu, 9.2419608E7 io, 3.9853564700741E7 network, 1.7329262159355614E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 13060.044607195796, cumulative cost = {7134631.720352997 rows, 3.073299920149619E8 cpu, 9.2419608E7 io, 3.9853564700741E7 network, 1.6493419304495085E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 13060.044607195796, cumulative cost = {7121571.675745801 rows, 3.0503142416409546E8 cpu, 9.2419608E7 io, 3.9540123630168304E7 network, 1.6493419304495085E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 72047.76777615352, cumulative cost = {7108511.631138605 rows, 3.03878659879677E8 cpu, 9.2419608E7 io, 3.9540123630168304E7 network, 1.5657576449634554E7 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 70177.85277615352, cumulative cost = {5616982.833362452 rows, 2.3485168831190085E8 cpu, 7.3936008E7 io, 3.0466899630168304E7 network, 1.1340774049634553E7 memory}
               :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 63527.05752615352, cumulative cost = {4559099.420086298 rows, 1.8039907497912472E8 cpu, 6.1613208E7 io, 2.3380590030168302E7 network, 9180363.649634553 memory}
               :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 51085.415944982495, cumulative cost = {2723958.9555662 rows, 1.1041603773428817E8 cpu, 3.6968688E7 io, 1.425347467068275E7 network, 4661981.684420982 memory}
               :           :  :  :  :- Calc(select=[x AS X0, X1]): rowcount = 44284.343487175654, cumulative cost = {1329397.1324974215 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 44284.343487175654, cumulative cost = {1285112.7890102458 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :  :  :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 38529.95658117102, cumulative cost = {727430.4455230703 rows, 9449866.786957398 cpu, 1.2323628E7 io, 955540.3641845626 network, 149037.67429901776 memory}
               :           :  :  :  :        +- Calc(select=[x, X1]): rowcount = 38529.95658117102, cumulative cost = {688900.4889418993 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.95658117102, cumulative cost = {650370.5323607282 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 167.37720780683773, cumulative cost = {355141.5757795572 rows, 921903.063658211 cpu, 6162852.0 io, 30821.40623645814 network, 139664.55066183486 memory}
               :           :  :  :  :                 +- Calc(select=[X0, X1]): rowcount = 167.37720780683773, cumulative cost = {354974.19857175037 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :  :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 167.37720780683773, cumulative cost = {354806.8213639435 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :  :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :  :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :  :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :  :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :  :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  +- Calc(select=[x AS X0, X1]): rowcount = 6801.0724578068375, cumulative cost = {1343476.407123796 rows, 5.542782187873642E7 cpu, 1.8484284E7 io, 7137158.306498188 network, 2355266.4415763877 memory}
               :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 6801.0724578068375, cumulative cost = {1336675.334665989 rows, 5.542782187873642E7 cpu, 1.8484284E7 io, 7137158.306498188 network, 2355266.4415763877 memory}
               :           :  :  :        :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
               :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
               :           :  :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
               :           :  :  :        :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :  :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :  :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
               :           :  :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :                       :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :                       :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :  :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  +- Calc(select=[x AS X0, X1]): rowcount = 12441.641581171025, cumulative cost = {1771613.4069939447 rows, 6.991951018731041E7 cpu, 2.464452E7 io, 9127115.359485552 network, 4518381.965213571 memory}
               :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X1], build=[right]): rowcount = 12441.641581171025, cumulative cost = {1759171.7654127737 rows, 6.991951018731041E7 cpu, 2.464452E7 io, 9127115.359485552 network, 4518381.965213571 memory}
               :           :  :        :- Exchange(distribution=[hash[y00]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
               :           :  :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :  :        :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 38663.67720780684, cumulative cost = {728274.3238316027 rows, 9604052.16964796 cpu, 1.2322944E7 io, 979460.9594855522 network, 196908.0415763876 memory}
               :           :  :           +- Calc(select=[x, X1]): rowcount = 38663.67720780684, cumulative cost = {689610.6466237959 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38663.67720780684, cumulative cost = {650946.969415989 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
               :           :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                                :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 6650.79525, cumulative cost = {987705.5605 rows, 5.4382435480000004E7 cpu, 1.23228E7 io, 7086309.6 network, 2160410.4 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 6650.79525, cumulative cost = {981054.76525 rows, 5.4382435480000004E7 cpu, 1.23228E7 io, 7086309.6 network, 2160410.4 memory}
               :           :        :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
               :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
               :           :        :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
               :           :        :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[x AS X0, y1 AS X1]): rowcount = 1869.915, cumulative cost = {1419481.0300000003 rows, 6.89549238E7 cpu, 1.84836E7 io, 9073224.0 network, 4316802.4 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right]): rowcount = 1869.915, cumulative cost = {1417611.1150000002 rows, 6.89549238E7 cpu, 1.84836E7 io, 9073224.0 network, 4316802.4 memory}
               :                 :- Calc(select=[x, y00, y AS y1]): rowcount = 12419.1, cumulative cost = {1415647.2000000002 rows, 6.8847675E7 cpu, 1.8483036E7 io, 9072660.0 network, 4315110.4 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, y], build=[right]): rowcount = 12419.1, cumulative cost = {1403228.1 rows, 6.8847675E7 cpu, 1.8483036E7 io, 9072660.0 network, 4315110.4 memory}
               :                 :     :- Exchange(distribution=[hash[y00]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
               :                 :     :  +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                 :     :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                 :     :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 38513.4, cumulative cost = {372353.20000000007 rows, 8533419.2 cpu, 6161460.0 io, 925005.6000000001 network, 2052.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 1250.6348217654318, cumulative cost = {3543959.2563350457 rows, 2.968814785776984E7 cpu, 5.5452948E7 io, 1832731.8179971601 network, 8357057.040532785 memory}
                  +- Calc(select=[X0, X1]): rowcount = 1250.6348217654318, cumulative cost = {3542708.62151328 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1250.6348217654318, cumulative cost = {3541457.9866915145 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
                        :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
                        :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
                        :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
                        :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
                        :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[y, X1])\n:        +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:           :- [#4] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:           +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#3] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[24])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[12])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :           :           +- Reused(reference_id=[5])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x AS X0, x AS X1])(reuse_id=[15])
         :        :                          :  +- Reused(reference_id=[6])
         :        :                          +- Calc(select=[y0 AS X0, x AS X1])
         :        :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :                                :- Reused(reference_id=[1])
         :        :                                +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n:  :  :        :- [#1] Exchange(distribution=[hash[y]])\n:  :  :        +- [#10] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[x, y0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y00]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[23])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[17])
         :              :                 :                 :- Reused(reference_id=[6])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[y00]])(reuse_id=[22])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[9])
         :              :        +- Exchange(distribution=[hash[x]])
         :              :           +- Calc(select=[x, y0])(reuse_id=[14])
         :              :              +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[13])
         :              :           +- Reused(reference_id=[11])
         :              :- Calc(select=[x, y0])(reuse_id=[21])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :     :- Reused(reference_id=[9])
         :              :     +- Exchange(distribution=[hash[x]])
         :              :        +- Calc(select=[x, y])
         :              :           +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :              :- Reused(reference_id=[1])
         :              :              +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[13])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :           :     :- Reused(reference_id=[14])
         :              :        :           :     +- Reused(reference_id=[12])
         :              :        :           +- Reused(reference_id=[15])
         :              :        +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[9])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Calc(select=[X0, x0])
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])
         :                                :- Reused(reference_id=[16])
         :                                +- Exchange(distribution=[broadcast])(reuse_id=[20])
         :                                   +- Calc(select=[x, x0])
         :                                      +- Reused(reference_id=[17])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[18])
         :- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :  :  :     :- [#8] Exchange(distribution=[hash[y]])\n:  :  :  :     +- [#9] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[x AS X0, X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :  :        :- [#2] Calc(select=[x, y0])\n:  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X1], build=[right])\n:  :        :- [#4] Exchange(distribution=[hash[y00]])\n:  :        +- [#5] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:        :- [#2] Calc(select=[x, y0])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y1 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right])\n      :- Calc(select=[x, y00, y AS y1])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, y], build=[right])\n      :     :- [#4] Exchange(distribution=[hash[y00]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[12])
                  :- Reused(reference_id=[21])
                  :- Reused(reference_id=[7])
                  :- Reused(reference_id=[22])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])(reuse_id=[26])
                  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
                  :              +- Exchange(distribution=[hash[X0, X1]])
                  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                    +- Union(all=[true], union=[X0, X1])
                  :                       :- Calc(select=[x0 AS X0, y AS X1])
                  :                       :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                       :     :- Reused(reference_id=[23])
                  :                       :     +- Reused(reference_id=[7])
                  :                       +- Reused(reference_id=[24])
                  :- Reused(reference_id=[22])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[7])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- Reused(reference_id=[25])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[21])
                  +- Reused(reference_id=[26])

Job has been submitted with JobID a8d09db9fcb2f1216eb67e4ba58402e6
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT r_0.x AS X0, p28_3.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0) UNION (SELECT r_0.x AS X0, p28_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0) UNION (SELECT r_0.x AS X0, r_2.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN r AS r_2 ON r_0.y = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x) UNION (SELECT r_0.x AS X0, r_4.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN a AS a_5 ON r_4.y = a_5.x)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1 UNION (SELECT r_0.x AS X0, p40_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1 INNER JOIN b AS b_4 ON s_2.y = b_4.x) UNION (SELECT r_0.x AS X0, p43_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1) UNION (SELECT r_0.x AS X0, p43_4.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 5b1856d8_02be_4847_8d91_882825b4491d

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT r_0.x AS X0, p28_3.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN b AS b_2 ON r_0.y = b_2.x
                      INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0)
            UNION
            (SELECT r_0.x AS X0, p28_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
                      INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0)
            UNION
            (SELECT r_0.x AS X0, r_2.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN r AS r_2 ON r_0.y = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)
            UNION
            (SELECT r_0.x AS X0, r_4.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN b AS b_3 ON s_2.y = b_3.x
                      INNER JOIN r AS r_4 ON s_2.y = r_4.x
                      INNER JOIN a AS a_5 ON r_4.y = a_5.x)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1
             UNION
             (SELECT r_0.x AS X0, p40_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1
                       INNER JOIN b AS b_4 ON s_2.y = b_4.x)
             UNION
             (SELECT r_0.x AS X0, p43_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_0.y = b_2.x
                       INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1)
             UNION
             (SELECT r_0.x AS X0, p43_4.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN r AS r_3 ON s_2.y = r_3.x
                       INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
         :  :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
         :  :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
         :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$8])
         :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 2912.59226235326, cumulative cost = {2.8672933383409645E7 rows, 8.733157182226516E8 cpu, 3.94326984E8 io, 1.076680992936729E8 network, 6.6467603337281115E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 2912.59226235326, cumulative cost = {2.867002079114729E7 rows, 8.73269116746454E8 cpu, 3.94326984E8 io, 1.076680992936729E8 network, 6.6281197432490505E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 2912.59226235326, cumulative cost = {2.8667108198884938E7 rows, 8.727565005082798E8 cpu, 3.94326984E8 io, 1.0759819707937643E8 network, 6.6281197432490505E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 16067.768315969526, cumulative cost = {2.8664195606622584E7 rows, 8.724994162152243E8 cpu, 3.94326984E8 io, 1.0759819707937643E8 network, 6.6094791527699895E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 13921.166401625342, cumulative cost = {1.7952183613182686E7 rows, 5.3514176242502975E8 cpu, 2.46454428E8 io, 6.591190056063828E7 network, 4.033843677779263E7 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 9941.063312445078, cumulative cost = {1.0950477154817805E7 rows, 2.8972831143322676E8 cpu, 1.5403344E8 io, 3.475152002219337E7 network, 2.5321212919205904E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 9941.063312445078, cumulative cost = {1.094053609150536E7 rows, 2.8972831143322676E8 cpu, 1.5403344E8 io, 3.475152002219337E7 network, 2.5321212919205904E7 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 26526.820594535093, cumulative cost = {7006281.306379433 rows, 2.496636835770026E8 cpu, 9.24204E7 io, 3.1796827432713747E7 network, 1.5016994258586725E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26526.820594535093, cumulative cost = {6979754.485784898 rows, 2.452071777171207E8 cpu, 9.24204E7 io, 3.1160183738444906E7 network, 1.5016994258586725E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26526.820594535093, cumulative cost = {6953227.665190362 rows, 2.4478274858760816E8 cpu, 9.24204E7 io, 3.1160183738444906E7 network, 1.331927774053648E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26526.820594535093, cumulative cost = {6926700.844595827 rows, 2.4011402816296998E8 cpu, 9.24204E7 io, 3.0523540044176064E7 network, 1.331927774053648E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 146339.3324844942, cumulative cost = {6900174.024001292 rows, 2.3777259884321806E8 cpu, 9.24204E7 io, 3.0523540044176064E7 network, 1.1621561222486233E7 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 102055.0192806121, cumulative cost = {5418837.081507478 rows, 1.8296476918432772E8 cpu, 7.3936044E7 io, 2.3408088175363615E7 network, 9318049.179105937 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 89613.57958806484, cumulative cost = {3539576.8880935344 rows, 1.1322025497836874E8 cpu, 4.9291572E7 io, 1.4282047813788552E7 network, 4803361.585946204 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 82813.8530544164, cumulative cost = {2100893.3845408806 rows, 5.797963363802442E7 cpu, 3.0807336E7 io, 7145932.203021051 network, 2451714.1446707817 memory}
         :  :     :              :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 38529.68467775339, cumulative cost = {688813.7532776924 rows, 2972557.130224987 cpu, 1.2323268E7 io, 30487.87137748509 network, 147949.33535829588 memory}
         :  :     :              :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.68467775339, cumulative cost = {650284.068599939 rows, 2972557.130224987 cpu, 1.2323268E7 io, 30487.87137748509 network, 147949.33535829588 memory}
         :  :     :              :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :     :              :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :     :              :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :     :              :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.16837666301, cumulative cost = {1329265.778208772 rows, 5.492426265474501E7 cpu, 1.8484068E7 io, 7115444.3316435665 network, 2303764.8093124856 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.16837666301, cumulative cost = {1284981.609832109 rows, 5.492426265474501E7 cpu, 1.8484068E7 io, 7115444.3316435665 network, 2303764.8093124856 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 38528.78917775339, cumulative cost = {727299.4414554458 rows, 9437008.341322992 cpu, 1.2323292E7 io, 954668.3316435665 network, 146152.6153582959 memory}
         :  :     :              :  :  :           +- Calc(select=[x, X0]): rowcount = 38528.78917775339, cumulative cost = {688770.6522776925 rows, 2964171.759460422 cpu, 1.2323292E7 io, 29977.39137748509 network, 146152.6153582959 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 38528.78917775339, cumulative cost = {650241.8630999391 rows, 2964171.759460422 cpu, 1.2323292E7 io, 29977.39137748509 network, 146152.6153582959 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 159.59451835589724, cumulative cost = {355014.0739221857 rows, 909303.0033135752 cpu, 6162516.0 io, 29977.39137748509 network, 137215.32233036566 memory}
         :  :     :              :  :  :                    +- Calc(select=[X0, x0]): rowcount = 159.59451835589724, cumulative cost = {354854.4794038298 rows, 883767.8803766316 cpu, 6162516.0 io, 26147.122936943557 network, 137215.32233036566 memory}
         :  :     :              :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 159.59451835589724, cumulative cost = {354694.8848854739 rows, 883767.8803766316 cpu, 6162516.0 io, 26147.122936943557 network, 137215.32233036566 memory}
         :  :     :              :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :     :              :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :     :              :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :     :              :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :     :              :  :  :                             +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 6799.7265336484425, cumulative cost = {1349069.923964589 rows, 5.515100776075626E7 cpu, 1.8484236E7 io, 7136115.610767501 network, 2351647.441275422 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 6799.7265336484425, cumulative cost = {1342270.1974309403 rows, 5.515100776075626E7 cpu, 1.8484236E7 io, 7136115.610767501 network, 2351647.441275422 memory}
         :  :     :              :  :        :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :     :              :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :     :              :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :     :              :  :        :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :     :              :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 12441.439692547267, cumulative cost = {1777205.1741333317 rows, 6.964245918667838E7 cpu, 2.4644472E7 io, 9126040.361575063 network, 4514687.593159734 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 12441.439692547267, cumulative cost = {1764763.7344407844 rows, 6.964245918667838E7 cpu, 2.4644472E7 io, 9126040.361575063 network, 4514687.593159734 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y00]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :  :     :              :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :        :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 38662.33128364844, cumulative cost = {733866.4947482373 rows, 9327011.936409198 cpu, 1.2322896E7 io, 978385.9615750639 network, 193289.04127542186 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 39746.934821765426, cumulative cost = {3924313.7218134813 rows, 3.9534437812893756E7 cpu, 6.161304E7 io, 2954692.589479629 network, 8818716.707325213 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 39746.934821765426, cumulative cost = {3884566.786991716 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39746.934821765426, cumulative cost = {3844819.8521699505 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 8280.565478436212, cumulative cost = {3548373.917348185 rows, 3.0737116239009675E7 cpu, 5.5452264E7 io, 2000766.1537572588 network, 8355005.040532785 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                             :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                             :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                             :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :                             :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :                             :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :                             :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :                             :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :                             :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 3980.103089180264, cumulative cost = {6987785.291963257 rows, 2.4539952982540137E8 cpu, 9.2420988E7 io, 3.1160380538444906E7 network, 1.5017223858586725E7 memory}
         :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 3980.103089180264, cumulative cost = {6983805.188874077 rows, 2.4539952982540137E8 cpu, 9.2420988E7 io, 3.1160380538444906E7 network, 1.5017223858586725E7 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26526.820594535093, cumulative cost = {6979754.485784898 rows, 2.452071777171207E8 cpu, 9.24204E7 io, 3.1160183738444906E7 network, 1.5016994258586725E7 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26526.820594535093, cumulative cost = {6953227.665190362 rows, 2.4478274858760816E8 cpu, 9.24204E7 io, 3.1160183738444906E7 network, 1.331927774053648E7 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26526.820594535093, cumulative cost = {6926700.844595827 rows, 2.4011402816296998E8 cpu, 9.24204E7 io, 3.0523540044176064E7 network, 1.331927774053648E7 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 146339.3324844942, cumulative cost = {6900174.024001292 rows, 2.3777259884321806E8 cpu, 9.24204E7 io, 3.0523540044176064E7 network, 1.1621561222486233E7 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 102055.0192806121, cumulative cost = {5418837.081507478 rows, 1.8296476918432772E8 cpu, 7.3936044E7 io, 2.3408088175363615E7 network, 9318049.179105937 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 89613.57958806484, cumulative cost = {3539576.8880935344 rows, 1.1322025497836874E8 cpu, 4.9291572E7 io, 1.4282047813788552E7 network, 4803361.585946204 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 82813.8530544164, cumulative cost = {2100893.3845408806 rows, 5.797963363802442E7 cpu, 3.0807336E7 io, 7145932.203021051 network, 2451714.1446707817 memory}
         :        :           :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 38529.68467775339, cumulative cost = {688813.7532776924 rows, 2972557.130224987 cpu, 1.2323268E7 io, 30487.87137748509 network, 147949.33535829588 memory}
         :        :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.68467775339, cumulative cost = {650284.068599939 rows, 2972557.130224987 cpu, 1.2323268E7 io, 30487.87137748509 network, 147949.33535829588 memory}
         :        :           :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :        :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :        :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :        :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :        :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.16837666301, cumulative cost = {1329265.778208772 rows, 5.492426265474501E7 cpu, 1.8484068E7 io, 7115444.3316435665 network, 2303764.8093124856 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.16837666301, cumulative cost = {1284981.609832109 rows, 5.492426265474501E7 cpu, 1.8484068E7 io, 7115444.3316435665 network, 2303764.8093124856 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 38528.78917775339, cumulative cost = {727299.4414554458 rows, 9437008.341322992 cpu, 1.2323292E7 io, 954668.3316435665 network, 146152.6153582959 memory}
         :        :           :  :  :           +- Calc(select=[x, X0]): rowcount = 38528.78917775339, cumulative cost = {688770.6522776925 rows, 2964171.759460422 cpu, 1.2323292E7 io, 29977.39137748509 network, 146152.6153582959 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 38528.78917775339, cumulative cost = {650241.8630999391 rows, 2964171.759460422 cpu, 1.2323292E7 io, 29977.39137748509 network, 146152.6153582959 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 159.59451835589724, cumulative cost = {355014.0739221857 rows, 909303.0033135752 cpu, 6162516.0 io, 29977.39137748509 network, 137215.32233036566 memory}
         :        :           :  :  :                    +- Calc(select=[X0, x0]): rowcount = 159.59451835589724, cumulative cost = {354854.4794038298 rows, 883767.8803766316 cpu, 6162516.0 io, 26147.122936943557 network, 137215.32233036566 memory}
         :        :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 159.59451835589724, cumulative cost = {354694.8848854739 rows, 883767.8803766316 cpu, 6162516.0 io, 26147.122936943557 network, 137215.32233036566 memory}
         :        :           :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :        :           :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :        :           :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :        :           :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :        :           :  :  :                             +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 6799.7265336484425, cumulative cost = {1349069.923964589 rows, 5.515100776075626E7 cpu, 1.8484236E7 io, 7136115.610767501 network, 2351647.441275422 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 6799.7265336484425, cumulative cost = {1342270.1974309403 rows, 5.515100776075626E7 cpu, 1.8484236E7 io, 7136115.610767501 network, 2351647.441275422 memory}
         :        :           :  :        :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :        :           :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :        :           :  :        :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :        :           :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :           :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :           :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :           :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :           :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :           :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 12441.439692547267, cumulative cost = {1777205.1741333317 rows, 6.964245918667838E7 cpu, 2.4644472E7 io, 9126040.361575063 network, 4514687.593159734 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 12441.439692547267, cumulative cost = {1764763.7344407844 rows, 6.964245918667838E7 cpu, 2.4644472E7 io, 9126040.361575063 network, 4514687.593159734 memory}
         :        :           :        :- Exchange(distribution=[hash[y00]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :        :           :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :        :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 38662.33128364844, cumulative cost = {733866.4947482373 rows, 9327011.936409198 cpu, 1.2322896E7 io, 978385.9615750639 network, 193289.04127542186 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 2146.601914344184, cumulative cost = {1.0695944225123927E7 rows, 3.373415860218786E8 cpu, 1.47872556E8 io, 4.168629651873816E7 network, 2.5756354749907263E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2146.601914344184, cumulative cost = {1.0693797623209583E7 rows, 3.373415860218786E8 cpu, 1.47872556E8 io, 4.168629651873816E7 network, 2.5756354749907263E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 13060.044607195796, cumulative cost = {7147691.764960193 rows, 3.0753895272867703E8 cpu, 9.2419608E7 io, 3.9853564700741E7 network, 1.7329262159355614E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 13060.044607195796, cumulative cost = {7134631.720352997 rows, 3.073299920149619E8 cpu, 9.2419608E7 io, 3.9853564700741E7 network, 1.6493419304495085E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 13060.044607195796, cumulative cost = {7121571.675745801 rows, 3.0503142416409546E8 cpu, 9.2419608E7 io, 3.9540123630168304E7 network, 1.6493419304495085E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 72047.76777615352, cumulative cost = {7108511.631138605 rows, 3.03878659879677E8 cpu, 9.2419608E7 io, 3.9540123630168304E7 network, 1.5657576449634554E7 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 70177.85277615352, cumulative cost = {5616982.833362452 rows, 2.3485168831190085E8 cpu, 7.3936008E7 io, 3.0466899630168304E7 network, 1.1340774049634553E7 memory}
               :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 63527.05752615352, cumulative cost = {4559099.420086298 rows, 1.8039907497912472E8 cpu, 6.1613208E7 io, 2.3380590030168302E7 network, 9180363.649634553 memory}
               :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 51085.415944982495, cumulative cost = {2723958.9555662 rows, 1.1041603773428817E8 cpu, 3.6968688E7 io, 1.425347467068275E7 network, 4661981.684420982 memory}
               :           :  :  :  :- Calc(select=[x AS X0, X1]): rowcount = 44284.343487175654, cumulative cost = {1329397.1324974215 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 44284.343487175654, cumulative cost = {1285112.7890102458 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :  :  :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 38529.95658117102, cumulative cost = {727430.4455230703 rows, 9449866.786957398 cpu, 1.2323628E7 io, 955540.3641845626 network, 149037.67429901776 memory}
               :           :  :  :  :        +- Calc(select=[x, X1]): rowcount = 38529.95658117102, cumulative cost = {688900.4889418993 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.95658117102, cumulative cost = {650370.5323607282 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 167.37720780683773, cumulative cost = {355141.5757795572 rows, 921903.063658211 cpu, 6162852.0 io, 30821.40623645814 network, 139664.55066183486 memory}
               :           :  :  :  :                 +- Calc(select=[X0, X1]): rowcount = 167.37720780683773, cumulative cost = {354974.19857175037 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :  :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 167.37720780683773, cumulative cost = {354806.8213639435 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :  :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :  :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :  :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :  :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :  :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  +- Calc(select=[x AS X0, X1]): rowcount = 6801.0724578068375, cumulative cost = {1343476.407123796 rows, 5.542782187873642E7 cpu, 1.8484284E7 io, 7137158.306498188 network, 2355266.4415763877 memory}
               :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 6801.0724578068375, cumulative cost = {1336675.334665989 rows, 5.542782187873642E7 cpu, 1.8484284E7 io, 7137158.306498188 network, 2355266.4415763877 memory}
               :           :  :  :        :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
               :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
               :           :  :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
               :           :  :  :        :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :  :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :  :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
               :           :  :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :                       :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :                       :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :  :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  +- Calc(select=[x AS X0, X1]): rowcount = 12441.641581171025, cumulative cost = {1771613.4069939447 rows, 6.991951018731041E7 cpu, 2.464452E7 io, 9127115.359485552 network, 4518381.965213571 memory}
               :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X1], build=[right]): rowcount = 12441.641581171025, cumulative cost = {1759171.7654127737 rows, 6.991951018731041E7 cpu, 2.464452E7 io, 9127115.359485552 network, 4518381.965213571 memory}
               :           :  :        :- Exchange(distribution=[hash[y00]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
               :           :  :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :  :        :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 38663.67720780684, cumulative cost = {728274.3238316027 rows, 9604052.16964796 cpu, 1.2322944E7 io, 979460.9594855522 network, 196908.0415763876 memory}
               :           :  :           +- Calc(select=[x, X1]): rowcount = 38663.67720780684, cumulative cost = {689610.6466237959 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38663.67720780684, cumulative cost = {650946.969415989 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
               :           :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                                :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 6650.79525, cumulative cost = {987705.5605 rows, 5.4382435480000004E7 cpu, 1.23228E7 io, 7086309.6 network, 2160410.4 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 6650.79525, cumulative cost = {981054.76525 rows, 5.4382435480000004E7 cpu, 1.23228E7 io, 7086309.6 network, 2160410.4 memory}
               :           :        :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
               :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
               :           :        :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
               :           :        :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[x AS X0, y1 AS X1]): rowcount = 1869.915, cumulative cost = {1419481.0300000003 rows, 6.89549238E7 cpu, 1.84836E7 io, 9073224.0 network, 4316802.4 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right]): rowcount = 1869.915, cumulative cost = {1417611.1150000002 rows, 6.89549238E7 cpu, 1.84836E7 io, 9073224.0 network, 4316802.4 memory}
               :                 :- Calc(select=[x, y00, y AS y1]): rowcount = 12419.1, cumulative cost = {1415647.2000000002 rows, 6.8847675E7 cpu, 1.8483036E7 io, 9072660.0 network, 4315110.4 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, y], build=[right]): rowcount = 12419.1, cumulative cost = {1403228.1 rows, 6.8847675E7 cpu, 1.8483036E7 io, 9072660.0 network, 4315110.4 memory}
               :                 :     :- Exchange(distribution=[hash[y00]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
               :                 :     :  +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                 :     :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                 :     :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 38513.4, cumulative cost = {372353.20000000007 rows, 8533419.2 cpu, 6161460.0 io, 925005.6000000001 network, 2052.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 1250.6348217654318, cumulative cost = {3543959.2563350457 rows, 2.968814785776984E7 cpu, 5.5452948E7 io, 1832731.8179971601 network, 8357057.040532785 memory}
                  +- Calc(select=[X0, X1]): rowcount = 1250.6348217654318, cumulative cost = {3542708.62151328 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1250.6348217654318, cumulative cost = {3541457.9866915145 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
                        :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
                        :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
                        :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
                        :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
                        :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[y, X1])\n:        +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:           :- [#4] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:           +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#3] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[24])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[12])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :           :           +- Reused(reference_id=[5])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x AS X0, x AS X1])(reuse_id=[15])
         :        :                          :  +- Reused(reference_id=[6])
         :        :                          +- Calc(select=[y0 AS X0, x AS X1])
         :        :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :                                :- Reused(reference_id=[1])
         :        :                                +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n:  :  :        :- [#1] Exchange(distribution=[hash[y]])\n:  :  :        +- [#10] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[x, y0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y00]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[23])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[17])
         :              :                 :                 :- Reused(reference_id=[6])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[y00]])(reuse_id=[22])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[9])
         :              :        +- Exchange(distribution=[hash[x]])
         :              :           +- Calc(select=[x, y0])(reuse_id=[14])
         :              :              +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[13])
         :              :           +- Reused(reference_id=[11])
         :              :- Calc(select=[x, y0])(reuse_id=[21])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :     :- Reused(reference_id=[9])
         :              :     +- Exchange(distribution=[hash[x]])
         :              :        +- Calc(select=[x, y])
         :              :           +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :              :- Reused(reference_id=[1])
         :              :              +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[13])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :           :     :- Reused(reference_id=[14])
         :              :        :           :     +- Reused(reference_id=[12])
         :              :        :           +- Reused(reference_id=[15])
         :              :        +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[9])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Calc(select=[X0, x0])
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])
         :                                :- Reused(reference_id=[16])
         :                                +- Exchange(distribution=[broadcast])(reuse_id=[20])
         :                                   +- Calc(select=[x, x0])
         :                                      +- Reused(reference_id=[17])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[18])
         :- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :  :  :     :- [#8] Exchange(distribution=[hash[y]])\n:  :  :  :     +- [#9] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[x AS X0, X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :  :        :- [#2] Calc(select=[x, y0])\n:  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X1], build=[right])\n:  :        :- [#4] Exchange(distribution=[hash[y00]])\n:  :        +- [#5] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:        :- [#2] Calc(select=[x, y0])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y1 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right])\n      :- Calc(select=[x, y00, y AS y1])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, y], build=[right])\n      :     :- [#4] Exchange(distribution=[hash[y00]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[12])
                  :- Reused(reference_id=[21])
                  :- Reused(reference_id=[7])
                  :- Reused(reference_id=[22])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])(reuse_id=[26])
                  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
                  :              +- Exchange(distribution=[hash[X0, X1]])
                  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                    +- Union(all=[true], union=[X0, X1])
                  :                       :- Calc(select=[x0 AS X0, y AS X1])
                  :                       :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                       :     :- Reused(reference_id=[23])
                  :                       :     +- Reused(reference_id=[7])
                  :                       +- Reused(reference_id=[24])
                  :- Reused(reference_id=[22])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[7])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- Reused(reference_id=[25])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[21])
                  +- Reused(reference_id=[26])

Job has been submitted with JobID 1b9c0cbc6cf4102b3e9425239d01caeb
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT r_0.x AS X0, p28_3.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0) UNION (SELECT r_0.x AS X0, p28_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0) UNION (SELECT r_0.x AS X0, r_2.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN r AS r_2 ON r_0.y = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x) UNION (SELECT r_0.x AS X0, r_4.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN a AS a_5 ON r_4.y = a_5.x)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1 UNION (SELECT r_0.x AS X0, p40_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1 INNER JOIN b AS b_4 ON s_2.y = b_4.x) UNION (SELECT r_0.x AS X0, p43_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1) UNION (SELECT r_0.x AS X0, p43_4.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: a4d4b4cf_6ddc_4165_945a_028df791706b

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT r_0.x AS X0, p28_3.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN b AS b_2 ON r_0.y = b_2.x
                      INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0)
            UNION
            (SELECT r_0.x AS X0, p28_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
                      INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0)
            UNION
            (SELECT r_0.x AS X0, r_2.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN r AS r_2 ON r_0.y = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)
            UNION
            (SELECT r_0.x AS X0, r_4.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN b AS b_3 ON s_2.y = b_3.x
                      INNER JOIN r AS r_4 ON s_2.y = r_4.x
                      INNER JOIN a AS a_5 ON r_4.y = a_5.x)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1
             UNION
             (SELECT r_0.x AS X0, p40_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1
                       INNER JOIN b AS b_4 ON s_2.y = b_4.x)
             UNION
             (SELECT r_0.x AS X0, p43_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_0.y = b_2.x
                       INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1)
             UNION
             (SELECT r_0.x AS X0, p43_4.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN r AS r_3 ON s_2.y = r_3.x
                       INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
         :  :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
         :  :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
         :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$8])
         :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 2912.59226235326, cumulative cost = {2.8672933383409645E7 rows, 8.733157182226516E8 cpu, 3.94326984E8 io, 1.076680992936729E8 network, 6.6467603337281115E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 2912.59226235326, cumulative cost = {2.867002079114729E7 rows, 8.73269116746454E8 cpu, 3.94326984E8 io, 1.076680992936729E8 network, 6.6281197432490505E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 2912.59226235326, cumulative cost = {2.8667108198884938E7 rows, 8.727565005082798E8 cpu, 3.94326984E8 io, 1.0759819707937643E8 network, 6.6281197432490505E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 16067.768315969526, cumulative cost = {2.8664195606622584E7 rows, 8.724994162152243E8 cpu, 3.94326984E8 io, 1.0759819707937643E8 network, 6.6094791527699895E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 13921.166401625342, cumulative cost = {1.7952183613182686E7 rows, 5.3514176242502975E8 cpu, 2.46454428E8 io, 6.591190056063828E7 network, 4.033843677779263E7 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 9941.063312445078, cumulative cost = {1.0950477154817805E7 rows, 2.8972831143322676E8 cpu, 1.5403344E8 io, 3.475152002219337E7 network, 2.5321212919205904E7 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 9941.063312445078, cumulative cost = {1.094053609150536E7 rows, 2.8972831143322676E8 cpu, 1.5403344E8 io, 3.475152002219337E7 network, 2.5321212919205904E7 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 26526.820594535093, cumulative cost = {7006281.306379433 rows, 2.496636835770026E8 cpu, 9.24204E7 io, 3.1796827432713747E7 network, 1.5016994258586725E7 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26526.820594535093, cumulative cost = {6979754.485784898 rows, 2.452071777171207E8 cpu, 9.24204E7 io, 3.1160183738444906E7 network, 1.5016994258586725E7 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26526.820594535093, cumulative cost = {6953227.665190362 rows, 2.4478274858760816E8 cpu, 9.24204E7 io, 3.1160183738444906E7 network, 1.331927774053648E7 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26526.820594535093, cumulative cost = {6926700.844595827 rows, 2.4011402816296998E8 cpu, 9.24204E7 io, 3.0523540044176064E7 network, 1.331927774053648E7 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 146339.3324844942, cumulative cost = {6900174.024001292 rows, 2.3777259884321806E8 cpu, 9.24204E7 io, 3.0523540044176064E7 network, 1.1621561222486233E7 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 102055.0192806121, cumulative cost = {5418837.081507478 rows, 1.8296476918432772E8 cpu, 7.3936044E7 io, 2.3408088175363615E7 network, 9318049.179105937 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 89613.57958806484, cumulative cost = {3539576.8880935344 rows, 1.1322025497836874E8 cpu, 4.9291572E7 io, 1.4282047813788552E7 network, 4803361.585946204 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 82813.8530544164, cumulative cost = {2100893.3845408806 rows, 5.797963363802442E7 cpu, 3.0807336E7 io, 7145932.203021051 network, 2451714.1446707817 memory}
         :  :     :              :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 38529.68467775339, cumulative cost = {688813.7532776924 rows, 2972557.130224987 cpu, 1.2323268E7 io, 30487.87137748509 network, 147949.33535829588 memory}
         :  :     :              :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.68467775339, cumulative cost = {650284.068599939 rows, 2972557.130224987 cpu, 1.2323268E7 io, 30487.87137748509 network, 147949.33535829588 memory}
         :  :     :              :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :     :              :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :     :              :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :     :              :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :     :              :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.16837666301, cumulative cost = {1329265.778208772 rows, 5.492426265474501E7 cpu, 1.8484068E7 io, 7115444.3316435665 network, 2303764.8093124856 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.16837666301, cumulative cost = {1284981.609832109 rows, 5.492426265474501E7 cpu, 1.8484068E7 io, 7115444.3316435665 network, 2303764.8093124856 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 38528.78917775339, cumulative cost = {727299.4414554458 rows, 9437008.341322992 cpu, 1.2323292E7 io, 954668.3316435665 network, 146152.6153582959 memory}
         :  :     :              :  :  :           +- Calc(select=[x, X0]): rowcount = 38528.78917775339, cumulative cost = {688770.6522776925 rows, 2964171.759460422 cpu, 1.2323292E7 io, 29977.39137748509 network, 146152.6153582959 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 38528.78917775339, cumulative cost = {650241.8630999391 rows, 2964171.759460422 cpu, 1.2323292E7 io, 29977.39137748509 network, 146152.6153582959 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 159.59451835589724, cumulative cost = {355014.0739221857 rows, 909303.0033135752 cpu, 6162516.0 io, 29977.39137748509 network, 137215.32233036566 memory}
         :  :     :              :  :  :                    +- Calc(select=[X0, x0]): rowcount = 159.59451835589724, cumulative cost = {354854.4794038298 rows, 883767.8803766316 cpu, 6162516.0 io, 26147.122936943557 network, 137215.32233036566 memory}
         :  :     :              :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 159.59451835589724, cumulative cost = {354694.8848854739 rows, 883767.8803766316 cpu, 6162516.0 io, 26147.122936943557 network, 137215.32233036566 memory}
         :  :     :              :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :     :              :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :     :              :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :     :              :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :     :              :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :     :              :  :  :                             +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 6799.7265336484425, cumulative cost = {1349069.923964589 rows, 5.515100776075626E7 cpu, 1.8484236E7 io, 7136115.610767501 network, 2351647.441275422 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 6799.7265336484425, cumulative cost = {1342270.1974309403 rows, 5.515100776075626E7 cpu, 1.8484236E7 io, 7136115.610767501 network, 2351647.441275422 memory}
         :  :     :              :  :        :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :     :              :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :  :     :              :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :  :     :              :  :        :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :     :              :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :     :              :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 12441.439692547267, cumulative cost = {1777205.1741333317 rows, 6.964245918667838E7 cpu, 2.4644472E7 io, 9126040.361575063 network, 4514687.593159734 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 12441.439692547267, cumulative cost = {1764763.7344407844 rows, 6.964245918667838E7 cpu, 2.4644472E7 io, 9126040.361575063 network, 4514687.593159734 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y00]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :  :     :              :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :     :              :        :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :              :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :     :              :        :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 38662.33128364844, cumulative cost = {733866.4947482373 rows, 9327011.936409198 cpu, 1.2322896E7 io, 978385.9615750639 network, 193289.04127542186 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 39746.934821765426, cumulative cost = {3924313.7218134813 rows, 3.9534437812893756E7 cpu, 6.161304E7 io, 2954692.589479629 network, 8818716.707325213 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 39746.934821765426, cumulative cost = {3884566.786991716 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39746.934821765426, cumulative cost = {3844819.8521699505 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[broadcast]): rowcount = 8280.565478436212, cumulative cost = {3548373.917348185 rows, 3.0737116239009675E7 cpu, 5.5452264E7 io, 2000766.1537572588 network, 8355005.040532785 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                             :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                             :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                             :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :                             :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :                             :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :                             :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :                             :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :                             :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                             :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                             :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                             :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 3980.103089180264, cumulative cost = {6987785.291963257 rows, 2.4539952982540137E8 cpu, 9.2420988E7 io, 3.1160380538444906E7 network, 1.5017223858586725E7 memory}
         :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 3980.103089180264, cumulative cost = {6983805.188874077 rows, 2.4539952982540137E8 cpu, 9.2420988E7 io, 3.1160380538444906E7 network, 1.5017223858586725E7 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26526.820594535093, cumulative cost = {6979754.485784898 rows, 2.452071777171207E8 cpu, 9.24204E7 io, 3.1160183738444906E7 network, 1.5016994258586725E7 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26526.820594535093, cumulative cost = {6953227.665190362 rows, 2.4478274858760816E8 cpu, 9.24204E7 io, 3.1160183738444906E7 network, 1.331927774053648E7 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26526.820594535093, cumulative cost = {6926700.844595827 rows, 2.4011402816296998E8 cpu, 9.24204E7 io, 3.0523540044176064E7 network, 1.331927774053648E7 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 146339.3324844942, cumulative cost = {6900174.024001292 rows, 2.3777259884321806E8 cpu, 9.24204E7 io, 3.0523540044176064E7 network, 1.1621561222486233E7 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 102055.0192806121, cumulative cost = {5418837.081507478 rows, 1.8296476918432772E8 cpu, 7.3936044E7 io, 2.3408088175363615E7 network, 9318049.179105937 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 89613.57958806484, cumulative cost = {3539576.8880935344 rows, 1.1322025497836874E8 cpu, 4.9291572E7 io, 1.4282047813788552E7 network, 4803361.585946204 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 82813.8530544164, cumulative cost = {2100893.3845408806 rows, 5.797963363802442E7 cpu, 3.0807336E7 io, 7145932.203021051 network, 2451714.1446707817 memory}
         :        :           :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 38529.68467775339, cumulative cost = {688813.7532776924 rows, 2972557.130224987 cpu, 1.2323268E7 io, 30487.87137748509 network, 147949.33535829588 memory}
         :        :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.68467775339, cumulative cost = {650284.068599939 rows, 2972557.130224987 cpu, 1.2323268E7 io, 30487.87137748509 network, 147949.33535829588 memory}
         :        :           :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :        :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :        :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :        :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :        :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :        :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.16837666301, cumulative cost = {1329265.778208772 rows, 5.492426265474501E7 cpu, 1.8484068E7 io, 7115444.3316435665 network, 2303764.8093124856 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.16837666301, cumulative cost = {1284981.609832109 rows, 5.492426265474501E7 cpu, 1.8484068E7 io, 7115444.3316435665 network, 2303764.8093124856 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 38528.78917775339, cumulative cost = {727299.4414554458 rows, 9437008.341322992 cpu, 1.2323292E7 io, 954668.3316435665 network, 146152.6153582959 memory}
         :        :           :  :  :           +- Calc(select=[x, X0]): rowcount = 38528.78917775339, cumulative cost = {688770.6522776925 rows, 2964171.759460422 cpu, 1.2323292E7 io, 29977.39137748509 network, 146152.6153582959 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 38528.78917775339, cumulative cost = {650241.8630999391 rows, 2964171.759460422 cpu, 1.2323292E7 io, 29977.39137748509 network, 146152.6153582959 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 159.59451835589724, cumulative cost = {355014.0739221857 rows, 909303.0033135752 cpu, 6162516.0 io, 29977.39137748509 network, 137215.32233036566 memory}
         :        :           :  :  :                    +- Calc(select=[X0, x0]): rowcount = 159.59451835589724, cumulative cost = {354854.4794038298 rows, 883767.8803766316 cpu, 6162516.0 io, 26147.122936943557 network, 137215.32233036566 memory}
         :        :           :  :  :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 159.59451835589724, cumulative cost = {354694.8848854739 rows, 883767.8803766316 cpu, 6162516.0 io, 26147.122936943557 network, 137215.32233036566 memory}
         :        :           :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :        :           :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :        :           :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :        :           :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :        :           :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :        :           :  :  :                             +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 6799.7265336484425, cumulative cost = {1349069.923964589 rows, 5.515100776075626E7 cpu, 1.8484236E7 io, 7136115.610767501 network, 2351647.441275422 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 6799.7265336484425, cumulative cost = {1342270.1974309403 rows, 5.515100776075626E7 cpu, 1.8484236E7 io, 7136115.610767501 network, 2351647.441275422 memory}
         :        :           :  :        :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
         :        :           :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
         :        :           :  :        :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :           :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :        :           :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :           :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :           :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :           :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :           :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :           :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 12441.439692547267, cumulative cost = {1777205.1741333317 rows, 6.964245918667838E7 cpu, 2.4644472E7 io, 9126040.361575063 network, 4514687.593159734 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 12441.439692547267, cumulative cost = {1764763.7344407844 rows, 6.964245918667838E7 cpu, 2.4644472E7 io, 9126040.361575063 network, 4514687.593159734 memory}
         :        :           :        :- Exchange(distribution=[hash[y00]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
         :        :           :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :           :        :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :           :        :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 38662.33128364844, cumulative cost = {733866.4947482373 rows, 9327011.936409198 cpu, 1.2322896E7 io, 978385.9615750639 network, 193289.04127542186 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 2146.601914344184, cumulative cost = {1.0695944225123927E7 rows, 3.373415860218786E8 cpu, 1.47872556E8 io, 4.168629651873816E7 network, 2.5756354749907263E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2146.601914344184, cumulative cost = {1.0693797623209583E7 rows, 3.373415860218786E8 cpu, 1.47872556E8 io, 4.168629651873816E7 network, 2.5756354749907263E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 13060.044607195796, cumulative cost = {7147691.764960193 rows, 3.0753895272867703E8 cpu, 9.2419608E7 io, 3.9853564700741E7 network, 1.7329262159355614E7 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 13060.044607195796, cumulative cost = {7134631.720352997 rows, 3.073299920149619E8 cpu, 9.2419608E7 io, 3.9853564700741E7 network, 1.6493419304495085E7 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 13060.044607195796, cumulative cost = {7121571.675745801 rows, 3.0503142416409546E8 cpu, 9.2419608E7 io, 3.9540123630168304E7 network, 1.6493419304495085E7 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 72047.76777615352, cumulative cost = {7108511.631138605 rows, 3.03878659879677E8 cpu, 9.2419608E7 io, 3.9540123630168304E7 network, 1.5657576449634554E7 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 70177.85277615352, cumulative cost = {5616982.833362452 rows, 2.3485168831190085E8 cpu, 7.3936008E7 io, 3.0466899630168304E7 network, 1.1340774049634553E7 memory}
               :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 63527.05752615352, cumulative cost = {4559099.420086298 rows, 1.8039907497912472E8 cpu, 6.1613208E7 io, 2.3380590030168302E7 network, 9180363.649634553 memory}
               :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 51085.415944982495, cumulative cost = {2723958.9555662 rows, 1.1041603773428817E8 cpu, 3.6968688E7 io, 1.425347467068275E7 network, 4661981.684420982 memory}
               :           :  :  :  :- Calc(select=[x AS X0, X1]): rowcount = 44284.343487175654, cumulative cost = {1329397.1324974215 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 44284.343487175654, cumulative cost = {1285112.7890102458 rows, 5.493713043960676E7 cpu, 1.8484404E7 io, 7116316.364184562 network, 2306715.2428445946 memory}
               :           :  :  :  :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 38529.95658117102, cumulative cost = {727430.4455230703 rows, 9449866.786957398 cpu, 1.2323628E7 io, 955540.3641845626 network, 149037.67429901776 memory}
               :           :  :  :  :        +- Calc(select=[x, X1]): rowcount = 38529.95658117102, cumulative cost = {688900.4889418993 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.95658117102, cumulative cost = {650370.5323607282 rows, 2976834.081320666 cpu, 1.2323628E7 io, 30821.40623645814 network, 149037.67429901776 memory}
               :           :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 167.37720780683773, cumulative cost = {355141.5757795572 rows, 921903.063658211 cpu, 6162852.0 io, 30821.40623645814 network, 139664.55066183486 memory}
               :           :  :  :  :                 +- Calc(select=[X0, X1]): rowcount = 167.37720780683773, cumulative cost = {354974.19857175037 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :  :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 167.37720780683773, cumulative cost = {354806.8213639435 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
               :           :  :  :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :  :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :  :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :  :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :  :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  +- Calc(select=[x AS X0, X1]): rowcount = 6801.0724578068375, cumulative cost = {1343476.407123796 rows, 5.542782187873642E7 cpu, 1.8484284E7 io, 7137158.306498188 network, 2355266.4415763877 memory}
               :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 6801.0724578068375, cumulative cost = {1336675.334665989 rows, 5.542782187873642E7 cpu, 1.8484284E7 io, 7137158.306498188 network, 2355266.4415763877 memory}
               :           :  :  :        :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
               :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
               :           :  :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
               :           :  :  :        :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :  :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :  :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
               :           :  :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :                       :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :  :                       :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :  :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :  +- Calc(select=[x AS X0, X1]): rowcount = 12441.641581171025, cumulative cost = {1771613.4069939447 rows, 6.991951018731041E7 cpu, 2.464452E7 io, 9127115.359485552 network, 4518381.965213571 memory}
               :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X1], build=[right]): rowcount = 12441.641581171025, cumulative cost = {1759171.7654127737 rows, 6.991951018731041E7 cpu, 2.464452E7 io, 9127115.359485552 network, 4518381.965213571 memory}
               :           :  :        :- Exchange(distribution=[hash[y00]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
               :           :  :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :           :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :           :  :        :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 38663.67720780684, cumulative cost = {728274.3238316027 rows, 9604052.16964796 cpu, 1.2322944E7 io, 979460.9594855522 network, 196908.0415763876 memory}
               :           :  :           +- Calc(select=[x, X1]): rowcount = 38663.67720780684, cumulative cost = {689610.6466237959 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38663.67720780684, cumulative cost = {650946.969415989 rows, 3108554.398736411 cpu, 1.2322944E7 io, 51532.70649818807 network, 196908.0415763876 memory}
               :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
               :           :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
               :           :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
               :           :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
               :           :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
               :           :  :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
               :           :  :                                :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 6650.79525, cumulative cost = {987705.5605 rows, 5.4382435480000004E7 cpu, 1.23228E7 io, 7086309.6 network, 2160410.4 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 6650.79525, cumulative cost = {981054.76525 rows, 5.4382435480000004E7 cpu, 1.23228E7 io, 7086309.6 network, 2160410.4 memory}
               :           :        :- Calc(select=[x, y0]): rowcount = 44281.635, cumulative cost = {974289.9700000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
               :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44281.635, cumulative cost = {930008.3350000001 rows, 5.4018606400000006E7 cpu, 1.2322116E7 io, 7085625.6 network, 2158358.4 memory}
               :           :        :     :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :           :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :     +- Exchange(distribution=[hash[x]]): rowcount = 38511.9, cumulative cost = {372328.70000000007 rows, 8531487.2 cpu, 6161340.0 io, 924849.6000000001 network, 1692.0 memory}
               :           :        :        +- Calc(select=[x, y]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :        :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[x AS X0, y1 AS X1]): rowcount = 1869.915, cumulative cost = {1419481.0300000003 rows, 6.89549238E7 cpu, 1.84836E7 io, 9073224.0 network, 4316802.4 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right]): rowcount = 1869.915, cumulative cost = {1417611.1150000002 rows, 6.89549238E7 cpu, 1.84836E7 io, 9073224.0 network, 4316802.4 memory}
               :                 :- Calc(select=[x, y00, y AS y1]): rowcount = 12419.1, cumulative cost = {1415647.2000000002 rows, 6.8847675E7 cpu, 1.8483036E7 io, 9072660.0 network, 4315110.4 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, y], build=[right]): rowcount = 12419.1, cumulative cost = {1403228.1 rows, 6.8847675E7 cpu, 1.8483036E7 io, 9072660.0 network, 4315110.4 memory}
               :                 :     :- Exchange(distribution=[hash[y00]]): rowcount = 44280.6, cumulative cost = {1018455.7999999999 rows, 5.96519038E7 cpu, 1.2321576E7 io, 8147654.4 network, 2156308.0 memory}
               :                 :     :  +- Calc(select=[x, y0 AS y00]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :     :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                 :     :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :        +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                 :     :           +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                 :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :     :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 38513.4, cumulative cost = {372353.20000000007 rows, 8533419.2 cpu, 6161460.0 io, 925005.6000000001 network, 2052.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 38513.4, cumulative cost = {333839.80000000005 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38513.4, cumulative cost = {295326.4 rows, 2063168.0 cpu, 6161460.0 io, 684.0 network, 2052.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 1250.6348217654318, cumulative cost = {3543959.2563350457 rows, 2.968814785776984E7 cpu, 5.5452948E7 io, 1832731.8179971601 network, 8357057.040532785 memory}
                  +- Calc(select=[X0, X1]): rowcount = 1250.6348217654318, cumulative cost = {3542708.62151328 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1250.6348217654318, cumulative cost = {3541457.9866915145 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
                        :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
                        :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
                        :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
                        :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
                        :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[y, X1])\n:        +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:           :- [#4] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:           +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#3] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[24])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[12])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           :- Exchange(distribution=[broadcast])
         :        :           :  +- Calc(select=[X0, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :           :        :- Reused(reference_id=[4])
         :        :           :        +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :           :           +- Reused(reference_id=[5])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :                 +- Exchange(distribution=[hash[X0, X1]])
         :        :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :                       +- Union(all=[true], union=[X0, X1])
         :        :                          :- Calc(select=[x AS X0, x AS X1])(reuse_id=[15])
         :        :                          :  +- Reused(reference_id=[6])
         :        :                          +- Calc(select=[y0 AS X0, x AS X1])
         :        :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :                                :- Reused(reference_id=[1])
         :        :                                +- Reused(reference_id=[2])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n:  :  :        :- [#1] Exchange(distribution=[hash[y]])\n:  :  :        +- [#10] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[x, y0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y00]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[23])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[5])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[17])
         :              :                 :                 :- Reused(reference_id=[6])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[y00]])(reuse_id=[22])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[9])
         :              :        +- Exchange(distribution=[hash[x]])
         :              :           +- Calc(select=[x, y0])(reuse_id=[14])
         :              :              +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[13])
         :              :           +- Reused(reference_id=[11])
         :              :- Calc(select=[x, y0])(reuse_id=[21])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :     :- Reused(reference_id=[9])
         :              :     +- Exchange(distribution=[hash[x]])
         :              :        +- Calc(select=[x, y])
         :              :           +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :              :- Reused(reference_id=[1])
         :              :              +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[13])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :           :     :- Reused(reference_id=[14])
         :              :        :           :     +- Reused(reference_id=[12])
         :              :        :           +- Reused(reference_id=[15])
         :              :        +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[9])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Calc(select=[X0, x0])
         :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])
         :                                :- Reused(reference_id=[16])
         :                                +- Exchange(distribution=[broadcast])(reuse_id=[20])
         :                                   +- Calc(select=[x, x0])
         :                                      +- Reused(reference_id=[17])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Reused(reference_id=[18])
         :- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :  :  :     :- [#8] Exchange(distribution=[hash[y]])\n:  :  :  :     +- [#9] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[x AS X0, X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :  :        :- [#2] Calc(select=[x, y0])\n:  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X1], build=[right])\n:  :        :- [#4] Exchange(distribution=[hash[y00]])\n:  :        +- [#5] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:        :- [#2] Calc(select=[x, y0])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y1 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right])\n      :- Calc(select=[x, y00, y AS y1])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, y], build=[right])\n      :     :- [#4] Exchange(distribution=[hash[y00]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[12])
                  :- Reused(reference_id=[21])
                  :- Reused(reference_id=[7])
                  :- Reused(reference_id=[22])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])(reuse_id=[26])
                  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
                  :              +- Exchange(distribution=[hash[X0, X1]])
                  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                    +- Union(all=[true], union=[X0, X1])
                  :                       :- Calc(select=[x0 AS X0, y AS X1])
                  :                       :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                       :     :- Reused(reference_id=[23])
                  :                       :     +- Reused(reference_id=[7])
                  :                       +- Reused(reference_id=[24])
                  :- Reused(reference_id=[22])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[7])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- Reused(reference_id=[25])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[21])
                  +- Reused(reference_id=[26])

Job has been submitted with JobID 3984f99db92a7b2150afcd97d932b049
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT r_0.x AS X0, p28_3.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0) UNION (SELECT r_0.x AS X0, p28_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0) UNION (SELECT r_0.x AS X0, r_2.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN r AS r_2 ON r_0.y = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x) UNION (SELECT r_0.x AS X0, r_4.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN a AS a_5 ON r_4.y = a_5.x)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1 UNION (SELECT r_0.x AS X0, p40_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1 INNER JOIN b AS b_4 ON s_2.y = b_4.x) UNION (SELECT r_0.x AS X0, p43_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1) UNION (SELECT r_0.x AS X0, p43_4.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 8687df8c_9a1c_408d_8205_bdb8fdf6dde1

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT r_0.x AS X0, p28_3.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN b AS b_2 ON r_0.y = b_2.x
                      INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0)
            UNION
            (SELECT r_0.x AS X0, p28_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
                      INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0)
            UNION
            (SELECT r_0.x AS X0, r_2.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN r AS r_2 ON r_0.y = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)
            UNION
            (SELECT r_0.x AS X0, r_4.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN b AS b_3 ON s_2.y = b_3.x
                      INNER JOIN r AS r_4 ON s_2.y = r_4.x
                      INNER JOIN a AS a_5 ON r_4.y = a_5.x)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1
             UNION
             (SELECT r_0.x AS X0, p40_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1
                       INNER JOIN b AS b_4 ON s_2.y = b_4.x)
             UNION
             (SELECT r_0.x AS X0, p43_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_0.y = b_2.x
                       INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1)
             UNION
             (SELECT r_0.x AS X0, p43_4.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN r AS r_3 ON s_2.y = r_3.x
                       INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
         :  :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
         :  :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
         :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$8])
         :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 27624.907698581916, cumulative cost = {2.6568565366879815E8 rows, 9.09726411117161E9 cpu, 3.543877608E9 io, 1.1450119453213952E9 network, 5.877038045067636E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 27624.907698581916, cumulative cost = {2.6565802876109958E8 rows, 9.096822112648432E9 cpu, 3.543877608E9 io, 1.1450119453213952E9 network, 5.859358104140544E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 27624.907698581916, cumulative cost = {2.65630403853401E8 rows, 9.091960128893482E9 cpu, 3.543877608E9 io, 1.1443489475366292E9 network, 5.859358104140544E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 152397.10081912635, cumulative cost = {2.6560277894570243E8 rows, 9.089521775280376E9 cpu, 3.543877608E9 io, 1.1443489475366292E9 network, 5.841678163213452E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 125113.06316773375, cumulative cost = {1.66302528886544E8 rows, 5.645877107475336E9 cpu, 2.214928032E9 io, 7.116125032367594E8 network, 3.6244627891581357E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 89344.08449416612, cumulative cost = {1.0337881681361471E8 rows, 3.440178543426939E9 cpu, 1.384324932E9 io, 4.315740414894396E8 network, 2.2750835206329268E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 89344.08449416612, cumulative cost = {1.0328947272912054E8 rows, 3.440178543426939E9 cpu, 1.384324932E9 io, 4.315740414894396E8 network, 2.2750835206329268E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 238406.1578237842, cumulative cost = {6.29649471102382E7 rows, 2.2437088976370354E9 cpu, 8.30598792E8 io, 2.8575889673509055E8 network, 1.349348916525209E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 238406.1578237842, cumulative cost = {6.2726540952414416E7 rows, 2.2036566631226397E9 cpu, 8.30598792E8 io, 2.8003714894731975E8 network, 1.349348916525209E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 238406.1578237842, cumulative cost = {6.248813479459063E7 rows, 2.1998421645974593E9 cpu, 8.30598792E8 io, 2.8003714894731975E8 network, 1.1967689755179872E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 238406.1578237842, cumulative cost = {6.224972863676684E7 rows, 2.157882680820473E9 cpu, 8.30598792E8 io, 2.7431540115954894E8 network, 1.1967689755179872E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1315204.6575575296, cumulative cost = {6.201132247894306E7 rows, 2.136839406299553E9 cpu, 8.30598792E8 io, 2.7431540115954894E8 network, 1.0441890345107652E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 917204.8877673863, cumulative cost = {4.869890141718924E7 rows, 1.6443025581772223E9 cpu, 6.6447846E8 io, 2.1036987704262096E8 network, 8.372628498852117E7 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 805389.008541431, cumulative cost = {3.180977055739213E7 rows, 1.0174918073573838E9 cpu, 4.4299284E8 io, 1.2835196001776367E8 network, 4.3153608640797436E7 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 744278.5240767295, cumulative cost = {1.888041605586259E7 rows, 5.2104421152855897E8 cpu, 2.76872256E8 io, 6.421904206905921E7 network, 2.2023569904096987E7 memory}
         :  :     :              :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 346279.519751504, cumulative cost = {6190051.4305669535 rows, 2.6686257578108776E7 cpu, 1.10751468E8 io, 271632.228511555 network, 1322331.7380063806 memory}
         :  :     :              :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346279.519751504, cumulative cost = {5843771.910815449 rows, 2.6686257578108776E7 cpu, 1.10751468E8 io, 271632.228511555 network, 1322331.7380063806 memory}
         :  :     :              :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :     :              :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :     :              :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :     :              :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.0043252256, cumulative cost = {1.1946086101218909E7 rows, 4.936136754263735E8 cpu, 1.66120788E8 io, 6.394740984054765E7 network, 2.0701238166090608E7 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.0043252256, cumulative cost = {1.1548087096893683E7 rows, 4.936136754263735E8 cpu, 1.66120788E8 io, 6.394740984054765E7 network, 2.0701238166090608E7 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346272.695501504, cumulative cost = {6535980.092568457 rows, 8.480198986236146E7 cpu, 1.10751492E8 io, 8578113.840547651 network, 1309967.2180063806 memory}
         :  :     :              :  :  :           +- Calc(select=[x, X0]): rowcount = 346272.695501504, cumulative cost = {6189707.397066953 rows, 2.6628177018108778E7 cpu, 1.10751492E8 io, 267569.148511555 network, 1309967.2180063806 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 346272.695501504, cumulative cost = {5843434.701565448 rows, 2.6628177018108778E7 cpu, 1.10751492E8 io, 267569.148511555 network, 1309967.2180063806 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1430.6366766932338, cumulative cost = {3190108.0060639447 rows, 8160299.924695229 cpu, 5.5382196E7 io, 267569.148511555 network, 1229851.5641115594 memory}
         :  :     :              :  :  :                    +- Calc(select=[X0, x0]): rowcount = 1430.6366766932338, cumulative cost = {3188677.3693872513 rows, 7931398.056424311 cpu, 5.5382196E7 io, 233233.8682709174 network, 1229851.5641115594 memory}
         :  :     :              :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 1430.6366766932338, cumulative cost = {3187246.732710558 rows, 7931398.056424311 cpu, 5.5382196E7 io, 233233.8682709174 network, 1229851.5641115594 memory}
         :  :     :              :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :     :              :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :     :              :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :     :              :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :     :              :  :  :                             +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 61110.484464701454, cumulative cost = {1.212396549298811E7 rows, 4.956422068202835E8 cpu, 1.66120584E8 io, 6.4132917948704466E7 network, 2.1130038736700453E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 61110.484464701454, cumulative cost = {1.2062855008523408E7 rows, 4.956422068202835E8 cpu, 1.66120584E8 io, 6.4132917948704466E7 network, 2.1130038736700453E7 memory}
         :  :     :              :  :        :- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :     :              :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :     :              :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :     :              :  :        :        +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :     :              :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 111815.87922595521, cumulative cost = {1.5971925972029721E7 rows, 6.25893545932071E8 cpu, 2.2148562E8 io, 8.20179170248573E7 network, 4.057267634772374E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 111815.87922595521, cumulative cost = {1.5860110092803767E7 rows, 6.25893545932071E8 cpu, 2.2148562E8 io, 8.20179170248573E7 network, 4.057267634772374E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y00]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :  :     :              :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :        :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 357221.0721373233, cumulative cost = {4.023518153438817E7 rows, 1.1917046279502146E9 cpu, 5.5372614E8 io, 1.4581514475434905E8 network, 7.92227155726399E7 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 357221.0721373233, cumulative cost = {3.987796046225084E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 357221.0721373233, cumulative cost = {3.952073939011352E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 74419.81424882227, cumulative cost = {3.454941031797619E7 rows, 7.250546253171537E8 cpu, 4.98356844E8 io, 8.18725430230533E7 network, 7.505520597470585E7 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 35768.97867356763, cumulative cost = {6.279859900976156E7 rows, 2.20557345098523E9 cpu, 8.306031E8 io, 2.8003846174731976E8 network, 1.3493792685252088E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 35768.97867356763, cumulative cost = {6.276283003108799E7 rows, 2.20557345098523E9 cpu, 8.306031E8 io, 2.8003846174731976E8 network, 1.3493792685252088E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 238406.1578237842, cumulative cost = {6.2726540952414416E7 rows, 2.2036566631226397E9 cpu, 8.30598792E8 io, 2.8003714894731975E8 network, 1.349348916525209E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 238406.1578237842, cumulative cost = {6.248813479459063E7 rows, 2.1998421645974593E9 cpu, 8.30598792E8 io, 2.8003714894731975E8 network, 1.1967689755179872E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 238406.1578237842, cumulative cost = {6.224972863676684E7 rows, 2.157882680820473E9 cpu, 8.30598792E8 io, 2.7431540115954894E8 network, 1.1967689755179872E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1315204.6575575296, cumulative cost = {6.201132247894306E7 rows, 2.136839406299553E9 cpu, 8.30598792E8 io, 2.7431540115954894E8 network, 1.0441890345107652E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 917204.8877673863, cumulative cost = {4.869890141718924E7 rows, 1.6443025581772223E9 cpu, 6.6447846E8 io, 2.1036987704262096E8 network, 8.372628498852117E7 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 805389.008541431, cumulative cost = {3.180977055739213E7 rows, 1.0174918073573838E9 cpu, 4.4299284E8 io, 1.2835196001776367E8 network, 4.3153608640797436E7 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 744278.5240767295, cumulative cost = {1.888041605586259E7 rows, 5.2104421152855897E8 cpu, 2.76872256E8 io, 6.421904206905921E7 network, 2.2023569904096987E7 memory}
         :        :           :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 346279.519751504, cumulative cost = {6190051.4305669535 rows, 2.6686257578108776E7 cpu, 1.10751468E8 io, 271632.228511555 network, 1322331.7380063806 memory}
         :        :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346279.519751504, cumulative cost = {5843771.910815449 rows, 2.6686257578108776E7 cpu, 1.10751468E8 io, 271632.228511555 network, 1322331.7380063806 memory}
         :        :           :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :        :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :        :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :        :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :        :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.0043252256, cumulative cost = {1.1946086101218909E7 rows, 4.936136754263735E8 cpu, 1.66120788E8 io, 6.394740984054765E7 network, 2.0701238166090608E7 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.0043252256, cumulative cost = {1.1548087096893683E7 rows, 4.936136754263735E8 cpu, 1.66120788E8 io, 6.394740984054765E7 network, 2.0701238166090608E7 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346272.695501504, cumulative cost = {6535980.092568457 rows, 8.480198986236146E7 cpu, 1.10751492E8 io, 8578113.840547651 network, 1309967.2180063806 memory}
         :        :           :  :  :           +- Calc(select=[x, X0]): rowcount = 346272.695501504, cumulative cost = {6189707.397066953 rows, 2.6628177018108778E7 cpu, 1.10751492E8 io, 267569.148511555 network, 1309967.2180063806 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 346272.695501504, cumulative cost = {5843434.701565448 rows, 2.6628177018108778E7 cpu, 1.10751492E8 io, 267569.148511555 network, 1309967.2180063806 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1430.6366766932338, cumulative cost = {3190108.0060639447 rows, 8160299.924695229 cpu, 5.5382196E7 io, 267569.148511555 network, 1229851.5641115594 memory}
         :        :           :  :  :                    +- Calc(select=[X0, x0]): rowcount = 1430.6366766932338, cumulative cost = {3188677.3693872513 rows, 7931398.056424311 cpu, 5.5382196E7 io, 233233.8682709174 network, 1229851.5641115594 memory}
         :        :           :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 1430.6366766932338, cumulative cost = {3187246.732710558 rows, 7931398.056424311 cpu, 5.5382196E7 io, 233233.8682709174 network, 1229851.5641115594 memory}
         :        :           :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :        :           :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :        :           :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :        :           :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :        :           :  :  :                             +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 61110.484464701454, cumulative cost = {1.212396549298811E7 rows, 4.956422068202835E8 cpu, 1.66120584E8 io, 6.4132917948704466E7 network, 2.1130038736700453E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 61110.484464701454, cumulative cost = {1.2062855008523408E7 rows, 4.956422068202835E8 cpu, 1.66120584E8 io, 6.4132917948704466E7 network, 2.1130038736700453E7 memory}
         :        :           :  :        :- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :        :           :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :        :           :  :        :        +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :        :           :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :           :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :           :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :           :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :           :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :           :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 111815.87922595521, cumulative cost = {1.5971925972029721E7 rows, 6.25893545932071E8 cpu, 2.2148562E8 io, 8.20179170248573E7 network, 4.057267634772374E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 111815.87922595521, cumulative cost = {1.5860110092803767E7 rows, 6.25893545932071E8 cpu, 2.2148562E8 io, 8.20179170248573E7 network, 4.057267634772374E7 memory}
         :        :           :        :- Exchange(distribution=[hash[y00]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :        :           :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :        :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 27284.037651392617, cumulative cost = {9.91478529583393E7 rows, 3.4434922707042203E9 cpu, 1.328949576E9 io, 4.3273644429986984E8 network, 2.2172153740553167E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 27284.037651392617, cumulative cost = {9.912056892068791E7 rows, 3.4434922707042203E9 cpu, 1.328949576E9 io, 4.3273644429986984E8 network, 2.2172153740553167E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 170680.2122052941, cumulative cost = {6.458398226289718E7 rows, 2.7270390794501657E9 cpu, 8.305887E8 io, 3.523768238874925E8 network, 1.460262865911357E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 170680.2122052941, cumulative cost = {6.441330205069189E7 rows, 2.724308196054881E9 cpu, 8.305887E8 io, 3.523768238874925E8 network, 1.351027530099969E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 170680.2122052941, cumulative cost = {6.42426218384866E7 rows, 2.6942684787067494E9 cpu, 8.305887E8 io, 3.4828049879456544E8 network, 1.351027530099969E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 941583.9426900722, cumulative cost = {6.4071941626281306E7 rows, 2.6792031356237082E9 cpu, 8.305887E8 io, 3.4828049879456544E8 network, 1.2417921942885806E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 924788.6975963223, cumulative cost = {5.037353982965373E7 rows, 2.058583575876018E9 cpu, 6.64472472E8 io, 2.6673965669456547E8 network, 8.539290542885806E7 memory}
               :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 570935.1238463223, cumulative cost = {4.097036950955741E7 rows, 1.6211288699784217E9 cpu, 5.53725564E8 io, 2.1011476889456546E8 network, 8.245764722885805E7 memory}
               :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 459118.09446699533, cumulative cost = {2.447841907609666E7 rows, 9.922141196427674E8 cpu, 3.32240268E8 io, 1.2809025418464236E8 network, 4.186312379185791E7 memory}
               :           :  :  :  :- Calc(select=[x AS X0, X1]): rowcount = 397999.94231314905, cumulative cost = {1.1946256119052742E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 397999.94231314905, cumulative cost = {1.1548256176739592E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :  :  :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 346278.9487543269, cumulative cost = {6536148.234426444 rows, 8.485213937153476E7 cpu, 1.10750712E8 io, 8581626.575411558 network, 1320046.2262308649 memory}
               :           :  :  :  :        +- Calc(select=[x, X1]): rowcount = 346278.9487543269, cumulative cost = {6189869.285672117 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.9487543269, cumulative cost = {5843590.336917791 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1472.3250288462589, cumulative cost = {3190257.3881634637 rows, 8209065.380577081 cpu, 5.5381416E7 io, 270931.80530771165 network, 1237596.0246154743 memory}
               :           :  :  :  :                 +- Calc(select=[X0, X1]): rowcount = 1472.3250288462589, cumulative cost = {3188785.0631346176 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :  :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1472.3250288462589, cumulative cost = {3187312.7381057716 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :  :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :  :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :  :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :  :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :  :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  +- Calc(select=[x AS X0, X1]): rowcount = 61118.152153846255, cumulative cost = {1.2073044862576924E7 rows, 4.98091126586731E8 cpu, 1.6612026E8 io, 6.41393316092308E7 network, 2.1151456435384743E7 memory}
               :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 61118.152153846255, cumulative cost = {1.2011926710423078E7 rows, 4.98091126586731E8 cpu, 1.6612026E8 io, 6.41393316092308E7 network, 2.1151456435384743E7 memory}
               :           :  :  :        :- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
               :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
               :           :  :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
               :           :  :  :        :        +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :  :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :           :  :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
               :           :  :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :                       :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :                       :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :  :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  +- Calc(select=[x AS X0, X1]): rowcount = 111817.02937932692, cumulative cost = {1.5921015309614427E7 rows, 6.28343815211808E8 cpu, 2.21485296E8 io, 8.20245147099231E7 network, 4.059452343700013E7 memory}
               :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X1], build=[right]): rowcount = 111817.02937932692, cumulative cost = {1.58091982802351E7 rows, 6.28343815211808E8 cpu, 2.21485296E8 io, 8.20245147099231E7 network, 4.059452343700013E7 memory}
               :           :  :        :- Exchange(distribution=[hash[y00]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
               :           :  :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :  :        :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 347480.0250288462, cumulative cost = {6544141.988355773 rows, 8.626684161157718E7 cpu, 1.1074668E8 io, 8798592.609923113 network, 1756352.0353847444 memory}
               :           :  :           +- Calc(select=[x, X1]): rowcount = 347480.0250288462, cumulative cost = {6196661.963326926 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347480.0250288462, cumulative cost = {5849181.93829808 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
               :           :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 353853.57375000004, cumulative cost = {8478381.6225 rows, 4.3652991720000005E8 cpu, 1.10746908E8 io, 5.66248878E7 network, 2935258.1999999997 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 353853.57375000004, cumulative cost = {8124528.048750001 rows, 4.3652991720000005E8 cpu, 1.10746908E8 io, 5.66248878E7 network, 2935258.1999999997 memory}
               :           :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x1]]): rowcount = 51969.825, cumulative cost = {3156566.4750000006 rows, 3.00726546E7 cpu, 5.5377612E7 io, 1255591.7999999998 network, 24948.0 memory}
               :           :           +- Calc(select=[y, x0 AS x1]): rowcount = 51969.825, cumulative cost = {3104596.6500000004 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 51969.825, cumulative cost = {3052626.825 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :           :                 :- Calc(select=[x, y]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                 :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[x AS X0, y1 AS X1]): rowcount = 16795.245093749996, cumulative cost = {1.2756817853937501E7 rows, 6.19677975805E8 cpu, 1.66116228E8 io, 8.15408421E7 network, 3.8786314E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right]): rowcount = 16795.245093749996, cumulative cost = {1.2740022608843751E7 rows, 6.19677975805E8 cpu, 1.66116228E8 io, 8.15408421E7 network, 3.8786314E7 memory}
               :                 :- Calc(select=[x, y00, y AS y1]): rowcount = 111611.30062499999, cumulative cost = {1.2722513363750001E7 rows, 6.187251094E8 cpu, 1.66111944E8 io, 8.15365581E7 network, 3.8773462E7 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, y], build=[right]): rowcount = 111611.30062499999, cumulative cost = {1.2610902063125001E7 rows, 6.187251094E8 cpu, 1.66111944E8 io, 8.15365581E7 network, 3.8773462E7 memory}
               :                 :     :- Exchange(distribution=[hash[y00]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
               :                 :     :  +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :     :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :     :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                 :     :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :     :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                 :     :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :     :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :     :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 346108.5, cumulative cost = {3346051.5 rows, 7.6659108E7 cpu, 5.5373328E7 io, 8310636.0 network, 12096.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 11213.37213732334, cumulative cost = {3.450930262013934E7 rows, 7.149980425793138E8 cpu, 4.98360876E8 io, 8.035962041237734E7 network, 7.506730197470585E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 11213.37213732334, cumulative cost = {3.4498089248002015E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11213.37213732334, cumulative cost = {3.448687587586469E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[23])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[12])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[15])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n:  :  :        :- [#1] Exchange(distribution=[hash[y]])\n:  :  :        +- [#10] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[x, y0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y00]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[22])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[17])
         :              :                 :                 :- Reused(reference_id=[4])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[y00]])(reuse_id=[21])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[9])
         :              :        +- Exchange(distribution=[hash[x]])
         :              :           +- Calc(select=[x, y0])(reuse_id=[14])
         :              :              +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[13])
         :              :           +- Reused(reference_id=[11])
         :              :- Calc(select=[x, y0])(reuse_id=[26])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :     :- Reused(reference_id=[9])
         :              :     +- Exchange(distribution=[hash[x]])
         :              :        +- Calc(select=[x, y])
         :              :           +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :              :- Reused(reference_id=[1])
         :              :              +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[13])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :           :     :- Reused(reference_id=[14])
         :              :        :           :     +- Reused(reference_id=[12])
         :              :        :           +- Reused(reference_id=[15])
         :              :        +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[9])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Calc(select=[X0, x0])
         :                             +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])
         :                                :- Reused(reference_id=[16])
         :                                +- Exchange(distribution=[broadcast])(reuse_id=[20])
         :                                   +- Calc(select=[x, x0])
         :                                      +- Reused(reference_id=[17])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[9])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[18])
         :- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :  :  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :  :  :     +- [#9] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[x AS X0, X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :  :        :- [#10] Calc(select=[x, y0])\n:  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X1], build=[right])\n:  :        :- [#4] Exchange(distribution=[hash[y00]])\n:  :        +- [#5] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x1)], select=[x, y, y0, x1], build=[right])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#3] Exchange(distribution=[hash[x1]])\n+- Calc(select=[x AS X0, y1 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right])\n      :- Calc(select=[x, y00, y AS y1])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, y], build=[right])\n      :     :- [#4] Exchange(distribution=[hash[y00]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[12])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x1]])
                  :  +- Calc(select=[y, x0 AS x1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Calc(select=[x, y])(reuse_id=[24])
                  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :     :- Reused(reference_id=[1])
                  :        :     +- Reused(reference_id=[7])
                  :        +- Reused(reference_id=[12])
                  :- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])(reuse_id=[27])
                  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
                  :              +- Exchange(distribution=[hash[X0, X1]])
                  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                    +- Union(all=[true], union=[X0, X1])
                  :                       :- Calc(select=[x0 AS X0, y AS X1])
                  :                       :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                       :     :- Reused(reference_id=[22])
                  :                       :     +- Reused(reference_id=[7])
                  :                       +- Reused(reference_id=[23])
                  :- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Reused(reference_id=[24])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- Reused(reference_id=[25])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[26])
                  +- Reused(reference_id=[27])

Job has been submitted with JobID a9bfe4ad9b700d32d010e5d64718d835
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT r_0.x AS X0, p28_3.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0) UNION (SELECT r_0.x AS X0, p28_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0) UNION (SELECT r_0.x AS X0, r_2.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN r AS r_2 ON r_0.y = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x) UNION (SELECT r_0.x AS X0, r_4.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN a AS a_5 ON r_4.y = a_5.x)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1 UNION (SELECT r_0.x AS X0, p40_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1 INNER JOIN b AS b_4 ON s_2.y = b_4.x) UNION (SELECT r_0.x AS X0, p43_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1) UNION (SELECT r_0.x AS X0, p43_4.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...

------------> using sink uuid: 5993b8f8_e734_4211_b522_e07fe7d4194b

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT r_0.x AS X0, p28_3.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN b AS b_2 ON r_0.y = b_2.x
                      INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0)
            UNION
            (SELECT r_0.x AS X0, p28_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
                      INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0)
            UNION
            (SELECT r_0.x AS X0, r_2.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN r AS r_2 ON r_0.y = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)
            UNION
            (SELECT r_0.x AS X0, r_4.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN b AS b_3 ON s_2.y = b_3.x
                      INNER JOIN r AS r_4 ON s_2.y = r_4.x
                      INNER JOIN a AS a_5 ON r_4.y = a_5.x)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1
             UNION
             (SELECT r_0.x AS X0, p40_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1
                       INNER JOIN b AS b_4 ON s_2.y = b_4.x)
             UNION
             (SELECT r_0.x AS X0, p43_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_0.y = b_2.x
                       INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1)
             UNION
             (SELECT r_0.x AS X0, p43_4.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN r AS r_3 ON s_2.y = r_3.x
                       INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
         :  :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
         :  :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
         :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$8])
         :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 27624.907698581916, cumulative cost = {2.6568565366879815E8 rows, 9.09726411117161E9 cpu, 3.543877608E9 io, 1.1450119453213952E9 network, 5.877038045067636E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 27624.907698581916, cumulative cost = {2.6565802876109958E8 rows, 9.096822112648432E9 cpu, 3.543877608E9 io, 1.1450119453213952E9 network, 5.859358104140544E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 27624.907698581916, cumulative cost = {2.65630403853401E8 rows, 9.091960128893482E9 cpu, 3.543877608E9 io, 1.1443489475366292E9 network, 5.859358104140544E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 152397.10081912635, cumulative cost = {2.6560277894570243E8 rows, 9.089521775280376E9 cpu, 3.543877608E9 io, 1.1443489475366292E9 network, 5.841678163213452E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 125113.06316773375, cumulative cost = {1.66302528886544E8 rows, 5.645877107475336E9 cpu, 2.214928032E9 io, 7.116125032367594E8 network, 3.6244627891581357E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 89344.08449416612, cumulative cost = {1.0337881681361471E8 rows, 3.440178543426939E9 cpu, 1.384324932E9 io, 4.315740414894396E8 network, 2.2750835206329268E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 89344.08449416612, cumulative cost = {1.0328947272912054E8 rows, 3.440178543426939E9 cpu, 1.384324932E9 io, 4.315740414894396E8 network, 2.2750835206329268E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 238406.1578237842, cumulative cost = {6.29649471102382E7 rows, 2.2437088976370354E9 cpu, 8.30598792E8 io, 2.8575889673509055E8 network, 1.349348916525209E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 238406.1578237842, cumulative cost = {6.2726540952414416E7 rows, 2.2036566631226397E9 cpu, 8.30598792E8 io, 2.8003714894731975E8 network, 1.349348916525209E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 238406.1578237842, cumulative cost = {6.248813479459063E7 rows, 2.1998421645974593E9 cpu, 8.30598792E8 io, 2.8003714894731975E8 network, 1.1967689755179872E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 238406.1578237842, cumulative cost = {6.224972863676684E7 rows, 2.157882680820473E9 cpu, 8.30598792E8 io, 2.7431540115954894E8 network, 1.1967689755179872E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1315204.6575575296, cumulative cost = {6.201132247894306E7 rows, 2.136839406299553E9 cpu, 8.30598792E8 io, 2.7431540115954894E8 network, 1.0441890345107652E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 917204.8877673863, cumulative cost = {4.869890141718924E7 rows, 1.6443025581772223E9 cpu, 6.6447846E8 io, 2.1036987704262096E8 network, 8.372628498852117E7 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 805389.008541431, cumulative cost = {3.180977055739213E7 rows, 1.0174918073573838E9 cpu, 4.4299284E8 io, 1.2835196001776367E8 network, 4.3153608640797436E7 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 744278.5240767295, cumulative cost = {1.888041605586259E7 rows, 5.2104421152855897E8 cpu, 2.76872256E8 io, 6.421904206905921E7 network, 2.2023569904096987E7 memory}
         :  :     :              :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 346279.519751504, cumulative cost = {6190051.4305669535 rows, 2.6686257578108776E7 cpu, 1.10751468E8 io, 271632.228511555 network, 1322331.7380063806 memory}
         :  :     :              :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346279.519751504, cumulative cost = {5843771.910815449 rows, 2.6686257578108776E7 cpu, 1.10751468E8 io, 271632.228511555 network, 1322331.7380063806 memory}
         :  :     :              :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :     :              :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :     :              :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :     :              :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.0043252256, cumulative cost = {1.1946086101218909E7 rows, 4.936136754263735E8 cpu, 1.66120788E8 io, 6.394740984054765E7 network, 2.0701238166090608E7 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.0043252256, cumulative cost = {1.1548087096893683E7 rows, 4.936136754263735E8 cpu, 1.66120788E8 io, 6.394740984054765E7 network, 2.0701238166090608E7 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346272.695501504, cumulative cost = {6535980.092568457 rows, 8.480198986236146E7 cpu, 1.10751492E8 io, 8578113.840547651 network, 1309967.2180063806 memory}
         :  :     :              :  :  :           +- Calc(select=[x, X0]): rowcount = 346272.695501504, cumulative cost = {6189707.397066953 rows, 2.6628177018108778E7 cpu, 1.10751492E8 io, 267569.148511555 network, 1309967.2180063806 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 346272.695501504, cumulative cost = {5843434.701565448 rows, 2.6628177018108778E7 cpu, 1.10751492E8 io, 267569.148511555 network, 1309967.2180063806 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1430.6366766932338, cumulative cost = {3190108.0060639447 rows, 8160299.924695229 cpu, 5.5382196E7 io, 267569.148511555 network, 1229851.5641115594 memory}
         :  :     :              :  :  :                    +- Calc(select=[X0, x0]): rowcount = 1430.6366766932338, cumulative cost = {3188677.3693872513 rows, 7931398.056424311 cpu, 5.5382196E7 io, 233233.8682709174 network, 1229851.5641115594 memory}
         :  :     :              :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 1430.6366766932338, cumulative cost = {3187246.732710558 rows, 7931398.056424311 cpu, 5.5382196E7 io, 233233.8682709174 network, 1229851.5641115594 memory}
         :  :     :              :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :     :              :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :     :              :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :     :              :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :     :              :  :  :                             +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 61110.484464701454, cumulative cost = {1.212396549298811E7 rows, 4.956422068202835E8 cpu, 1.66120584E8 io, 6.4132917948704466E7 network, 2.1130038736700453E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 61110.484464701454, cumulative cost = {1.2062855008523408E7 rows, 4.956422068202835E8 cpu, 1.66120584E8 io, 6.4132917948704466E7 network, 2.1130038736700453E7 memory}
         :  :     :              :  :        :- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :     :              :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :     :              :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :     :              :  :        :        +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :     :              :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 111815.87922595521, cumulative cost = {1.5971925972029721E7 rows, 6.25893545932071E8 cpu, 2.2148562E8 io, 8.20179170248573E7 network, 4.057267634772374E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 111815.87922595521, cumulative cost = {1.5860110092803767E7 rows, 6.25893545932071E8 cpu, 2.2148562E8 io, 8.20179170248573E7 network, 4.057267634772374E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y00]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :  :     :              :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :        :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 357221.0721373233, cumulative cost = {4.023518153438817E7 rows, 1.1917046279502146E9 cpu, 5.5372614E8 io, 1.4581514475434905E8 network, 7.92227155726399E7 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 357221.0721373233, cumulative cost = {3.987796046225084E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 357221.0721373233, cumulative cost = {3.952073939011352E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 74419.81424882227, cumulative cost = {3.454941031797619E7 rows, 7.250546253171537E8 cpu, 4.98356844E8 io, 8.18725430230533E7 network, 7.505520597470585E7 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 35768.97867356763, cumulative cost = {6.279859900976156E7 rows, 2.20557345098523E9 cpu, 8.306031E8 io, 2.8003846174731976E8 network, 1.3493792685252088E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 35768.97867356763, cumulative cost = {6.276283003108799E7 rows, 2.20557345098523E9 cpu, 8.306031E8 io, 2.8003846174731976E8 network, 1.3493792685252088E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 238406.1578237842, cumulative cost = {6.2726540952414416E7 rows, 2.2036566631226397E9 cpu, 8.30598792E8 io, 2.8003714894731975E8 network, 1.349348916525209E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 238406.1578237842, cumulative cost = {6.248813479459063E7 rows, 2.1998421645974593E9 cpu, 8.30598792E8 io, 2.8003714894731975E8 network, 1.1967689755179872E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 238406.1578237842, cumulative cost = {6.224972863676684E7 rows, 2.157882680820473E9 cpu, 8.30598792E8 io, 2.7431540115954894E8 network, 1.1967689755179872E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1315204.6575575296, cumulative cost = {6.201132247894306E7 rows, 2.136839406299553E9 cpu, 8.30598792E8 io, 2.7431540115954894E8 network, 1.0441890345107652E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 917204.8877673863, cumulative cost = {4.869890141718924E7 rows, 1.6443025581772223E9 cpu, 6.6447846E8 io, 2.1036987704262096E8 network, 8.372628498852117E7 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 805389.008541431, cumulative cost = {3.180977055739213E7 rows, 1.0174918073573838E9 cpu, 4.4299284E8 io, 1.2835196001776367E8 network, 4.3153608640797436E7 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 744278.5240767295, cumulative cost = {1.888041605586259E7 rows, 5.2104421152855897E8 cpu, 2.76872256E8 io, 6.421904206905921E7 network, 2.2023569904096987E7 memory}
         :        :           :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 346279.519751504, cumulative cost = {6190051.4305669535 rows, 2.6686257578108776E7 cpu, 1.10751468E8 io, 271632.228511555 network, 1322331.7380063806 memory}
         :        :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346279.519751504, cumulative cost = {5843771.910815449 rows, 2.6686257578108776E7 cpu, 1.10751468E8 io, 271632.228511555 network, 1322331.7380063806 memory}
         :        :           :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :        :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :        :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :        :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :        :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.0043252256, cumulative cost = {1.1946086101218909E7 rows, 4.936136754263735E8 cpu, 1.66120788E8 io, 6.394740984054765E7 network, 2.0701238166090608E7 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.0043252256, cumulative cost = {1.1548087096893683E7 rows, 4.936136754263735E8 cpu, 1.66120788E8 io, 6.394740984054765E7 network, 2.0701238166090608E7 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346272.695501504, cumulative cost = {6535980.092568457 rows, 8.480198986236146E7 cpu, 1.10751492E8 io, 8578113.840547651 network, 1309967.2180063806 memory}
         :        :           :  :  :           +- Calc(select=[x, X0]): rowcount = 346272.695501504, cumulative cost = {6189707.397066953 rows, 2.6628177018108778E7 cpu, 1.10751492E8 io, 267569.148511555 network, 1309967.2180063806 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 346272.695501504, cumulative cost = {5843434.701565448 rows, 2.6628177018108778E7 cpu, 1.10751492E8 io, 267569.148511555 network, 1309967.2180063806 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1430.6366766932338, cumulative cost = {3190108.0060639447 rows, 8160299.924695229 cpu, 5.5382196E7 io, 267569.148511555 network, 1229851.5641115594 memory}
         :        :           :  :  :                    +- Calc(select=[X0, x0]): rowcount = 1430.6366766932338, cumulative cost = {3188677.3693872513 rows, 7931398.056424311 cpu, 5.5382196E7 io, 233233.8682709174 network, 1229851.5641115594 memory}
         :        :           :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 1430.6366766932338, cumulative cost = {3187246.732710558 rows, 7931398.056424311 cpu, 5.5382196E7 io, 233233.8682709174 network, 1229851.5641115594 memory}
         :        :           :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :        :           :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :        :           :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :        :           :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :        :           :  :  :                             +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 61110.484464701454, cumulative cost = {1.212396549298811E7 rows, 4.956422068202835E8 cpu, 1.66120584E8 io, 6.4132917948704466E7 network, 2.1130038736700453E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 61110.484464701454, cumulative cost = {1.2062855008523408E7 rows, 4.956422068202835E8 cpu, 1.66120584E8 io, 6.4132917948704466E7 network, 2.1130038736700453E7 memory}
         :        :           :  :        :- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :        :           :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :        :           :  :        :        +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :        :           :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :           :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :           :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :           :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :           :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :           :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 111815.87922595521, cumulative cost = {1.5971925972029721E7 rows, 6.25893545932071E8 cpu, 2.2148562E8 io, 8.20179170248573E7 network, 4.057267634772374E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 111815.87922595521, cumulative cost = {1.5860110092803767E7 rows, 6.25893545932071E8 cpu, 2.2148562E8 io, 8.20179170248573E7 network, 4.057267634772374E7 memory}
         :        :           :        :- Exchange(distribution=[hash[y00]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :        :           :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :        :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 27284.037651392617, cumulative cost = {9.91478529583393E7 rows, 3.4434922707042203E9 cpu, 1.328949576E9 io, 4.3273644429986984E8 network, 2.2172153740553167E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 27284.037651392617, cumulative cost = {9.912056892068791E7 rows, 3.4434922707042203E9 cpu, 1.328949576E9 io, 4.3273644429986984E8 network, 2.2172153740553167E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 170680.2122052941, cumulative cost = {6.458398226289718E7 rows, 2.7270390794501657E9 cpu, 8.305887E8 io, 3.523768238874925E8 network, 1.460262865911357E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 170680.2122052941, cumulative cost = {6.441330205069189E7 rows, 2.724308196054881E9 cpu, 8.305887E8 io, 3.523768238874925E8 network, 1.351027530099969E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 170680.2122052941, cumulative cost = {6.42426218384866E7 rows, 2.6942684787067494E9 cpu, 8.305887E8 io, 3.4828049879456544E8 network, 1.351027530099969E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 941583.9426900722, cumulative cost = {6.4071941626281306E7 rows, 2.6792031356237082E9 cpu, 8.305887E8 io, 3.4828049879456544E8 network, 1.2417921942885806E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 924788.6975963223, cumulative cost = {5.037353982965373E7 rows, 2.058583575876018E9 cpu, 6.64472472E8 io, 2.6673965669456547E8 network, 8.539290542885806E7 memory}
               :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 570935.1238463223, cumulative cost = {4.097036950955741E7 rows, 1.6211288699784217E9 cpu, 5.53725564E8 io, 2.1011476889456546E8 network, 8.245764722885805E7 memory}
               :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 459118.09446699533, cumulative cost = {2.447841907609666E7 rows, 9.922141196427674E8 cpu, 3.32240268E8 io, 1.2809025418464236E8 network, 4.186312379185791E7 memory}
               :           :  :  :  :- Calc(select=[x AS X0, X1]): rowcount = 397999.94231314905, cumulative cost = {1.1946256119052742E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 397999.94231314905, cumulative cost = {1.1548256176739592E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :  :  :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 346278.9487543269, cumulative cost = {6536148.234426444 rows, 8.485213937153476E7 cpu, 1.10750712E8 io, 8581626.575411558 network, 1320046.2262308649 memory}
               :           :  :  :  :        +- Calc(select=[x, X1]): rowcount = 346278.9487543269, cumulative cost = {6189869.285672117 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.9487543269, cumulative cost = {5843590.336917791 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1472.3250288462589, cumulative cost = {3190257.3881634637 rows, 8209065.380577081 cpu, 5.5381416E7 io, 270931.80530771165 network, 1237596.0246154743 memory}
               :           :  :  :  :                 +- Calc(select=[X0, X1]): rowcount = 1472.3250288462589, cumulative cost = {3188785.0631346176 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :  :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1472.3250288462589, cumulative cost = {3187312.7381057716 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :  :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :  :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :  :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :  :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :  :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  +- Calc(select=[x AS X0, X1]): rowcount = 61118.152153846255, cumulative cost = {1.2073044862576924E7 rows, 4.98091126586731E8 cpu, 1.6612026E8 io, 6.41393316092308E7 network, 2.1151456435384743E7 memory}
               :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 61118.152153846255, cumulative cost = {1.2011926710423078E7 rows, 4.98091126586731E8 cpu, 1.6612026E8 io, 6.41393316092308E7 network, 2.1151456435384743E7 memory}
               :           :  :  :        :- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
               :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
               :           :  :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
               :           :  :  :        :        +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :  :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :           :  :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
               :           :  :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :                       :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :                       :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :  :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  +- Calc(select=[x AS X0, X1]): rowcount = 111817.02937932692, cumulative cost = {1.5921015309614427E7 rows, 6.28343815211808E8 cpu, 2.21485296E8 io, 8.20245147099231E7 network, 4.059452343700013E7 memory}
               :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X1], build=[right]): rowcount = 111817.02937932692, cumulative cost = {1.58091982802351E7 rows, 6.28343815211808E8 cpu, 2.21485296E8 io, 8.20245147099231E7 network, 4.059452343700013E7 memory}
               :           :  :        :- Exchange(distribution=[hash[y00]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
               :           :  :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :  :        :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 347480.0250288462, cumulative cost = {6544141.988355773 rows, 8.626684161157718E7 cpu, 1.1074668E8 io, 8798592.609923113 network, 1756352.0353847444 memory}
               :           :  :           +- Calc(select=[x, X1]): rowcount = 347480.0250288462, cumulative cost = {6196661.963326926 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347480.0250288462, cumulative cost = {5849181.93829808 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
               :           :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 353853.57375000004, cumulative cost = {8478381.6225 rows, 4.3652991720000005E8 cpu, 1.10746908E8 io, 5.66248878E7 network, 2935258.1999999997 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 353853.57375000004, cumulative cost = {8124528.048750001 rows, 4.3652991720000005E8 cpu, 1.10746908E8 io, 5.66248878E7 network, 2935258.1999999997 memory}
               :           :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x1]]): rowcount = 51969.825, cumulative cost = {3156566.4750000006 rows, 3.00726546E7 cpu, 5.5377612E7 io, 1255591.7999999998 network, 24948.0 memory}
               :           :           +- Calc(select=[y, x0 AS x1]): rowcount = 51969.825, cumulative cost = {3104596.6500000004 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 51969.825, cumulative cost = {3052626.825 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :           :                 :- Calc(select=[x, y]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                 :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[x AS X0, y1 AS X1]): rowcount = 16795.245093749996, cumulative cost = {1.2756817853937501E7 rows, 6.19677975805E8 cpu, 1.66116228E8 io, 8.15408421E7 network, 3.8786314E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right]): rowcount = 16795.245093749996, cumulative cost = {1.2740022608843751E7 rows, 6.19677975805E8 cpu, 1.66116228E8 io, 8.15408421E7 network, 3.8786314E7 memory}
               :                 :- Calc(select=[x, y00, y AS y1]): rowcount = 111611.30062499999, cumulative cost = {1.2722513363750001E7 rows, 6.187251094E8 cpu, 1.66111944E8 io, 8.15365581E7 network, 3.8773462E7 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, y], build=[right]): rowcount = 111611.30062499999, cumulative cost = {1.2610902063125001E7 rows, 6.187251094E8 cpu, 1.66111944E8 io, 8.15365581E7 network, 3.8773462E7 memory}
               :                 :     :- Exchange(distribution=[hash[y00]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
               :                 :     :  +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :     :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :     :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                 :     :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :     :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                 :     :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :     :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :     :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 346108.5, cumulative cost = {3346051.5 rows, 7.6659108E7 cpu, 5.5373328E7 io, 8310636.0 network, 12096.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 11213.37213732334, cumulative cost = {3.450930262013934E7 rows, 7.149980425793138E8 cpu, 4.98360876E8 io, 8.035962041237734E7 network, 7.506730197470585E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 11213.37213732334, cumulative cost = {3.4498089248002015E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11213.37213732334, cumulative cost = {3.448687587586469E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[23])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[12])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[15])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n:  :  :        :- [#1] Exchange(distribution=[hash[y]])\n:  :  :        +- [#10] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[x, y0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y00]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[22])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[17])
         :              :                 :                 :- Reused(reference_id=[4])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[y00]])(reuse_id=[21])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[9])
         :              :        +- Exchange(distribution=[hash[x]])
         :              :           +- Calc(select=[x, y0])(reuse_id=[14])
         :              :              +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[13])
         :              :           +- Reused(reference_id=[11])
         :              :- Calc(select=[x, y0])(reuse_id=[26])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :     :- Reused(reference_id=[9])
         :              :     +- Exchange(distribution=[hash[x]])
         :              :        +- Calc(select=[x, y])
         :              :           +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :              :- Reused(reference_id=[1])
         :              :              +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[13])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :           :     :- Reused(reference_id=[14])
         :              :        :           :     +- Reused(reference_id=[12])
         :              :        :           +- Reused(reference_id=[15])
         :              :        +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[9])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Calc(select=[X0, x0])
         :                             +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])
         :                                :- Reused(reference_id=[16])
         :                                +- Exchange(distribution=[broadcast])(reuse_id=[20])
         :                                   +- Calc(select=[x, x0])
         :                                      +- Reused(reference_id=[17])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[9])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[18])
         :- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :  :  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :  :  :     +- [#9] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[x AS X0, X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :  :        :- [#10] Calc(select=[x, y0])\n:  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X1], build=[right])\n:  :        :- [#4] Exchange(distribution=[hash[y00]])\n:  :        +- [#5] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x1)], select=[x, y, y0, x1], build=[right])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#3] Exchange(distribution=[hash[x1]])\n+- Calc(select=[x AS X0, y1 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right])\n      :- Calc(select=[x, y00, y AS y1])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, y], build=[right])\n      :     :- [#4] Exchange(distribution=[hash[y00]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[12])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x1]])
                  :  +- Calc(select=[y, x0 AS x1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Calc(select=[x, y])(reuse_id=[24])
                  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :     :- Reused(reference_id=[1])
                  :        :     +- Reused(reference_id=[7])
                  :        +- Reused(reference_id=[12])
                  :- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])(reuse_id=[27])
                  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
                  :              +- Exchange(distribution=[hash[X0, X1]])
                  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                    +- Union(all=[true], union=[X0, X1])
                  :                       :- Calc(select=[x0 AS X0, y AS X1])
                  :                       :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                       :     :- Reused(reference_id=[22])
                  :                       :     +- Reused(reference_id=[7])
                  :                       +- Reused(reference_id=[23])
                  :- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Reused(reference_id=[24])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- Reused(reference_id=[25])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[26])
                  +- Reused(reference_id=[27])

Job has been submitted with JobID fedd7a15ecce6eedf088c13da6f6b007
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT r_0.x AS X0, p28_3.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0) UNION (SELECT r_0.x AS X0, p28_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0) UNION (SELECT r_0.x AS X0, r_2.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN r AS r_2 ON r_0.y = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x) UNION (SELECT r_0.x AS X0, r_4.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN a AS a_5 ON r_4.y = a_5.x)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1 UNION (SELECT r_0.x AS X0, p40_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1 INNER JOIN b AS b_4 ON s_2.y = b_4.x) UNION (SELECT r_0.x AS X0, p43_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1) UNION (SELECT r_0.x AS X0, p43_4.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...

------------> using sink uuid: ed21e81a_f132_4a1b_b3fb_20b8cf6b276f

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT r_0.x AS X0, p28_3.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN b AS b_2 ON r_0.y = b_2.x
                      INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0)
            UNION
            (SELECT r_0.x AS X0, p28_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
                      INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0)
            UNION
            (SELECT r_0.x AS X0, r_2.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN r AS r_2 ON r_0.y = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)
            UNION
            (SELECT r_0.x AS X0, r_4.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN b AS b_3 ON s_2.y = b_3.x
                      INNER JOIN r AS r_4 ON s_2.y = r_4.x
                      INNER JOIN a AS a_5 ON r_4.y = a_5.x)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1
             UNION
             (SELECT r_0.x AS X0, p40_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1
                       INNER JOIN b AS b_4 ON s_2.y = b_4.x)
             UNION
             (SELECT r_0.x AS X0, p43_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_0.y = b_2.x
                       INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1)
             UNION
             (SELECT r_0.x AS X0, p43_4.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN r AS r_3 ON s_2.y = r_3.x
                       INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
         :  :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
         :  :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
         :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$8])
         :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 27624.907698581916, cumulative cost = {2.6568565366879815E8 rows, 9.09726411117161E9 cpu, 3.543877608E9 io, 1.1450119453213952E9 network, 5.877038045067636E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 27624.907698581916, cumulative cost = {2.6565802876109958E8 rows, 9.096822112648432E9 cpu, 3.543877608E9 io, 1.1450119453213952E9 network, 5.859358104140544E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 27624.907698581916, cumulative cost = {2.65630403853401E8 rows, 9.091960128893482E9 cpu, 3.543877608E9 io, 1.1443489475366292E9 network, 5.859358104140544E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 152397.10081912635, cumulative cost = {2.6560277894570243E8 rows, 9.089521775280376E9 cpu, 3.543877608E9 io, 1.1443489475366292E9 network, 5.841678163213452E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 125113.06316773375, cumulative cost = {1.66302528886544E8 rows, 5.645877107475336E9 cpu, 2.214928032E9 io, 7.116125032367594E8 network, 3.6244627891581357E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 89344.08449416612, cumulative cost = {1.0337881681361471E8 rows, 3.440178543426939E9 cpu, 1.384324932E9 io, 4.315740414894396E8 network, 2.2750835206329268E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 89344.08449416612, cumulative cost = {1.0328947272912054E8 rows, 3.440178543426939E9 cpu, 1.384324932E9 io, 4.315740414894396E8 network, 2.2750835206329268E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 238406.1578237842, cumulative cost = {6.29649471102382E7 rows, 2.2437088976370354E9 cpu, 8.30598792E8 io, 2.8575889673509055E8 network, 1.349348916525209E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 238406.1578237842, cumulative cost = {6.2726540952414416E7 rows, 2.2036566631226397E9 cpu, 8.30598792E8 io, 2.8003714894731975E8 network, 1.349348916525209E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 238406.1578237842, cumulative cost = {6.248813479459063E7 rows, 2.1998421645974593E9 cpu, 8.30598792E8 io, 2.8003714894731975E8 network, 1.1967689755179872E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 238406.1578237842, cumulative cost = {6.224972863676684E7 rows, 2.157882680820473E9 cpu, 8.30598792E8 io, 2.7431540115954894E8 network, 1.1967689755179872E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1315204.6575575296, cumulative cost = {6.201132247894306E7 rows, 2.136839406299553E9 cpu, 8.30598792E8 io, 2.7431540115954894E8 network, 1.0441890345107652E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 917204.8877673863, cumulative cost = {4.869890141718924E7 rows, 1.6443025581772223E9 cpu, 6.6447846E8 io, 2.1036987704262096E8 network, 8.372628498852117E7 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 805389.008541431, cumulative cost = {3.180977055739213E7 rows, 1.0174918073573838E9 cpu, 4.4299284E8 io, 1.2835196001776367E8 network, 4.3153608640797436E7 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 744278.5240767295, cumulative cost = {1.888041605586259E7 rows, 5.2104421152855897E8 cpu, 2.76872256E8 io, 6.421904206905921E7 network, 2.2023569904096987E7 memory}
         :  :     :              :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 346279.519751504, cumulative cost = {6190051.4305669535 rows, 2.6686257578108776E7 cpu, 1.10751468E8 io, 271632.228511555 network, 1322331.7380063806 memory}
         :  :     :              :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346279.519751504, cumulative cost = {5843771.910815449 rows, 2.6686257578108776E7 cpu, 1.10751468E8 io, 271632.228511555 network, 1322331.7380063806 memory}
         :  :     :              :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :     :              :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :     :              :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :     :              :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :     :              :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.0043252256, cumulative cost = {1.1946086101218909E7 rows, 4.936136754263735E8 cpu, 1.66120788E8 io, 6.394740984054765E7 network, 2.0701238166090608E7 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.0043252256, cumulative cost = {1.1548087096893683E7 rows, 4.936136754263735E8 cpu, 1.66120788E8 io, 6.394740984054765E7 network, 2.0701238166090608E7 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346272.695501504, cumulative cost = {6535980.092568457 rows, 8.480198986236146E7 cpu, 1.10751492E8 io, 8578113.840547651 network, 1309967.2180063806 memory}
         :  :     :              :  :  :           +- Calc(select=[x, X0]): rowcount = 346272.695501504, cumulative cost = {6189707.397066953 rows, 2.6628177018108778E7 cpu, 1.10751492E8 io, 267569.148511555 network, 1309967.2180063806 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 346272.695501504, cumulative cost = {5843434.701565448 rows, 2.6628177018108778E7 cpu, 1.10751492E8 io, 267569.148511555 network, 1309967.2180063806 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1430.6366766932338, cumulative cost = {3190108.0060639447 rows, 8160299.924695229 cpu, 5.5382196E7 io, 267569.148511555 network, 1229851.5641115594 memory}
         :  :     :              :  :  :                    +- Calc(select=[X0, x0]): rowcount = 1430.6366766932338, cumulative cost = {3188677.3693872513 rows, 7931398.056424311 cpu, 5.5382196E7 io, 233233.8682709174 network, 1229851.5641115594 memory}
         :  :     :              :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 1430.6366766932338, cumulative cost = {3187246.732710558 rows, 7931398.056424311 cpu, 5.5382196E7 io, 233233.8682709174 network, 1229851.5641115594 memory}
         :  :     :              :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :     :              :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :     :              :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :     :              :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :     :              :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :     :              :  :  :                             +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 61110.484464701454, cumulative cost = {1.212396549298811E7 rows, 4.956422068202835E8 cpu, 1.66120584E8 io, 6.4132917948704466E7 network, 2.1130038736700453E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 61110.484464701454, cumulative cost = {1.2062855008523408E7 rows, 4.956422068202835E8 cpu, 1.66120584E8 io, 6.4132917948704466E7 network, 2.1130038736700453E7 memory}
         :  :     :              :  :        :- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :     :              :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :  :     :              :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :  :     :              :  :        :        +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :     :              :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :     :              :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 111815.87922595521, cumulative cost = {1.5971925972029721E7 rows, 6.25893545932071E8 cpu, 2.2148562E8 io, 8.20179170248573E7 network, 4.057267634772374E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 111815.87922595521, cumulative cost = {1.5860110092803767E7 rows, 6.25893545932071E8 cpu, 2.2148562E8 io, 8.20179170248573E7 network, 4.057267634772374E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y00]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :  :     :              :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :     :              :        :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :              :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :     :              :        :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 357221.0721373233, cumulative cost = {4.023518153438817E7 rows, 1.1917046279502146E9 cpu, 5.5372614E8 io, 1.4581514475434905E8 network, 7.92227155726399E7 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 357221.0721373233, cumulative cost = {3.987796046225084E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 357221.0721373233, cumulative cost = {3.952073939011352E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 74419.81424882227, cumulative cost = {3.454941031797619E7 rows, 7.250546253171537E8 cpu, 4.98356844E8 io, 8.18725430230533E7 network, 7.505520597470585E7 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 35768.97867356763, cumulative cost = {6.279859900976156E7 rows, 2.20557345098523E9 cpu, 8.306031E8 io, 2.8003846174731976E8 network, 1.3493792685252088E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 35768.97867356763, cumulative cost = {6.276283003108799E7 rows, 2.20557345098523E9 cpu, 8.306031E8 io, 2.8003846174731976E8 network, 1.3493792685252088E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 238406.1578237842, cumulative cost = {6.2726540952414416E7 rows, 2.2036566631226397E9 cpu, 8.30598792E8 io, 2.8003714894731975E8 network, 1.349348916525209E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 238406.1578237842, cumulative cost = {6.248813479459063E7 rows, 2.1998421645974593E9 cpu, 8.30598792E8 io, 2.8003714894731975E8 network, 1.1967689755179872E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 238406.1578237842, cumulative cost = {6.224972863676684E7 rows, 2.157882680820473E9 cpu, 8.30598792E8 io, 2.7431540115954894E8 network, 1.1967689755179872E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1315204.6575575296, cumulative cost = {6.201132247894306E7 rows, 2.136839406299553E9 cpu, 8.30598792E8 io, 2.7431540115954894E8 network, 1.0441890345107652E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 917204.8877673863, cumulative cost = {4.869890141718924E7 rows, 1.6443025581772223E9 cpu, 6.6447846E8 io, 2.1036987704262096E8 network, 8.372628498852117E7 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 805389.008541431, cumulative cost = {3.180977055739213E7 rows, 1.0174918073573838E9 cpu, 4.4299284E8 io, 1.2835196001776367E8 network, 4.3153608640797436E7 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 744278.5240767295, cumulative cost = {1.888041605586259E7 rows, 5.2104421152855897E8 cpu, 2.76872256E8 io, 6.421904206905921E7 network, 2.2023569904096987E7 memory}
         :        :           :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 346279.519751504, cumulative cost = {6190051.4305669535 rows, 2.6686257578108776E7 cpu, 1.10751468E8 io, 271632.228511555 network, 1322331.7380063806 memory}
         :        :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346279.519751504, cumulative cost = {5843771.910815449 rows, 2.6686257578108776E7 cpu, 1.10751468E8 io, 271632.228511555 network, 1322331.7380063806 memory}
         :        :           :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :        :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :        :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :        :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :        :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :        :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.0043252256, cumulative cost = {1.1946086101218909E7 rows, 4.936136754263735E8 cpu, 1.66120788E8 io, 6.394740984054765E7 network, 2.0701238166090608E7 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.0043252256, cumulative cost = {1.1548087096893683E7 rows, 4.936136754263735E8 cpu, 1.66120788E8 io, 6.394740984054765E7 network, 2.0701238166090608E7 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346272.695501504, cumulative cost = {6535980.092568457 rows, 8.480198986236146E7 cpu, 1.10751492E8 io, 8578113.840547651 network, 1309967.2180063806 memory}
         :        :           :  :  :           +- Calc(select=[x, X0]): rowcount = 346272.695501504, cumulative cost = {6189707.397066953 rows, 2.6628177018108778E7 cpu, 1.10751492E8 io, 267569.148511555 network, 1309967.2180063806 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 346272.695501504, cumulative cost = {5843434.701565448 rows, 2.6628177018108778E7 cpu, 1.10751492E8 io, 267569.148511555 network, 1309967.2180063806 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1430.6366766932338, cumulative cost = {3190108.0060639447 rows, 8160299.924695229 cpu, 5.5382196E7 io, 267569.148511555 network, 1229851.5641115594 memory}
         :        :           :  :  :                    +- Calc(select=[X0, x0]): rowcount = 1430.6366766932338, cumulative cost = {3188677.3693872513 rows, 7931398.056424311 cpu, 5.5382196E7 io, 233233.8682709174 network, 1229851.5641115594 memory}
         :        :           :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 1430.6366766932338, cumulative cost = {3187246.732710558 rows, 7931398.056424311 cpu, 5.5382196E7 io, 233233.8682709174 network, 1229851.5641115594 memory}
         :        :           :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :        :           :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :        :           :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :        :           :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :        :           :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :        :           :  :  :                             +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 61110.484464701454, cumulative cost = {1.212396549298811E7 rows, 4.956422068202835E8 cpu, 1.66120584E8 io, 6.4132917948704466E7 network, 2.1130038736700453E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 61110.484464701454, cumulative cost = {1.2062855008523408E7 rows, 4.956422068202835E8 cpu, 1.66120584E8 io, 6.4132917948704466E7 network, 2.1130038736700453E7 memory}
         :        :           :  :        :- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
         :        :           :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
         :        :           :  :        :        +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :           :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :        :           :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :           :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :           :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :           :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :           :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :           :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 111815.87922595521, cumulative cost = {1.5971925972029721E7 rows, 6.25893545932071E8 cpu, 2.2148562E8 io, 8.20179170248573E7 network, 4.057267634772374E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 111815.87922595521, cumulative cost = {1.5860110092803767E7 rows, 6.25893545932071E8 cpu, 2.2148562E8 io, 8.20179170248573E7 network, 4.057267634772374E7 memory}
         :        :           :        :- Exchange(distribution=[hash[y00]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
         :        :           :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :           :        :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :           :        :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 27284.037651392617, cumulative cost = {9.91478529583393E7 rows, 3.4434922707042203E9 cpu, 1.328949576E9 io, 4.3273644429986984E8 network, 2.2172153740553167E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 27284.037651392617, cumulative cost = {9.912056892068791E7 rows, 3.4434922707042203E9 cpu, 1.328949576E9 io, 4.3273644429986984E8 network, 2.2172153740553167E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 170680.2122052941, cumulative cost = {6.458398226289718E7 rows, 2.7270390794501657E9 cpu, 8.305887E8 io, 3.523768238874925E8 network, 1.460262865911357E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 170680.2122052941, cumulative cost = {6.441330205069189E7 rows, 2.724308196054881E9 cpu, 8.305887E8 io, 3.523768238874925E8 network, 1.351027530099969E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 170680.2122052941, cumulative cost = {6.42426218384866E7 rows, 2.6942684787067494E9 cpu, 8.305887E8 io, 3.4828049879456544E8 network, 1.351027530099969E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 941583.9426900722, cumulative cost = {6.4071941626281306E7 rows, 2.6792031356237082E9 cpu, 8.305887E8 io, 3.4828049879456544E8 network, 1.2417921942885806E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 924788.6975963223, cumulative cost = {5.037353982965373E7 rows, 2.058583575876018E9 cpu, 6.64472472E8 io, 2.6673965669456547E8 network, 8.539290542885806E7 memory}
               :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 570935.1238463223, cumulative cost = {4.097036950955741E7 rows, 1.6211288699784217E9 cpu, 5.53725564E8 io, 2.1011476889456546E8 network, 8.245764722885805E7 memory}
               :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 459118.09446699533, cumulative cost = {2.447841907609666E7 rows, 9.922141196427674E8 cpu, 3.32240268E8 io, 1.2809025418464236E8 network, 4.186312379185791E7 memory}
               :           :  :  :  :- Calc(select=[x AS X0, X1]): rowcount = 397999.94231314905, cumulative cost = {1.1946256119052742E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 397999.94231314905, cumulative cost = {1.1548256176739592E7 rows, 4.9366387496156937E8 cpu, 1.66120008E8 io, 6.395092257541156E7 network, 2.0711667356473174E7 memory}
               :           :  :  :  :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 346278.9487543269, cumulative cost = {6536148.234426444 rows, 8.485213937153476E7 cpu, 1.10750712E8 io, 8581626.575411558 network, 1320046.2262308649 memory}
               :           :  :  :  :        +- Calc(select=[x, X1]): rowcount = 346278.9487543269, cumulative cost = {6189869.285672117 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346278.9487543269, cumulative cost = {5843590.336917791 rows, 2.667727598080785E7 cpu, 1.10750712E8 io, 270931.80530771165 network, 1320046.2262308649 memory}
               :           :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 1472.3250288462589, cumulative cost = {3190257.3881634637 rows, 8209065.380577081 cpu, 5.5381416E7 io, 270931.80530771165 network, 1237596.0246154743 memory}
               :           :  :  :  :                 +- Calc(select=[X0, X1]): rowcount = 1472.3250288462589, cumulative cost = {3188785.0631346176 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :  :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1472.3250288462589, cumulative cost = {3187312.7381057716 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
               :           :  :  :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :  :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :  :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :  :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :  :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  +- Calc(select=[x AS X0, X1]): rowcount = 61118.152153846255, cumulative cost = {1.2073044862576924E7 rows, 4.98091126586731E8 cpu, 1.6612026E8 io, 6.41393316092308E7 network, 2.1151456435384743E7 memory}
               :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 61118.152153846255, cumulative cost = {1.2011926710423078E7 rows, 4.98091126586731E8 cpu, 1.6612026E8 io, 6.41393316092308E7 network, 2.1151456435384743E7 memory}
               :           :  :  :        :- Calc(select=[x, y0]): rowcount = 397974.8475, cumulative cost = {8756160.645 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
               :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397974.8475, cumulative cost = {8358185.797499999 rows, 4.854735624E8 cpu, 1.10742876E8 io, 6.36802596E7 network, 1.93951044E7 memory}
               :           :  :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 346111.64999999997, cumulative cost = {3346102.9499999997 rows, 7.666316519999999E7 cpu, 5.537358E7 io, 8310963.6 network, 12852.0 memory}
               :           :  :  :        :        +- Calc(select=[x, y]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :           :  :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :           :  :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
               :           :  :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :                       :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :  :                       :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :  :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :  +- Calc(select=[x AS X0, X1]): rowcount = 111817.02937932692, cumulative cost = {1.5921015309614427E7 rows, 6.28343815211808E8 cpu, 2.21485296E8 io, 8.20245147099231E7 network, 4.059452343700013E7 memory}
               :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X1], build=[right]): rowcount = 111817.02937932692, cumulative cost = {1.58091982802351E7 rows, 6.28343815211808E8 cpu, 2.21485296E8 io, 8.20245147099231E7 network, 4.059452343700013E7 memory}
               :           :  :        :- Exchange(distribution=[hash[y00]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
               :           :  :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :           :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :           :  :        :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 347480.0250288462, cumulative cost = {6544141.988355773 rows, 8.626684161157718E7 cpu, 1.1074668E8 io, 8798592.609923113 network, 1756352.0353847444 memory}
               :           :  :           +- Calc(select=[x, X1]): rowcount = 347480.0250288462, cumulative cost = {6196661.963326926 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347480.0250288462, cumulative cost = {5849181.93829808 rows, 2.789019740673102E7 cpu, 1.1074668E8 io, 459072.0092308029 network, 1756352.0353847444 memory}
               :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
               :           :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
               :           :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
               :           :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
               :           :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
               :           :  :                                :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 353853.57375000004, cumulative cost = {8478381.6225 rows, 4.3652991720000005E8 cpu, 1.10746908E8 io, 5.66248878E7 network, 2935258.1999999997 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x1)], select=[x, y, y0, x1], build=[right]): rowcount = 353853.57375000004, cumulative cost = {8124528.048750001 rows, 4.3652991720000005E8 cpu, 1.10746908E8 io, 5.66248878E7 network, 2935258.1999999997 memory}
               :           :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :           :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[hash[x1]]): rowcount = 51969.825, cumulative cost = {3156566.4750000006 rows, 3.00726546E7 cpu, 5.5377612E7 io, 1255591.7999999998 network, 24948.0 memory}
               :           :           +- Calc(select=[y, x0 AS x1]): rowcount = 51969.825, cumulative cost = {3104596.6500000004 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :           :              +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 51969.825, cumulative cost = {3052626.825 rows, 2.1341724E7 cpu, 5.5377612E7 io, 8316.0 network, 24948.0 memory}
               :           :                 :- Calc(select=[x, y]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :           :                 :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :           :                 :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :           :                 :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :           :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :           :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[x AS X0, y1 AS X1]): rowcount = 16795.245093749996, cumulative cost = {1.2756817853937501E7 rows, 6.19677975805E8 cpu, 1.66116228E8 io, 8.15408421E7 network, 3.8786314E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right]): rowcount = 16795.245093749996, cumulative cost = {1.2740022608843751E7 rows, 6.19677975805E8 cpu, 1.66116228E8 io, 8.15408421E7 network, 3.8786314E7 memory}
               :                 :- Calc(select=[x, y00, y AS y1]): rowcount = 111611.30062499999, cumulative cost = {1.2722513363750001E7 rows, 6.187251094E8 cpu, 1.66111944E8 io, 8.15365581E7 network, 3.8773462E7 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, y], build=[right]): rowcount = 111611.30062499999, cumulative cost = {1.2610902063125001E7 rows, 6.187251094E8 cpu, 1.66111944E8 io, 8.15365581E7 network, 3.8773462E7 memory}
               :                 :     :- Exchange(distribution=[hash[y00]]): rowcount = 397966.83749999997, cumulative cost = {9153239.262500001 rows, 5.361133987E8 cpu, 1.10738616E8 io, 7.32259221E7 network, 1.937929E7 memory}
               :                 :     :  +- Calc(select=[x, y0 AS y00]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :     :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 :     :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                 :     :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :     :        +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                 :     :           +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :     :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                 :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :     :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 346108.5, cumulative cost = {3346051.5 rows, 7.6659108E7 cpu, 5.5373328E7 io, 8310636.0 network, 12096.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 346108.5, cumulative cost = {2999943.0 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346108.5, cumulative cost = {2653834.5 rows, 1.851288E7 cpu, 5.5373328E7 io, 4032.0 network, 12096.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 11213.37213732334, cumulative cost = {3.450930262013934E7 rows, 7.149980425793138E8 cpu, 4.98360876E8 io, 8.035962041237734E7 network, 7.506730197470585E7 memory}
                  +- Calc(select=[X0, X1]): rowcount = 11213.37213732334, cumulative cost = {3.4498089248002015E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11213.37213732334, cumulative cost = {3.448687587586469E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[23])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[12])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[15])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n:  :  :        :- [#1] Exchange(distribution=[hash[y]])\n:  :  :        +- [#10] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[x, y0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y00]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[22])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[17])
         :              :                 :                 :- Reused(reference_id=[4])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[y00]])(reuse_id=[21])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[9])
         :              :        +- Exchange(distribution=[hash[x]])
         :              :           +- Calc(select=[x, y0])(reuse_id=[14])
         :              :              +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[13])
         :              :           +- Reused(reference_id=[11])
         :              :- Calc(select=[x, y0])(reuse_id=[26])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :     :- Reused(reference_id=[9])
         :              :     +- Exchange(distribution=[hash[x]])
         :              :        +- Calc(select=[x, y])
         :              :           +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :              :- Reused(reference_id=[1])
         :              :              +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[13])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :           :     :- Reused(reference_id=[14])
         :              :        :           :     +- Reused(reference_id=[12])
         :              :        :           +- Reused(reference_id=[15])
         :              :        +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[9])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Calc(select=[X0, x0])
         :                             +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])
         :                                :- Reused(reference_id=[16])
         :                                +- Exchange(distribution=[broadcast])(reuse_id=[20])
         :                                   +- Calc(select=[x, x0])
         :                                      +- Reused(reference_id=[17])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[9])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[18])
         :- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :  :  :     :- [#2] Exchange(distribution=[hash[y]])\n:  :  :  :     +- [#9] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[x AS X0, X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :  :        :- [#10] Calc(select=[x, y0])\n:  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X1], build=[right])\n:  :        :- [#4] Exchange(distribution=[hash[y00]])\n:  :        +- [#5] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y = x1)], select=[x, y, y0, x1], build=[right])\n:        :- [#2] Exchange(distribution=[hash[y]])\n:        +- [#3] Exchange(distribution=[hash[x1]])\n+- Calc(select=[x AS X0, y1 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right])\n      :- Calc(select=[x, y00, y AS y1])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, y], build=[right])\n      :     :- [#4] Exchange(distribution=[hash[y00]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[12])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x1]])
                  :  +- Calc(select=[y, x0 AS x1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Calc(select=[x, y])(reuse_id=[24])
                  :        :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :     :- Reused(reference_id=[1])
                  :        :     +- Reused(reference_id=[7])
                  :        +- Reused(reference_id=[12])
                  :- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])(reuse_id=[27])
                  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
                  :              +- Exchange(distribution=[hash[X0, X1]])
                  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                    +- Union(all=[true], union=[X0, X1])
                  :                       :- Calc(select=[x0 AS X0, y AS X1])
                  :                       :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                       :     :- Reused(reference_id=[22])
                  :                       :     +- Reused(reference_id=[7])
                  :                       +- Reused(reference_id=[23])
                  :- Reused(reference_id=[21])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Reused(reference_id=[24])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- Reused(reference_id=[25])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[26])
                  +- Reused(reference_id=[27])

Job has been submitted with JobID fb9b41a3af26368e7586f14fe0b80c59
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT r_0.x AS X0, p28_3.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0) UNION (SELECT r_0.x AS X0, p28_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0) UNION (SELECT r_0.x AS X0, r_2.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN r AS r_2 ON r_0.y = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x) UNION (SELECT r_0.x AS X0, r_4.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN a AS a_5 ON r_4.y = a_5.x)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1 UNION (SELECT r_0.x AS X0, p40_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1 INNER JOIN b AS b_4 ON s_2.y = b_4.x) UNION (SELECT r_0.x AS X0, p43_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1) UNION (SELECT r_0.x AS X0, p43_4.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: c896be10_cb4f_4c60_b49c_7dea26c1c737

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT r_0.x AS X0, p28_3.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN b AS b_2 ON r_0.y = b_2.x
                      INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0)
            UNION
            (SELECT r_0.x AS X0, p28_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
                      INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0)
            UNION
            (SELECT r_0.x AS X0, r_2.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN r AS r_2 ON r_0.y = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)
            UNION
            (SELECT r_0.x AS X0, r_4.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN b AS b_3 ON s_2.y = b_3.x
                      INNER JOIN r AS r_4 ON s_2.y = r_4.x
                      INNER JOIN a AS a_5 ON r_4.y = a_5.x)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1
             UNION
             (SELECT r_0.x AS X0, p40_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1
                       INNER JOIN b AS b_4 ON s_2.y = b_4.x)
             UNION
             (SELECT r_0.x AS X0, p43_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_0.y = b_2.x
                       INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1)
             UNION
             (SELECT r_0.x AS X0, p43_4.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN r AS r_3 ON s_2.y = r_3.x
                       INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
         :  :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
         :  :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
         :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$8])
         :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 72723.55007049949, cumulative cost = {7.984253566620499E8 rows, 3.568057135570269E10 cpu, 9.846312168E9 io, 4.669177799851858E9 network, 1.6585800115224218E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 72723.55007049949, cumulative cost = {7.983526331119794E8 rows, 3.5679407778901566E10 cpu, 9.846312168E9 io, 4.669177799851858E9 network, 1.65392570431791E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 72723.55007049949, cumulative cost = {7.982799095619088E8 rows, 3.566660843408916E10 cpu, 9.846312168E9 io, 4.6674324346501665E9 network, 1.65392570431791E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 401190.77728493616, cumulative cost = {7.982071860118383E8 rows, 3.5660189381652596E10 cpu, 9.846312168E9 io, 4.6674324346501665E9 network, 1.649271397113398E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 347612.9969544937, cumulative cost = {4.962938814414434E8 rows, 2.144311863552277E10 cpu, 6.15394848E9 io, 2.7993790150462275E9 network, 1.006698814585304E9 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 248239.88018149664, cumulative cost = {3.139594062791565E8 rows, 1.4052046631572231E10 cpu, 3.846210492E9 io, 1.840959127878398E9 network, 6.319050642274076E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 248239.88018149664, cumulative cost = {3.13711166398975E8 rows, 1.4052046631572231E10 cpu, 3.846210492E9 io, 1.840959127878398E9 network, 6.319050642274076E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 662402.5451533138, cumulative cost = {1.824496967769397E8 rows, 7.496693809978113E9 cpu, 2.307731184E9 io, 9.743154866515093E8 network, 3.747889679578965E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 662402.5451533138, cumulative cost = {1.8178729423178637E8 rows, 7.385410182392357E9 cpu, 2.307731184E9 io, 9.584178255678297E8 network, 3.747889679578965E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 662402.5451533138, cumulative cost = {1.8112489168663305E8 rows, 7.374811741669904E9 cpu, 2.307731184E9 io, 9.584178255678297E8 network, 3.3239520506808436E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 662402.5451533138, cumulative cost = {1.8046248914147973E8 rows, 7.25822889372292E9 cpu, 2.307731184E9 io, 9.425201644841502E8 network, 3.3239520506808436E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 3654246.6877367157, cumulative cost = {1.798000865963264E8 rows, 7.199760946719133E9 cpu, 2.307731184E9 io, 9.425201644841502E8 network, 2.900014421782723E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 2548414.9322254187, cumulative cost = {1.4281394375801533E8 rows, 5.831333419023598E9 cpu, 1.846183068E9 io, 7.648551780877361E8 network, 2.3252578834563684E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 2237737.629816772, cumulative cost = {8.947908380459583E7 rows, 3.0126615076904726E9 cpu, 1.230799848E9 io, 3.8312935016390646E8 network, 1.1979983790903175E8 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067948.1587591278, cumulative cost = {5.2451768764459915E7 rows, 1.4474119922859015E9 cpu, 7.69252152E8 io, 1.7840728582546026E8 network, 6.111351181165472E7 memory}
         :  :     :              :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 962117.851388372, cumulative cost = {1.7195204445660453E7 rows, 7.396425689939444E7 cpu, 3.07704924E8 io, 740441.7030696564 network, 3627553.74995294 memory}
         :  :     :              :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962117.851388372, cumulative cost = {1.6233086594272083E7 rows, 7.396425689939444E7 cpu, 3.07704924E8 io, 740441.7030696564 network, 3627553.74995294 memory}
         :  :     :              :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :     :              :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :     :              :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :     :              :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105830.3073707558, cumulative cost = {3.3188616160040334E7 rows, 1.371379787227748E9 cpu, 4.61547228E8 io, 1.776668441223906E8 network, 5.7485958061701775E7 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105830.3073707558, cumulative cost = {3.2082785852669578E7 rows, 1.371379787227748E9 cpu, 4.61547228E8 io, 1.776668441223906E8 network, 5.7485958061701775E7 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 962107.0491383721, cumulative cost = {1.8156765545298822E7 rows, 2.3550621083464098E8 cpu, 3.07704948E8 io, 2.3824564122390587E7 network, 3607963.30995294 memory}
         :  :     :              :  :  :           +- Calc(select=[x, X0]): rowcount = 962107.0491383721, cumulative cost = {1.719465849616045E7 rows, 7.387222657939444E7 cpu, 3.07704948E8 io, 733994.9430696564 network, 3607963.30995294 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 962107.0491383721, cumulative cost = {1.623255144702208E7 rows, 7.387222657939444E7 cpu, 3.07704948E8 io, 733994.9430696564 network, 3607963.30995294 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 3951.9942558133503, cumulative cost = {8860349.397883708 rows, 2.2559850625347935E7 cpu, 1.53862668E8 io, 733994.9430696564 network, 3386651.631627392 memory}
         :  :     :              :  :  :                    +- Calc(select=[X0, x0]): rowcount = 3951.9942558133503, cumulative cost = {8856397.403627895 rows, 2.19275315444178E7 cpu, 1.53862668E8 io, 639147.080930136 network, 3386651.631627392 memory}
         :  :     :              :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 3951.9942558133503, cumulative cost = {8852445.409372082 rows, 2.19275315444178E7 cpu, 1.53862668E8 io, 639147.080930136 network, 3386651.631627392 memory}
         :  :     :              :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :     :              :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :     :              :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :     :              :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :     :              :  :  :                             +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 169789.4710576443, cumulative cost = {3.478957741031915E7 rows, 1.563011777774754E9 cpu, 4.61547696E8 io, 2.047220643384462E8 network, 5.868632609737703E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], build=[right]): rowcount = 169789.4710576443, cumulative cost = {3.46197879392615E7 rows, 1.563011777774754E9 cpu, 4.61547696E8 io, 2.047220643384462E8 network, 5.868632609737703E7 memory}
         :  :     :              :  :        :- Exchange(distribution=[hash[y0]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
         :  :     :              :  :        :  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :     :              :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :     :              :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :     :              :  :        :           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :     :              :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 310677.3024086466, cumulative cost = {5.078644502119408E7 rows, 2.8161234964008994E9 cpu, 6.1538322E8 io, 3.817258279238297E8 network, 1.1272595043660511E8 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 310677.3024086466, cumulative cost = {5.0475767718785435E7 rows, 2.8161234964008994E9 cpu, 6.1538322E8 io, 3.817258279238297E8 network, 1.1272595043660511E8 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y00]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :  :     :              :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :        :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 992529.9893899972, cumulative cost = {1.3101322974185382E8 rows, 6.542113361317773E9 cpu, 1.538479308E9 io, 8.666436412268888E8 network, 2.2002155374092555E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 992529.9893899972, cumulative cost = {1.3002069975246382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 992529.9893899972, cumulative cost = {1.2902816976307382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 206771.5959333153, cumulative cost = {1.1521544977368382E8 rows, 5.245537430332787E9 cpu, 1.384637028E9 io, 6.889806414815289E8 network, 2.0844234436865988E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                            :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 99373.11677299706, cumulative cost = {1.8198686216533238E8 rows, 7.390724390953584E9 cpu, 2.307737988E9 io, 9.584198871678298E8 network, 3.7479375035789645E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 99373.11677299706, cumulative cost = {1.8188748904855937E8 rows, 7.390724390953584E9 cpu, 2.307737988E9 io, 9.584198871678298E8 network, 3.7479375035789645E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 662402.5451533138, cumulative cost = {1.8178729423178637E8 rows, 7.385410182392357E9 cpu, 2.307731184E9 io, 9.584178255678297E8 network, 3.747889679578965E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 662402.5451533138, cumulative cost = {1.8112489168663305E8 rows, 7.374811741669904E9 cpu, 2.307731184E9 io, 9.584178255678297E8 network, 3.3239520506808436E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 662402.5451533138, cumulative cost = {1.8046248914147973E8 rows, 7.25822889372292E9 cpu, 2.307731184E9 io, 9.425201644841502E8 network, 3.3239520506808436E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 3654246.6877367157, cumulative cost = {1.798000865963264E8 rows, 7.199760946719133E9 cpu, 2.307731184E9 io, 9.425201644841502E8 network, 2.900014421782723E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 2548414.9322254187, cumulative cost = {1.4281394375801533E8 rows, 5.831333419023598E9 cpu, 1.846183068E9 io, 7.648551780877361E8 network, 2.3252578834563684E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 2237737.629816772, cumulative cost = {8.947908380459583E7 rows, 3.0126615076904726E9 cpu, 1.230799848E9 io, 3.8312935016390646E8 network, 1.1979983790903175E8 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067948.1587591278, cumulative cost = {5.2451768764459915E7 rows, 1.4474119922859015E9 cpu, 7.69252152E8 io, 1.7840728582546026E8 network, 6.111351181165472E7 memory}
         :        :           :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 962117.851388372, cumulative cost = {1.7195204445660453E7 rows, 7.396425689939444E7 cpu, 3.07704924E8 io, 740441.7030696564 network, 3627553.74995294 memory}
         :        :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962117.851388372, cumulative cost = {1.6233086594272083E7 rows, 7.396425689939444E7 cpu, 3.07704924E8 io, 740441.7030696564 network, 3627553.74995294 memory}
         :        :           :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :        :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :        :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :        :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :        :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105830.3073707558, cumulative cost = {3.3188616160040334E7 rows, 1.371379787227748E9 cpu, 4.61547228E8 io, 1.776668441223906E8 network, 5.7485958061701775E7 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105830.3073707558, cumulative cost = {3.2082785852669578E7 rows, 1.371379787227748E9 cpu, 4.61547228E8 io, 1.776668441223906E8 network, 5.7485958061701775E7 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 962107.0491383721, cumulative cost = {1.8156765545298822E7 rows, 2.3550621083464098E8 cpu, 3.07704948E8 io, 2.3824564122390587E7 network, 3607963.30995294 memory}
         :        :           :  :  :           +- Calc(select=[x, X0]): rowcount = 962107.0491383721, cumulative cost = {1.719465849616045E7 rows, 7.387222657939444E7 cpu, 3.07704948E8 io, 733994.9430696564 network, 3607963.30995294 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 962107.0491383721, cumulative cost = {1.623255144702208E7 rows, 7.387222657939444E7 cpu, 3.07704948E8 io, 733994.9430696564 network, 3607963.30995294 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 3951.9942558133503, cumulative cost = {8860349.397883708 rows, 2.2559850625347935E7 cpu, 1.53862668E8 io, 733994.9430696564 network, 3386651.631627392 memory}
         :        :           :  :  :                    +- Calc(select=[X0, x0]): rowcount = 3951.9942558133503, cumulative cost = {8856397.403627895 rows, 2.19275315444178E7 cpu, 1.53862668E8 io, 639147.080930136 network, 3386651.631627392 memory}
         :        :           :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 3951.9942558133503, cumulative cost = {8852445.409372082 rows, 2.19275315444178E7 cpu, 1.53862668E8 io, 639147.080930136 network, 3386651.631627392 memory}
         :        :           :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :        :           :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :        :           :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :        :           :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :        :           :  :  :                             +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 169789.4710576443, cumulative cost = {3.478957741031915E7 rows, 1.563011777774754E9 cpu, 4.61547696E8 io, 2.047220643384462E8 network, 5.868632609737703E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], build=[right]): rowcount = 169789.4710576443, cumulative cost = {3.46197879392615E7 rows, 1.563011777774754E9 cpu, 4.61547696E8 io, 2.047220643384462E8 network, 5.868632609737703E7 memory}
         :        :           :  :        :- Exchange(distribution=[hash[y0]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
         :        :           :  :        :  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :        :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :        :           :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :        :           :  :        :           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :        :           :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :           :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :           :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :           :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :           :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :           :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 310677.3024086466, cumulative cost = {5.078644502119408E7 rows, 2.8161234964008994E9 cpu, 6.1538322E8 io, 3.817258279238297E8 network, 1.1272595043660511E8 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 310677.3024086466, cumulative cost = {5.0475767718785435E7 rows, 2.8161234964008994E9 cpu, 6.1538322E8 io, 3.817258279238297E8 network, 1.1272595043660511E8 memory}
         :        :           :        :- Exchange(distribution=[hash[y00]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :        :           :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :        :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 53577.780330442496, cumulative cost = {3.0151211379311E8 rows, 1.421666955535254E10 cpu, 3.692363688E9 io, 1.868053419603939E9 network, 6.425725825280939E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], build=[right]): rowcount = 53577.780330442496, cumulative cost = {3.014585360127796E8 rows, 1.421666955535254E10 cpu, 3.692363688E9 io, 1.868053419603939E9 network, 6.425725825280939E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 326079.4628129527, cumulative cost = {1.8630176283652863E8 rows, 8.99603153453394E9 cpu, 2.30771946E9 io, 1.1832815586794498E9 network, 4.3236671675359416E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 326079.4628129527, cumulative cost = {1.8597568337371567E8 rows, 8.941250184781363E9 cpu, 2.30771946E9 io, 1.175455651571939E9 network, 4.3236671675359416E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 326079.4628129527, cumulative cost = {1.856496039109027E8 rows, 8.936032913376356E9 cpu, 2.30771946E9 io, 1.175455651571939E9 network, 4.114976311335652E8 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 326079.4628129527, cumulative cost = {1.8532352444808975E8 rows, 8.878642927921276E9 cpu, 2.30771946E9 io, 1.1676297444644282E9 network, 4.114976311335652E8 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1798868.0835267755, cumulative cost = {1.849974449852768E8 rows, 8.849861038584848E9 cpu, 2.30771946E9 io, 1.1676297444644282E9 network, 3.906285455135362E8 memory}
               :              :- Union(all=[true], union=[X0, X1]): rowcount = 1752268.0561767754, cumulative cost = {1.4775588096905E8 rows, 7.126438530149322E9 cpu, 1.846178616E9 io, 9.410808190244281E8 network, 2.8289193311353624E8 memory}
               :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1586314.9411767754, cumulative cost = {1.213427864828732E8 rows, 5.766945605293144E9 cpu, 1.538480076E9 io, 7.641461830244281E8 network, 2.2900044911353624E8 memory}
               :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 1275635.5391264416, cumulative cost = {6.911235111875197E7 rows, 2.9425047996252284E9 cpu, 9.23096508E8 io, 3.824084119223294E8 network, 1.1623502840757124E8 memory}
               :              :  :  :  :- Calc(select=[x AS X0, X1]): rowcount = 1105832.07045755, cumulative cost = {3.3189480964450616E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 1105832.07045755, cumulative cost = {3.2083648893993065E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :  :  :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 962118.8030503338, cumulative cost = {1.8157626823535513E7 rows, 2.3561518514068538E8 cpu, 3.07706184E8 io, 2.3832460348284073E7 network, 3631362.936245466 memory}
               :              :  :  :  :        +- Calc(select=[x, X1]): rowcount = 962118.8030503338, cumulative cost = {1.7195508020485178E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962118.8030503338, cumulative cost = {1.6233389217434842E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 4030.3536688916415, cumulative cost = {8861175.414384509 rows, 2.2666223398878183E7 cpu, 1.53863904E8 io, 741609.075076062 network, 3405663.130787534 memory}
               :              :  :  :  :                 +- Calc(select=[X0, X1]): rowcount = 4030.3536688916415, cumulative cost = {8857145.060715618 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :  :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4030.3536688916415, cumulative cost = {8853114.707046727 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :  :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :  :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :  :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :  :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :  :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :  :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :  :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :  :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :  :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :  +- Calc(select=[x AS X0, X1]): rowcount = 169803.4686688916, cumulative cost = {3.4647234615174904E7 rows, 1.569740308521014E9 cpu, 4.61548044E8 io, 2.0473367157404533E8 network, 5.872501250050709E7 memory}
               :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X0)], select=[x, y0, X0, X1], build=[right]): rowcount = 169803.4686688916, cumulative cost = {3.447743114650601E7 rows, 1.569740308521014E9 cpu, 4.61548044E8 io, 2.0473367157404533E8 network, 5.872501250050709E7 memory}
               :              :  :  :        :- Exchange(distribution=[hash[y0]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
               :              :  :  :        :  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
               :              :  :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
               :              :  :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
               :              :  :  :        :           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :  :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              :  :  :        +- Exchange(distribution=[hash[X0]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
               :              :  :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :                       :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :                       :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :  :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :  :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :  :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :  :                       :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :  :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  +- Calc(select=[x AS X0, X1]): rowcount = 310679.40205033374, cumulative cost = {5.064412042294446E7 rows, 2.822854490726739E9 cpu, 6.15383568E8 io, 3.817377711020987E8 network, 1.1276542070596501E8 memory}
               :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X1], build=[right]): rowcount = 310679.40205033374, cumulative cost = {5.0333441020894125E7 rows, 2.822854490726739E9 cpu, 6.15383568E8 io, 3.817377711020987E8 network, 1.1276542070596501E8 memory}
               :              :  :        :- Exchange(distribution=[hash[y00]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
               :              :  :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :              :  :        :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :        +- Exchange(distribution=[hash[x]]): rowcount = 965454.6036688916, cumulative cost = {2.4590707188843787E7 rows, 1.3167068563373878E9 cpu, 3.07698984E8 io, 1.782813276620987E8 network, 4855128.500507081 memory}
               :              :  :           +- Calc(select=[x, X1]): rowcount = 965454.6036688916, cumulative cost = {2.3625252585174896E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965454.6036688916, cumulative cost = {2.2659797981506005E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :                 +- Exchange(distribution=[hash[X0]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
               :              :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 165953.11499999996, cumulative cost = {2.466082643E7 rows, 1.3577406568E9 cpu, 3.0769854E8 io, 1.76934636E8 network, 5.3891484E7 memory}
               :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 165953.11499999996, cumulative cost = {2.4494873315E7 rows, 1.3577406568E9 cpu, 3.0769854E8 io, 1.76934636E8 network, 5.3891484E7 memory}
               :              :        :- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
               :              :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
               :              :        :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
               :              :        :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              :        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x AS X0, y1 AS X1]): rowcount = 46600.02735, cumulative cost = {3.54426959327E7 rows, 1.7216236403520002E9 cpu, 4.61540844E8 io, 2.2654892544E8 network, 1.077366124E8 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right]): rowcount = 46600.02735, cumulative cost = {3.539609590535E7 rows, 1.7216236403520002E9 cpu, 4.61540844E8 io, 2.2654892544E8 network, 1.077366124E8 memory}
               :                    :- Calc(select=[x, y00, y AS y1]): rowcount = 310101.849, cumulative cost = {3.5348365878E7 rows, 1.7190479055600002E9 cpu, 4.61534064E8 io, 2.2654214544E8 network, 1.077162724E8 memory}
               :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, y], build=[right]): rowcount = 310101.849, cumulative cost = {3.5038264029E7 rows, 1.7190479055600002E9 cpu, 4.61534064E8 io, 2.2654214544E8 network, 1.077162724E8 memory}
               :                    :     :- Exchange(distribution=[hash[y00]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
               :                    :     :  +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :     :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                    :     :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :     +- Exchange(distribution=[hash[x]]): rowcount = 961604.25, cumulative cost = {9296107.75 rows, 2.12931074E8 cpu, 1.5384948E8 io, 2.3085702E7 network, 21600.0 memory}
               :                    :        +- Calc(select=[x, y]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :                    :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[X0]]): rowcount = 31105.739389997292, cumulative cost = {1.151031953959205E8 rows, 5.217780539200975E9 cpu, 1.384644228E9 io, 6.847718609244893E8 network, 2.0846394436865988E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 31105.739389997292, cumulative cost = {1.150720896565305E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 31105.739389997292, cumulative cost = {1.150409839171405E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[X0]])\n])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[0,1,0,2,1,2,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :  :  :     :- [#8] Exchange(distribution=[hash[y]])\n:  :  :  :     +- [#9] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[x AS X0, X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X0)], select=[x, y0, X0, X1], build=[right])\n:  :  :        :- [#10] Exchange(distribution=[hash[y0]])\n:  :  :        +- [#11] Exchange(distribution=[hash[X0]])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X1], build=[right])\n:  :        :- [#4] Exchange(distribution=[hash[y00]])\n:  :        +- [#5] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:        :- [#2] Calc(select=[x, y0])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y1 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right])\n      :- Calc(select=[x, y00, y AS y1])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, y], build=[right])\n      :     :- [#4] Exchange(distribution=[hash[y00]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[14])
         :              :- Calc(select=[x, y0])(reuse_id=[9])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :     :- Exchange(distribution=[hash[y]])(reuse_id=[3])
         :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :     +- Exchange(distribution=[hash[x]])
         :              :        +- Calc(select=[x, y])
         :              :           +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :              :- Reused(reference_id=[1])
         :              :              +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :              :- Exchange(distribution=[hash[y00]])(reuse_id=[7])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[3])
         :              :        +- Exchange(distribution=[hash[x]])
         :              :           +- Calc(select=[x, y0])(reuse_id=[21])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[15])
         :              :                 :- Reused(reference_id=[1])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[3])
         :              :        +- Exchange(distribution=[hash[X0]])(reuse_id=[10])
         :              :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :              :              +- Exchange(distribution=[hash[X0, X1]])
         :              :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                    +- Union(all=[true], union=[X0, X1])
         :              :                       :- Calc(select=[x0 AS X0, y AS X1])
         :              :                       :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                       :     :- Calc(select=[y, x0])(reuse_id=[17])
         :              :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :              :                       :     :     :- Reused(reference_id=[1])
         :              :                       :     :     +- Reused(reference_id=[4])
         :              :                       :     +- Reused(reference_id=[5])
         :              :                       +- Calc(select=[x AS X0, x AS X1])(reuse_id=[12])
         :              :                          +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[5])
         :              :- Reused(reference_id=[3])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[8])
         :              :                 +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y0]])(reuse_id=[19])
         :              :  +- Reused(reference_id=[9])
         :              +- Reused(reference_id=[10])
         :- Exchange(distribution=[hash[X0]])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              :- Exchange(distribution=[hash[x]])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[13])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- Reused(reference_id=[11])
         :        :           :              :        :           +- Reused(reference_id=[12])
         :        :           :              :        +- Reused(reference_id=[4])
         :        :           :              :- Reused(reference_id=[13])
         :        :           :              +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[22])
         :        :           :                       :  +- Reused(reference_id=[14])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- Reused(reference_id=[15])
         :        :           :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[16])
         :        :                    +- Reused(reference_id=[5])
         :        +- Reused(reference_id=[5])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[26])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n:  :  :        :- [#1] Exchange(distribution=[hash[y]])\n:  :  :        +- [#10] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X1)], select=[x, y0, X0, X1], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y0]])\n:  :        +- [#6] Exchange(distribution=[hash[X1]])\n:  +- Calc(select=[x AS X0, X0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y00]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[3])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[17])
         :              :                 :           :  :- Reused(reference_id=[4])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[4])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[24])
         :              :                 :                 :- Reused(reference_id=[14])
         :              :                 :                 +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[5])
         :              :- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[3])
         :              :        +- Exchange(distribution=[hash[X1]])(reuse_id=[20])
         :              :           +- Reused(reference_id=[18])
         :              :- Reused(reference_id=[19])
         :              :- Reused(reference_id=[20])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :           :     :- Reused(reference_id=[21])
         :              :        :           :     +- Reused(reference_id=[2])
         :              :        :           +- Reused(reference_id=[22])
         :              :        +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[3])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Calc(select=[X0, x0])
         :                             +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])
         :                                :- Reused(reference_id=[23])
         :                                +- Exchange(distribution=[broadcast])(reuse_id=[27])
         :                                   +- Calc(select=[x, x0])
         :                                      +- Reused(reference_id=[24])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[25])
         :- Reused(reference_id=[26])
         +- Reused(reference_id=[27])

Job has been submitted with JobID 462ea34be47e9bde5a9ec50d6b20e82b
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT r_0.x AS X0, p28_3.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0) UNION (SELECT r_0.x AS X0, p28_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0) UNION (SELECT r_0.x AS X0, r_2.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN r AS r_2 ON r_0.y = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x) UNION (SELECT r_0.x AS X0, r_4.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN a AS a_5 ON r_4.y = a_5.x)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1 UNION (SELECT r_0.x AS X0, p40_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1 INNER JOIN b AS b_4 ON s_2.y = b_4.x) UNION (SELECT r_0.x AS X0, p43_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1) UNION (SELECT r_0.x AS X0, p43_4.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 80203dd5_1a2d_43c6_a17a_0dab9f8763e3

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT r_0.x AS X0, p28_3.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN b AS b_2 ON r_0.y = b_2.x
                      INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0)
            UNION
            (SELECT r_0.x AS X0, p28_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
                      INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0)
            UNION
            (SELECT r_0.x AS X0, r_2.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN r AS r_2 ON r_0.y = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)
            UNION
            (SELECT r_0.x AS X0, r_4.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN b AS b_3 ON s_2.y = b_3.x
                      INNER JOIN r AS r_4 ON s_2.y = r_4.x
                      INNER JOIN a AS a_5 ON r_4.y = a_5.x)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1
             UNION
             (SELECT r_0.x AS X0, p40_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1
                       INNER JOIN b AS b_4 ON s_2.y = b_4.x)
             UNION
             (SELECT r_0.x AS X0, p43_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_0.y = b_2.x
                       INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1)
             UNION
             (SELECT r_0.x AS X0, p43_4.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN r AS r_3 ON s_2.y = r_3.x
                       INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
         :  :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
         :  :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
         :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$8])
         :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 72723.55007049949, cumulative cost = {7.984253566620499E8 rows, 3.568057135570269E10 cpu, 9.846312168E9 io, 4.669177799851858E9 network, 1.6585800115224218E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 72723.55007049949, cumulative cost = {7.983526331119794E8 rows, 3.5679407778901566E10 cpu, 9.846312168E9 io, 4.669177799851858E9 network, 1.65392570431791E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 72723.55007049949, cumulative cost = {7.982799095619088E8 rows, 3.566660843408916E10 cpu, 9.846312168E9 io, 4.6674324346501665E9 network, 1.65392570431791E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 401190.77728493616, cumulative cost = {7.982071860118383E8 rows, 3.5660189381652596E10 cpu, 9.846312168E9 io, 4.6674324346501665E9 network, 1.649271397113398E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 347612.9969544937, cumulative cost = {4.962938814414434E8 rows, 2.144311863552277E10 cpu, 6.15394848E9 io, 2.7993790150462275E9 network, 1.006698814585304E9 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 248239.88018149664, cumulative cost = {3.139594062791565E8 rows, 1.4052046631572231E10 cpu, 3.846210492E9 io, 1.840959127878398E9 network, 6.319050642274076E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 248239.88018149664, cumulative cost = {3.13711166398975E8 rows, 1.4052046631572231E10 cpu, 3.846210492E9 io, 1.840959127878398E9 network, 6.319050642274076E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 662402.5451533138, cumulative cost = {1.824496967769397E8 rows, 7.496693809978113E9 cpu, 2.307731184E9 io, 9.743154866515093E8 network, 3.747889679578965E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 662402.5451533138, cumulative cost = {1.8178729423178637E8 rows, 7.385410182392357E9 cpu, 2.307731184E9 io, 9.584178255678297E8 network, 3.747889679578965E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 662402.5451533138, cumulative cost = {1.8112489168663305E8 rows, 7.374811741669904E9 cpu, 2.307731184E9 io, 9.584178255678297E8 network, 3.3239520506808436E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 662402.5451533138, cumulative cost = {1.8046248914147973E8 rows, 7.25822889372292E9 cpu, 2.307731184E9 io, 9.425201644841502E8 network, 3.3239520506808436E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 3654246.6877367157, cumulative cost = {1.798000865963264E8 rows, 7.199760946719133E9 cpu, 2.307731184E9 io, 9.425201644841502E8 network, 2.900014421782723E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 2548414.9322254187, cumulative cost = {1.4281394375801533E8 rows, 5.831333419023598E9 cpu, 1.846183068E9 io, 7.648551780877361E8 network, 2.3252578834563684E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 2237737.629816772, cumulative cost = {8.947908380459583E7 rows, 3.0126615076904726E9 cpu, 1.230799848E9 io, 3.8312935016390646E8 network, 1.1979983790903175E8 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067948.1587591278, cumulative cost = {5.2451768764459915E7 rows, 1.4474119922859015E9 cpu, 7.69252152E8 io, 1.7840728582546026E8 network, 6.111351181165472E7 memory}
         :  :     :              :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 962117.851388372, cumulative cost = {1.7195204445660453E7 rows, 7.396425689939444E7 cpu, 3.07704924E8 io, 740441.7030696564 network, 3627553.74995294 memory}
         :  :     :              :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962117.851388372, cumulative cost = {1.6233086594272083E7 rows, 7.396425689939444E7 cpu, 3.07704924E8 io, 740441.7030696564 network, 3627553.74995294 memory}
         :  :     :              :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :     :              :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :     :              :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :     :              :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105830.3073707558, cumulative cost = {3.3188616160040334E7 rows, 1.371379787227748E9 cpu, 4.61547228E8 io, 1.776668441223906E8 network, 5.7485958061701775E7 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105830.3073707558, cumulative cost = {3.2082785852669578E7 rows, 1.371379787227748E9 cpu, 4.61547228E8 io, 1.776668441223906E8 network, 5.7485958061701775E7 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 962107.0491383721, cumulative cost = {1.8156765545298822E7 rows, 2.3550621083464098E8 cpu, 3.07704948E8 io, 2.3824564122390587E7 network, 3607963.30995294 memory}
         :  :     :              :  :  :           +- Calc(select=[x, X0]): rowcount = 962107.0491383721, cumulative cost = {1.719465849616045E7 rows, 7.387222657939444E7 cpu, 3.07704948E8 io, 733994.9430696564 network, 3607963.30995294 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 962107.0491383721, cumulative cost = {1.623255144702208E7 rows, 7.387222657939444E7 cpu, 3.07704948E8 io, 733994.9430696564 network, 3607963.30995294 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 3951.9942558133503, cumulative cost = {8860349.397883708 rows, 2.2559850625347935E7 cpu, 1.53862668E8 io, 733994.9430696564 network, 3386651.631627392 memory}
         :  :     :              :  :  :                    +- Calc(select=[X0, x0]): rowcount = 3951.9942558133503, cumulative cost = {8856397.403627895 rows, 2.19275315444178E7 cpu, 1.53862668E8 io, 639147.080930136 network, 3386651.631627392 memory}
         :  :     :              :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 3951.9942558133503, cumulative cost = {8852445.409372082 rows, 2.19275315444178E7 cpu, 1.53862668E8 io, 639147.080930136 network, 3386651.631627392 memory}
         :  :     :              :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :     :              :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :     :              :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :     :              :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :     :              :  :  :                             +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 169789.4710576443, cumulative cost = {3.478957741031915E7 rows, 1.563011777774754E9 cpu, 4.61547696E8 io, 2.047220643384462E8 network, 5.868632609737703E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], build=[right]): rowcount = 169789.4710576443, cumulative cost = {3.46197879392615E7 rows, 1.563011777774754E9 cpu, 4.61547696E8 io, 2.047220643384462E8 network, 5.868632609737703E7 memory}
         :  :     :              :  :        :- Exchange(distribution=[hash[y0]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
         :  :     :              :  :        :  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :     :              :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :     :              :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :     :              :  :        :           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :     :              :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 310677.3024086466, cumulative cost = {5.078644502119408E7 rows, 2.8161234964008994E9 cpu, 6.1538322E8 io, 3.817258279238297E8 network, 1.1272595043660511E8 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 310677.3024086466, cumulative cost = {5.0475767718785435E7 rows, 2.8161234964008994E9 cpu, 6.1538322E8 io, 3.817258279238297E8 network, 1.1272595043660511E8 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y00]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :  :     :              :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :        :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 992529.9893899972, cumulative cost = {1.3101322974185382E8 rows, 6.542113361317773E9 cpu, 1.538479308E9 io, 8.666436412268888E8 network, 2.2002155374092555E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 992529.9893899972, cumulative cost = {1.3002069975246382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 992529.9893899972, cumulative cost = {1.2902816976307382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 206771.5959333153, cumulative cost = {1.1521544977368382E8 rows, 5.245537430332787E9 cpu, 1.384637028E9 io, 6.889806414815289E8 network, 2.0844234436865988E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                            :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 99373.11677299706, cumulative cost = {1.8198686216533238E8 rows, 7.390724390953584E9 cpu, 2.307737988E9 io, 9.584198871678298E8 network, 3.7479375035789645E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 99373.11677299706, cumulative cost = {1.8188748904855937E8 rows, 7.390724390953584E9 cpu, 2.307737988E9 io, 9.584198871678298E8 network, 3.7479375035789645E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 662402.5451533138, cumulative cost = {1.8178729423178637E8 rows, 7.385410182392357E9 cpu, 2.307731184E9 io, 9.584178255678297E8 network, 3.747889679578965E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 662402.5451533138, cumulative cost = {1.8112489168663305E8 rows, 7.374811741669904E9 cpu, 2.307731184E9 io, 9.584178255678297E8 network, 3.3239520506808436E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 662402.5451533138, cumulative cost = {1.8046248914147973E8 rows, 7.25822889372292E9 cpu, 2.307731184E9 io, 9.425201644841502E8 network, 3.3239520506808436E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 3654246.6877367157, cumulative cost = {1.798000865963264E8 rows, 7.199760946719133E9 cpu, 2.307731184E9 io, 9.425201644841502E8 network, 2.900014421782723E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 2548414.9322254187, cumulative cost = {1.4281394375801533E8 rows, 5.831333419023598E9 cpu, 1.846183068E9 io, 7.648551780877361E8 network, 2.3252578834563684E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 2237737.629816772, cumulative cost = {8.947908380459583E7 rows, 3.0126615076904726E9 cpu, 1.230799848E9 io, 3.8312935016390646E8 network, 1.1979983790903175E8 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067948.1587591278, cumulative cost = {5.2451768764459915E7 rows, 1.4474119922859015E9 cpu, 7.69252152E8 io, 1.7840728582546026E8 network, 6.111351181165472E7 memory}
         :        :           :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 962117.851388372, cumulative cost = {1.7195204445660453E7 rows, 7.396425689939444E7 cpu, 3.07704924E8 io, 740441.7030696564 network, 3627553.74995294 memory}
         :        :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962117.851388372, cumulative cost = {1.6233086594272083E7 rows, 7.396425689939444E7 cpu, 3.07704924E8 io, 740441.7030696564 network, 3627553.74995294 memory}
         :        :           :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :        :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :        :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :        :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :        :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105830.3073707558, cumulative cost = {3.3188616160040334E7 rows, 1.371379787227748E9 cpu, 4.61547228E8 io, 1.776668441223906E8 network, 5.7485958061701775E7 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105830.3073707558, cumulative cost = {3.2082785852669578E7 rows, 1.371379787227748E9 cpu, 4.61547228E8 io, 1.776668441223906E8 network, 5.7485958061701775E7 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 962107.0491383721, cumulative cost = {1.8156765545298822E7 rows, 2.3550621083464098E8 cpu, 3.07704948E8 io, 2.3824564122390587E7 network, 3607963.30995294 memory}
         :        :           :  :  :           +- Calc(select=[x, X0]): rowcount = 962107.0491383721, cumulative cost = {1.719465849616045E7 rows, 7.387222657939444E7 cpu, 3.07704948E8 io, 733994.9430696564 network, 3607963.30995294 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 962107.0491383721, cumulative cost = {1.623255144702208E7 rows, 7.387222657939444E7 cpu, 3.07704948E8 io, 733994.9430696564 network, 3607963.30995294 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 3951.9942558133503, cumulative cost = {8860349.397883708 rows, 2.2559850625347935E7 cpu, 1.53862668E8 io, 733994.9430696564 network, 3386651.631627392 memory}
         :        :           :  :  :                    +- Calc(select=[X0, x0]): rowcount = 3951.9942558133503, cumulative cost = {8856397.403627895 rows, 2.19275315444178E7 cpu, 1.53862668E8 io, 639147.080930136 network, 3386651.631627392 memory}
         :        :           :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 3951.9942558133503, cumulative cost = {8852445.409372082 rows, 2.19275315444178E7 cpu, 1.53862668E8 io, 639147.080930136 network, 3386651.631627392 memory}
         :        :           :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :        :           :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :        :           :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :        :           :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :        :           :  :  :                             +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 169789.4710576443, cumulative cost = {3.478957741031915E7 rows, 1.563011777774754E9 cpu, 4.61547696E8 io, 2.047220643384462E8 network, 5.868632609737703E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], build=[right]): rowcount = 169789.4710576443, cumulative cost = {3.46197879392615E7 rows, 1.563011777774754E9 cpu, 4.61547696E8 io, 2.047220643384462E8 network, 5.868632609737703E7 memory}
         :        :           :  :        :- Exchange(distribution=[hash[y0]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
         :        :           :  :        :  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :        :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :        :           :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :        :           :  :        :           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :        :           :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :           :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :           :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :           :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :           :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :           :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 310677.3024086466, cumulative cost = {5.078644502119408E7 rows, 2.8161234964008994E9 cpu, 6.1538322E8 io, 3.817258279238297E8 network, 1.1272595043660511E8 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 310677.3024086466, cumulative cost = {5.0475767718785435E7 rows, 2.8161234964008994E9 cpu, 6.1538322E8 io, 3.817258279238297E8 network, 1.1272595043660511E8 memory}
         :        :           :        :- Exchange(distribution=[hash[y00]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :        :           :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :        :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 53577.780330442496, cumulative cost = {3.0151211379311E8 rows, 1.421666955535254E10 cpu, 3.692363688E9 io, 1.868053419603939E9 network, 6.425725825280939E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], build=[right]): rowcount = 53577.780330442496, cumulative cost = {3.014585360127796E8 rows, 1.421666955535254E10 cpu, 3.692363688E9 io, 1.868053419603939E9 network, 6.425725825280939E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 326079.4628129527, cumulative cost = {1.8630176283652863E8 rows, 8.99603153453394E9 cpu, 2.30771946E9 io, 1.1832815586794498E9 network, 4.3236671675359416E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 326079.4628129527, cumulative cost = {1.8597568337371567E8 rows, 8.941250184781363E9 cpu, 2.30771946E9 io, 1.175455651571939E9 network, 4.3236671675359416E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 326079.4628129527, cumulative cost = {1.856496039109027E8 rows, 8.936032913376356E9 cpu, 2.30771946E9 io, 1.175455651571939E9 network, 4.114976311335652E8 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 326079.4628129527, cumulative cost = {1.8532352444808975E8 rows, 8.878642927921276E9 cpu, 2.30771946E9 io, 1.1676297444644282E9 network, 4.114976311335652E8 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1798868.0835267755, cumulative cost = {1.849974449852768E8 rows, 8.849861038584848E9 cpu, 2.30771946E9 io, 1.1676297444644282E9 network, 3.906285455135362E8 memory}
               :              :- Union(all=[true], union=[X0, X1]): rowcount = 1752268.0561767754, cumulative cost = {1.4775588096905E8 rows, 7.126438530149322E9 cpu, 1.846178616E9 io, 9.410808190244281E8 network, 2.8289193311353624E8 memory}
               :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1586314.9411767754, cumulative cost = {1.213427864828732E8 rows, 5.766945605293144E9 cpu, 1.538480076E9 io, 7.641461830244281E8 network, 2.2900044911353624E8 memory}
               :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 1275635.5391264416, cumulative cost = {6.911235111875197E7 rows, 2.9425047996252284E9 cpu, 9.23096508E8 io, 3.824084119223294E8 network, 1.1623502840757124E8 memory}
               :              :  :  :  :- Calc(select=[x AS X0, X1]): rowcount = 1105832.07045755, cumulative cost = {3.3189480964450616E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 1105832.07045755, cumulative cost = {3.2083648893993065E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :  :  :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 962118.8030503338, cumulative cost = {1.8157626823535513E7 rows, 2.3561518514068538E8 cpu, 3.07706184E8 io, 2.3832460348284073E7 network, 3631362.936245466 memory}
               :              :  :  :  :        +- Calc(select=[x, X1]): rowcount = 962118.8030503338, cumulative cost = {1.7195508020485178E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962118.8030503338, cumulative cost = {1.6233389217434842E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 4030.3536688916415, cumulative cost = {8861175.414384509 rows, 2.2666223398878183E7 cpu, 1.53863904E8 io, 741609.075076062 network, 3405663.130787534 memory}
               :              :  :  :  :                 +- Calc(select=[X0, X1]): rowcount = 4030.3536688916415, cumulative cost = {8857145.060715618 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :  :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4030.3536688916415, cumulative cost = {8853114.707046727 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :  :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :  :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :  :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :  :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :  :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :  :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :  :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :  :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :  :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :  +- Calc(select=[x AS X0, X1]): rowcount = 169803.4686688916, cumulative cost = {3.4647234615174904E7 rows, 1.569740308521014E9 cpu, 4.61548044E8 io, 2.0473367157404533E8 network, 5.872501250050709E7 memory}
               :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X0)], select=[x, y0, X0, X1], build=[right]): rowcount = 169803.4686688916, cumulative cost = {3.447743114650601E7 rows, 1.569740308521014E9 cpu, 4.61548044E8 io, 2.0473367157404533E8 network, 5.872501250050709E7 memory}
               :              :  :  :        :- Exchange(distribution=[hash[y0]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
               :              :  :  :        :  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
               :              :  :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
               :              :  :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
               :              :  :  :        :           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :  :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              :  :  :        +- Exchange(distribution=[hash[X0]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
               :              :  :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :                       :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :                       :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :  :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :  :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :  :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :  :                       :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :  :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  +- Calc(select=[x AS X0, X1]): rowcount = 310679.40205033374, cumulative cost = {5.064412042294446E7 rows, 2.822854490726739E9 cpu, 6.15383568E8 io, 3.817377711020987E8 network, 1.1276542070596501E8 memory}
               :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X1], build=[right]): rowcount = 310679.40205033374, cumulative cost = {5.0333441020894125E7 rows, 2.822854490726739E9 cpu, 6.15383568E8 io, 3.817377711020987E8 network, 1.1276542070596501E8 memory}
               :              :  :        :- Exchange(distribution=[hash[y00]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
               :              :  :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :              :  :        :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :        +- Exchange(distribution=[hash[x]]): rowcount = 965454.6036688916, cumulative cost = {2.4590707188843787E7 rows, 1.3167068563373878E9 cpu, 3.07698984E8 io, 1.782813276620987E8 network, 4855128.500507081 memory}
               :              :  :           +- Calc(select=[x, X1]): rowcount = 965454.6036688916, cumulative cost = {2.3625252585174896E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965454.6036688916, cumulative cost = {2.2659797981506005E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :                 +- Exchange(distribution=[hash[X0]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
               :              :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 165953.11499999996, cumulative cost = {2.466082643E7 rows, 1.3577406568E9 cpu, 3.0769854E8 io, 1.76934636E8 network, 5.3891484E7 memory}
               :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 165953.11499999996, cumulative cost = {2.4494873315E7 rows, 1.3577406568E9 cpu, 3.0769854E8 io, 1.76934636E8 network, 5.3891484E7 memory}
               :              :        :- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
               :              :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
               :              :        :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
               :              :        :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              :        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x AS X0, y1 AS X1]): rowcount = 46600.02735, cumulative cost = {3.54426959327E7 rows, 1.7216236403520002E9 cpu, 4.61540844E8 io, 2.2654892544E8 network, 1.077366124E8 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right]): rowcount = 46600.02735, cumulative cost = {3.539609590535E7 rows, 1.7216236403520002E9 cpu, 4.61540844E8 io, 2.2654892544E8 network, 1.077366124E8 memory}
               :                    :- Calc(select=[x, y00, y AS y1]): rowcount = 310101.849, cumulative cost = {3.5348365878E7 rows, 1.7190479055600002E9 cpu, 4.61534064E8 io, 2.2654214544E8 network, 1.077162724E8 memory}
               :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, y], build=[right]): rowcount = 310101.849, cumulative cost = {3.5038264029E7 rows, 1.7190479055600002E9 cpu, 4.61534064E8 io, 2.2654214544E8 network, 1.077162724E8 memory}
               :                    :     :- Exchange(distribution=[hash[y00]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
               :                    :     :  +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :     :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                    :     :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :     +- Exchange(distribution=[hash[x]]): rowcount = 961604.25, cumulative cost = {9296107.75 rows, 2.12931074E8 cpu, 1.5384948E8 io, 2.3085702E7 network, 21600.0 memory}
               :                    :        +- Calc(select=[x, y]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :                    :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[X0]]): rowcount = 31105.739389997292, cumulative cost = {1.151031953959205E8 rows, 5.217780539200975E9 cpu, 1.384644228E9 io, 6.847718609244893E8 network, 2.0846394436865988E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 31105.739389997292, cumulative cost = {1.150720896565305E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 31105.739389997292, cumulative cost = {1.150409839171405E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[X0]])\n])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[0,1,0,2,1,2,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :  :  :     :- [#8] Exchange(distribution=[hash[y]])\n:  :  :  :     +- [#9] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[x AS X0, X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X0)], select=[x, y0, X0, X1], build=[right])\n:  :  :        :- [#10] Exchange(distribution=[hash[y0]])\n:  :  :        +- [#11] Exchange(distribution=[hash[X0]])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X1], build=[right])\n:  :        :- [#4] Exchange(distribution=[hash[y00]])\n:  :        +- [#5] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:        :- [#2] Calc(select=[x, y0])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y1 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right])\n      :- Calc(select=[x, y00, y AS y1])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, y], build=[right])\n      :     :- [#4] Exchange(distribution=[hash[y00]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[14])
         :              :- Calc(select=[x, y0])(reuse_id=[9])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :     :- Exchange(distribution=[hash[y]])(reuse_id=[3])
         :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :     +- Exchange(distribution=[hash[x]])
         :              :        +- Calc(select=[x, y])
         :              :           +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :              :- Reused(reference_id=[1])
         :              :              +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :              :- Exchange(distribution=[hash[y00]])(reuse_id=[7])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[3])
         :              :        +- Exchange(distribution=[hash[x]])
         :              :           +- Calc(select=[x, y0])(reuse_id=[21])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[15])
         :              :                 :- Reused(reference_id=[1])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[3])
         :              :        +- Exchange(distribution=[hash[X0]])(reuse_id=[10])
         :              :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :              :              +- Exchange(distribution=[hash[X0, X1]])
         :              :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                    +- Union(all=[true], union=[X0, X1])
         :              :                       :- Calc(select=[x0 AS X0, y AS X1])
         :              :                       :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                       :     :- Calc(select=[y, x0])(reuse_id=[17])
         :              :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :              :                       :     :     :- Reused(reference_id=[1])
         :              :                       :     :     +- Reused(reference_id=[4])
         :              :                       :     +- Reused(reference_id=[5])
         :              :                       +- Calc(select=[x AS X0, x AS X1])(reuse_id=[12])
         :              :                          +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[5])
         :              :- Reused(reference_id=[3])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[8])
         :              :                 +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y0]])(reuse_id=[19])
         :              :  +- Reused(reference_id=[9])
         :              +- Reused(reference_id=[10])
         :- Exchange(distribution=[hash[X0]])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              :- Exchange(distribution=[hash[x]])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[13])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- Reused(reference_id=[11])
         :        :           :              :        :           +- Reused(reference_id=[12])
         :        :           :              :        +- Reused(reference_id=[4])
         :        :           :              :- Reused(reference_id=[13])
         :        :           :              +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[22])
         :        :           :                       :  +- Reused(reference_id=[14])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- Reused(reference_id=[15])
         :        :           :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[16])
         :        :                    +- Reused(reference_id=[5])
         :        +- Reused(reference_id=[5])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[26])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n:  :  :        :- [#1] Exchange(distribution=[hash[y]])\n:  :  :        +- [#10] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X1)], select=[x, y0, X0, X1], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y0]])\n:  :        +- [#6] Exchange(distribution=[hash[X1]])\n:  +- Calc(select=[x AS X0, X0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y00]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[3])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[17])
         :              :                 :           :  :- Reused(reference_id=[4])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[4])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[24])
         :              :                 :                 :- Reused(reference_id=[14])
         :              :                 :                 +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[5])
         :              :- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[3])
         :              :        +- Exchange(distribution=[hash[X1]])(reuse_id=[20])
         :              :           +- Reused(reference_id=[18])
         :              :- Reused(reference_id=[19])
         :              :- Reused(reference_id=[20])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :           :     :- Reused(reference_id=[21])
         :              :        :           :     +- Reused(reference_id=[2])
         :              :        :           +- Reused(reference_id=[22])
         :              :        +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[3])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Calc(select=[X0, x0])
         :                             +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])
         :                                :- Reused(reference_id=[23])
         :                                +- Exchange(distribution=[broadcast])(reuse_id=[27])
         :                                   +- Calc(select=[x, x0])
         :                                      +- Reused(reference_id=[24])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[25])
         :- Reused(reference_id=[26])
         +- Reused(reference_id=[27])

Job has been submitted with JobID 8772453f6f18368ccb2a99421f7a946e
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT r_0.x AS X0, p28_3.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0) UNION (SELECT r_0.x AS X0, p28_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0) UNION (SELECT r_0.x AS X0, r_2.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN r AS r_2 ON r_0.y = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x) UNION (SELECT r_0.x AS X0, r_4.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN a AS a_5 ON r_4.y = a_5.x)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1 UNION (SELECT r_0.x AS X0, p40_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1 INNER JOIN b AS b_4 ON s_2.y = b_4.x) UNION (SELECT r_0.x AS X0, p43_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1) UNION (SELECT r_0.x AS X0, p43_4.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: dc5dbada_3570_4217_8aa6_5b3775eefca8

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT r_0.x AS X0, p28_3.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN b AS b_2 ON r_0.y = b_2.x
                      INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0)
            UNION
            (SELECT r_0.x AS X0, p28_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
                      INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0)
            UNION
            (SELECT r_0.x AS X0, r_2.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN r AS r_2 ON r_0.y = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)
            UNION
            (SELECT r_0.x AS X0, r_4.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN b AS b_3 ON s_2.y = b_3.x
                      INNER JOIN r AS r_4 ON s_2.y = r_4.x
                      INNER JOIN a AS a_5 ON r_4.y = a_5.x)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1
             UNION
             (SELECT r_0.x AS X0, p40_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1
                       INNER JOIN b AS b_4 ON s_2.y = b_4.x)
             UNION
             (SELECT r_0.x AS X0, p43_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_0.y = b_2.x
                       INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1)
             UNION
             (SELECT r_0.x AS X0, p43_4.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN r AS r_3 ON s_2.y = r_3.x
                       INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
         :  :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
         :  :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
         :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$8])
         :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 72723.55007049949, cumulative cost = {7.984253566620499E8 rows, 3.568057135570269E10 cpu, 9.846312168E9 io, 4.669177799851858E9 network, 1.6585800115224218E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 72723.55007049949, cumulative cost = {7.983526331119794E8 rows, 3.5679407778901566E10 cpu, 9.846312168E9 io, 4.669177799851858E9 network, 1.65392570431791E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 72723.55007049949, cumulative cost = {7.982799095619088E8 rows, 3.566660843408916E10 cpu, 9.846312168E9 io, 4.6674324346501665E9 network, 1.65392570431791E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 401190.77728493616, cumulative cost = {7.982071860118383E8 rows, 3.5660189381652596E10 cpu, 9.846312168E9 io, 4.6674324346501665E9 network, 1.649271397113398E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 347612.9969544937, cumulative cost = {4.962938814414434E8 rows, 2.144311863552277E10 cpu, 6.15394848E9 io, 2.7993790150462275E9 network, 1.006698814585304E9 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 248239.88018149664, cumulative cost = {3.139594062791565E8 rows, 1.4052046631572231E10 cpu, 3.846210492E9 io, 1.840959127878398E9 network, 6.319050642274076E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 248239.88018149664, cumulative cost = {3.13711166398975E8 rows, 1.4052046631572231E10 cpu, 3.846210492E9 io, 1.840959127878398E9 network, 6.319050642274076E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 662402.5451533138, cumulative cost = {1.824496967769397E8 rows, 7.496693809978113E9 cpu, 2.307731184E9 io, 9.743154866515093E8 network, 3.747889679578965E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 662402.5451533138, cumulative cost = {1.8178729423178637E8 rows, 7.385410182392357E9 cpu, 2.307731184E9 io, 9.584178255678297E8 network, 3.747889679578965E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 662402.5451533138, cumulative cost = {1.8112489168663305E8 rows, 7.374811741669904E9 cpu, 2.307731184E9 io, 9.584178255678297E8 network, 3.3239520506808436E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 662402.5451533138, cumulative cost = {1.8046248914147973E8 rows, 7.25822889372292E9 cpu, 2.307731184E9 io, 9.425201644841502E8 network, 3.3239520506808436E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 3654246.6877367157, cumulative cost = {1.798000865963264E8 rows, 7.199760946719133E9 cpu, 2.307731184E9 io, 9.425201644841502E8 network, 2.900014421782723E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 2548414.9322254187, cumulative cost = {1.4281394375801533E8 rows, 5.831333419023598E9 cpu, 1.846183068E9 io, 7.648551780877361E8 network, 2.3252578834563684E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 2237737.629816772, cumulative cost = {8.947908380459583E7 rows, 3.0126615076904726E9 cpu, 1.230799848E9 io, 3.8312935016390646E8 network, 1.1979983790903175E8 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067948.1587591278, cumulative cost = {5.2451768764459915E7 rows, 1.4474119922859015E9 cpu, 7.69252152E8 io, 1.7840728582546026E8 network, 6.111351181165472E7 memory}
         :  :     :              :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 962117.851388372, cumulative cost = {1.7195204445660453E7 rows, 7.396425689939444E7 cpu, 3.07704924E8 io, 740441.7030696564 network, 3627553.74995294 memory}
         :  :     :              :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962117.851388372, cumulative cost = {1.6233086594272083E7 rows, 7.396425689939444E7 cpu, 3.07704924E8 io, 740441.7030696564 network, 3627553.74995294 memory}
         :  :     :              :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :     :              :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :     :              :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :     :              :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :     :              :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105830.3073707558, cumulative cost = {3.3188616160040334E7 rows, 1.371379787227748E9 cpu, 4.61547228E8 io, 1.776668441223906E8 network, 5.7485958061701775E7 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105830.3073707558, cumulative cost = {3.2082785852669578E7 rows, 1.371379787227748E9 cpu, 4.61547228E8 io, 1.776668441223906E8 network, 5.7485958061701775E7 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 962107.0491383721, cumulative cost = {1.8156765545298822E7 rows, 2.3550621083464098E8 cpu, 3.07704948E8 io, 2.3824564122390587E7 network, 3607963.30995294 memory}
         :  :     :              :  :  :           +- Calc(select=[x, X0]): rowcount = 962107.0491383721, cumulative cost = {1.719465849616045E7 rows, 7.387222657939444E7 cpu, 3.07704948E8 io, 733994.9430696564 network, 3607963.30995294 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 962107.0491383721, cumulative cost = {1.623255144702208E7 rows, 7.387222657939444E7 cpu, 3.07704948E8 io, 733994.9430696564 network, 3607963.30995294 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 3951.9942558133503, cumulative cost = {8860349.397883708 rows, 2.2559850625347935E7 cpu, 1.53862668E8 io, 733994.9430696564 network, 3386651.631627392 memory}
         :  :     :              :  :  :                    +- Calc(select=[X0, x0]): rowcount = 3951.9942558133503, cumulative cost = {8856397.403627895 rows, 2.19275315444178E7 cpu, 1.53862668E8 io, 639147.080930136 network, 3386651.631627392 memory}
         :  :     :              :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 3951.9942558133503, cumulative cost = {8852445.409372082 rows, 2.19275315444178E7 cpu, 1.53862668E8 io, 639147.080930136 network, 3386651.631627392 memory}
         :  :     :              :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :     :              :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :     :              :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :     :              :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :     :              :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :     :              :  :  :                             +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 169789.4710576443, cumulative cost = {3.478957741031915E7 rows, 1.563011777774754E9 cpu, 4.61547696E8 io, 2.047220643384462E8 network, 5.868632609737703E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], build=[right]): rowcount = 169789.4710576443, cumulative cost = {3.46197879392615E7 rows, 1.563011777774754E9 cpu, 4.61547696E8 io, 2.047220643384462E8 network, 5.868632609737703E7 memory}
         :  :     :              :  :        :- Exchange(distribution=[hash[y0]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
         :  :     :              :  :        :  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :     :              :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :  :     :              :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :  :     :              :  :        :           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :     :              :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :     :              :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :     :              :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 310677.3024086466, cumulative cost = {5.078644502119408E7 rows, 2.8161234964008994E9 cpu, 6.1538322E8 io, 3.817258279238297E8 network, 1.1272595043660511E8 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 310677.3024086466, cumulative cost = {5.0475767718785435E7 rows, 2.8161234964008994E9 cpu, 6.1538322E8 io, 3.817258279238297E8 network, 1.1272595043660511E8 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y00]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :  :     :              :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :     :              :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :     :              :        :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :     :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 992529.9893899972, cumulative cost = {1.3101322974185382E8 rows, 6.542113361317773E9 cpu, 1.538479308E9 io, 8.666436412268888E8 network, 2.2002155374092555E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 992529.9893899972, cumulative cost = {1.3002069975246382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 992529.9893899972, cumulative cost = {1.2902816976307382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 206771.5959333153, cumulative cost = {1.1521544977368382E8 rows, 5.245537430332787E9 cpu, 1.384637028E9 io, 6.889806414815289E8 network, 2.0844234436865988E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                             :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                                            :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                                            :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 99373.11677299706, cumulative cost = {1.8198686216533238E8 rows, 7.390724390953584E9 cpu, 2.307737988E9 io, 9.584198871678298E8 network, 3.7479375035789645E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 99373.11677299706, cumulative cost = {1.8188748904855937E8 rows, 7.390724390953584E9 cpu, 2.307737988E9 io, 9.584198871678298E8 network, 3.7479375035789645E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 662402.5451533138, cumulative cost = {1.8178729423178637E8 rows, 7.385410182392357E9 cpu, 2.307731184E9 io, 9.584178255678297E8 network, 3.747889679578965E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 662402.5451533138, cumulative cost = {1.8112489168663305E8 rows, 7.374811741669904E9 cpu, 2.307731184E9 io, 9.584178255678297E8 network, 3.3239520506808436E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 662402.5451533138, cumulative cost = {1.8046248914147973E8 rows, 7.25822889372292E9 cpu, 2.307731184E9 io, 9.425201644841502E8 network, 3.3239520506808436E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 3654246.6877367157, cumulative cost = {1.798000865963264E8 rows, 7.199760946719133E9 cpu, 2.307731184E9 io, 9.425201644841502E8 network, 2.900014421782723E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 2548414.9322254187, cumulative cost = {1.4281394375801533E8 rows, 5.831333419023598E9 cpu, 1.846183068E9 io, 7.648551780877361E8 network, 2.3252578834563684E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 2237737.629816772, cumulative cost = {8.947908380459583E7 rows, 3.0126615076904726E9 cpu, 1.230799848E9 io, 3.8312935016390646E8 network, 1.1979983790903175E8 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 2067948.1587591278, cumulative cost = {5.2451768764459915E7 rows, 1.4474119922859015E9 cpu, 7.69252152E8 io, 1.7840728582546026E8 network, 6.111351181165472E7 memory}
         :        :           :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 962117.851388372, cumulative cost = {1.7195204445660453E7 rows, 7.396425689939444E7 cpu, 3.07704924E8 io, 740441.7030696564 network, 3627553.74995294 memory}
         :        :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962117.851388372, cumulative cost = {1.6233086594272083E7 rows, 7.396425689939444E7 cpu, 3.07704924E8 io, 740441.7030696564 network, 3627553.74995294 memory}
         :        :           :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :        :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :        :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :        :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :        :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :        :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105830.3073707558, cumulative cost = {3.3188616160040334E7 rows, 1.371379787227748E9 cpu, 4.61547228E8 io, 1.776668441223906E8 network, 5.7485958061701775E7 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105830.3073707558, cumulative cost = {3.2082785852669578E7 rows, 1.371379787227748E9 cpu, 4.61547228E8 io, 1.776668441223906E8 network, 5.7485958061701775E7 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 962107.0491383721, cumulative cost = {1.8156765545298822E7 rows, 2.3550621083464098E8 cpu, 3.07704948E8 io, 2.3824564122390587E7 network, 3607963.30995294 memory}
         :        :           :  :  :           +- Calc(select=[x, X0]): rowcount = 962107.0491383721, cumulative cost = {1.719465849616045E7 rows, 7.387222657939444E7 cpu, 3.07704948E8 io, 733994.9430696564 network, 3607963.30995294 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 962107.0491383721, cumulative cost = {1.623255144702208E7 rows, 7.387222657939444E7 cpu, 3.07704948E8 io, 733994.9430696564 network, 3607963.30995294 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 3951.9942558133503, cumulative cost = {8860349.397883708 rows, 2.2559850625347935E7 cpu, 1.53862668E8 io, 733994.9430696564 network, 3386651.631627392 memory}
         :        :           :  :  :                    +- Calc(select=[X0, x0]): rowcount = 3951.9942558133503, cumulative cost = {8856397.403627895 rows, 2.19275315444178E7 cpu, 1.53862668E8 io, 639147.080930136 network, 3386651.631627392 memory}
         :        :           :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 3951.9942558133503, cumulative cost = {8852445.409372082 rows, 2.19275315444178E7 cpu, 1.53862668E8 io, 639147.080930136 network, 3386651.631627392 memory}
         :        :           :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :        :           :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :        :           :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :        :           :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :        :           :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :        :           :  :  :                             +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 169789.4710576443, cumulative cost = {3.478957741031915E7 rows, 1.563011777774754E9 cpu, 4.61547696E8 io, 2.047220643384462E8 network, 5.868632609737703E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], build=[right]): rowcount = 169789.4710576443, cumulative cost = {3.46197879392615E7 rows, 1.563011777774754E9 cpu, 4.61547696E8 io, 2.047220643384462E8 network, 5.868632609737703E7 memory}
         :        :           :  :        :- Exchange(distribution=[hash[y0]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
         :        :           :  :        :  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :        :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
         :        :           :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
         :        :           :  :        :           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :           :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :           :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :        :           :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :           :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :           :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :           :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :           :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :           :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 310677.3024086466, cumulative cost = {5.078644502119408E7 rows, 2.8161234964008994E9 cpu, 6.1538322E8 io, 3.817258279238297E8 network, 1.1272595043660511E8 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 310677.3024086466, cumulative cost = {5.0475767718785435E7 rows, 2.8161234964008994E9 cpu, 6.1538322E8 io, 3.817258279238297E8 network, 1.1272595043660511E8 memory}
         :        :           :        :- Exchange(distribution=[hash[y00]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
         :        :           :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :           :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :           :        :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :        :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :           :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 53577.780330442496, cumulative cost = {3.0151211379311E8 rows, 1.421666955535254E10 cpu, 3.692363688E9 io, 1.868053419603939E9 network, 6.425725825280939E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], build=[right]): rowcount = 53577.780330442496, cumulative cost = {3.014585360127796E8 rows, 1.421666955535254E10 cpu, 3.692363688E9 io, 1.868053419603939E9 network, 6.425725825280939E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 326079.4628129527, cumulative cost = {1.8630176283652863E8 rows, 8.99603153453394E9 cpu, 2.30771946E9 io, 1.1832815586794498E9 network, 4.3236671675359416E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 326079.4628129527, cumulative cost = {1.8597568337371567E8 rows, 8.941250184781363E9 cpu, 2.30771946E9 io, 1.175455651571939E9 network, 4.3236671675359416E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 326079.4628129527, cumulative cost = {1.856496039109027E8 rows, 8.936032913376356E9 cpu, 2.30771946E9 io, 1.175455651571939E9 network, 4.114976311335652E8 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 326079.4628129527, cumulative cost = {1.8532352444808975E8 rows, 8.878642927921276E9 cpu, 2.30771946E9 io, 1.1676297444644282E9 network, 4.114976311335652E8 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1798868.0835267755, cumulative cost = {1.849974449852768E8 rows, 8.849861038584848E9 cpu, 2.30771946E9 io, 1.1676297444644282E9 network, 3.906285455135362E8 memory}
               :              :- Union(all=[true], union=[X0, X1]): rowcount = 1752268.0561767754, cumulative cost = {1.4775588096905E8 rows, 7.126438530149322E9 cpu, 1.846178616E9 io, 9.410808190244281E8 network, 2.8289193311353624E8 memory}
               :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1586314.9411767754, cumulative cost = {1.213427864828732E8 rows, 5.766945605293144E9 cpu, 1.538480076E9 io, 7.641461830244281E8 network, 2.2900044911353624E8 memory}
               :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 1275635.5391264416, cumulative cost = {6.911235111875197E7 rows, 2.9425047996252284E9 cpu, 9.23096508E8 io, 3.824084119223294E8 network, 1.1623502840757124E8 memory}
               :              :  :  :  :- Calc(select=[x AS X0, X1]): rowcount = 1105832.07045755, cumulative cost = {3.3189480964450616E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 1105832.07045755, cumulative cost = {3.2083648893993065E7 rows, 1.371488855565088E9 cpu, 4.61548464E8 io, 1.7767474034828407E8 network, 5.7510015907064155E7 memory}
               :              :  :  :  :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 962118.8030503338, cumulative cost = {1.8157626823535513E7 rows, 2.3561518514068538E8 cpu, 3.07706184E8 io, 2.3832460348284073E7 network, 3631362.936245466 memory}
               :              :  :  :  :        +- Calc(select=[x, X1]): rowcount = 962118.8030503338, cumulative cost = {1.7195508020485178E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962118.8030503338, cumulative cost = {1.6233389217434842E7 rows, 7.397922622822931E7 cpu, 3.07706184E8 io, 741609.075076062 network, 3631362.936245466 memory}
               :              :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 4030.3536688916415, cumulative cost = {8861175.414384509 rows, 2.2666223398878183E7 cpu, 1.53863904E8 io, 741609.075076062 network, 3405663.130787534 memory}
               :              :  :  :  :                 +- Calc(select=[X0, X1]): rowcount = 4030.3536688916415, cumulative cost = {8857145.060715618 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :  :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4030.3536688916415, cumulative cost = {8853114.707046727 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
               :              :  :  :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :  :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :  :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :  :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :  :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :  :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :  :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :  :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :  :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :  +- Calc(select=[x AS X0, X1]): rowcount = 169803.4686688916, cumulative cost = {3.4647234615174904E7 rows, 1.569740308521014E9 cpu, 4.61548044E8 io, 2.0473367157404533E8 network, 5.872501250050709E7 memory}
               :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X0)], select=[x, y0, X0, X1], build=[right]): rowcount = 169803.4686688916, cumulative cost = {3.447743114650601E7 rows, 1.569740308521014E9 cpu, 4.61548044E8 io, 2.0473367157404533E8 network, 5.872501250050709E7 memory}
               :              :  :  :        :- Exchange(distribution=[hash[y0]]): rowcount = 1105754.0999999999, cumulative cost = {2.5433474300000004E7 rows, 1.5345605128E9 cpu, 3.0769134E8 io, 2.034655344E8 network, 5.3869884E7 memory}
               :              :  :  :        :  +- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
               :              :  :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
               :              :  :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
               :              :  :  :        :           +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :  :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :  :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              :  :  :        +- Exchange(distribution=[hash[X0]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
               :              :  :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :                       :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :  :                       :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :  :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :  :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :  :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :  :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :  :                       :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :  :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :  +- Calc(select=[x AS X0, X1]): rowcount = 310679.40205033374, cumulative cost = {5.064412042294446E7 rows, 2.822854490726739E9 cpu, 6.15383568E8 io, 3.817377711020987E8 network, 1.1276542070596501E8 memory}
               :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X1], build=[right]): rowcount = 310679.40205033374, cumulative cost = {5.0333441020894125E7 rows, 2.822854490726739E9 cpu, 6.15383568E8 io, 3.817377711020987E8 network, 1.1276542070596501E8 memory}
               :              :  :        :- Exchange(distribution=[hash[y00]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
               :              :  :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :              :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :              :  :        :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :        +- Exchange(distribution=[hash[x]]): rowcount = 965454.6036688916, cumulative cost = {2.4590707188843787E7 rows, 1.3167068563373878E9 cpu, 3.07698984E8 io, 1.782813276620987E8 network, 4855128.500507081 memory}
               :              :  :           +- Calc(select=[x, X1]): rowcount = 965454.6036688916, cumulative cost = {2.3625252585174896E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965454.6036688916, cumulative cost = {2.2659797981506005E7 rows, 1.154510482921014E9 cpu, 3.07698984E8 io, 1.5511041717404532E8 network, 4855128.500507081 memory}
               :              :  :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :  :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :                 +- Exchange(distribution=[hash[X0]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
               :              :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
               :              :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
               :              :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
               :              :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
               :              :  :                                :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :              :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :              :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :              :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 165953.11499999996, cumulative cost = {2.466082643E7 rows, 1.3577406568E9 cpu, 3.0769854E8 io, 1.76934636E8 network, 5.3891484E7 memory}
               :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 165953.11499999996, cumulative cost = {2.4494873315E7 rows, 1.3577406568E9 cpu, 3.0769854E8 io, 1.76934636E8 network, 5.3891484E7 memory}
               :              :        :- Calc(select=[x, y0]): rowcount = 1105754.0999999999, cumulative cost = {2.4327720200000003E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
               :              :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105754.0999999999, cumulative cost = {2.32219661E7 rows, 1.348793824E9 cpu, 3.0769134E8 io, 1.76927436E8 network, 5.3869884E7 memory}
               :              :        :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :              :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :     +- Exchange(distribution=[hash[x]]): rowcount = 961599.0, cumulative cost = {9296022.0 rows, 2.12924312E8 cpu, 1.5384906E8 io, 2.3085156E7 network, 20340.0 memory}
               :              :        :        +- Calc(select=[x, y]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :        :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              :        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :              :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x AS X0, y1 AS X1]): rowcount = 46600.02735, cumulative cost = {3.54426959327E7 rows, 1.7216236403520002E9 cpu, 4.61540844E8 io, 2.2654892544E8 network, 1.077366124E8 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right]): rowcount = 46600.02735, cumulative cost = {3.539609590535E7 rows, 1.7216236403520002E9 cpu, 4.61540844E8 io, 2.2654892544E8 network, 1.077366124E8 memory}
               :                    :- Calc(select=[x, y00, y AS y1]): rowcount = 310101.849, cumulative cost = {3.5348365878E7 rows, 1.7190479055600002E9 cpu, 4.61534064E8 io, 2.2654214544E8 network, 1.077162724E8 memory}
               :                    :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, y], build=[right]): rowcount = 310101.849, cumulative cost = {3.5038264029E7 rows, 1.7190479055600002E9 cpu, 4.61534064E8 io, 2.2654214544E8 network, 1.077162724E8 memory}
               :                    :     :- Exchange(distribution=[hash[y00]]): rowcount = 1105741.41, cumulative cost = {2.543205443E7 rows, 1.4895780662800002E9 cpu, 3.07684584E8 io, 2.0345644344E8 network, 5.38448344E7 memory}
               :                    :     :  +- Calc(select=[x, y0 AS y00]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :     :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :     :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :        +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                    :     :           +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                    :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :     :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                    :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                    :     +- Exchange(distribution=[hash[x]]): rowcount = 961604.25, cumulative cost = {9296107.75 rows, 2.12931074E8 cpu, 1.5384948E8 io, 2.3085702E7 network, 21600.0 memory}
               :                    :        +- Calc(select=[x, y]): rowcount = 961604.25, cumulative cost = {8334503.5 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :                    :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961604.25, cumulative cost = {7372899.25 rows, 5.138156E7 cpu, 1.5384948E8 io, 7200.0 network, 21600.0 memory}
               :                    :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
               :                    :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[X0]]): rowcount = 31105.739389997292, cumulative cost = {1.151031953959205E8 rows, 5.217780539200975E9 cpu, 1.384644228E9 io, 6.847718609244893E8 network, 2.0846394436865988E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 31105.739389997292, cumulative cost = {1.150720896565305E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 31105.739389997292, cumulative cost = {1.150409839171405E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#3] Exchange(distribution=[hash[X1]])\n:  :     +- [#4] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#5] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#6] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[X0]])\n])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[0,1,0,2,1,2,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :  :  :     :- [#8] Exchange(distribution=[hash[y]])\n:  :  :  :     +- [#9] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[x AS X0, X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X0)], select=[x, y0, X0, X1], build=[right])\n:  :  :        :- [#10] Exchange(distribution=[hash[y0]])\n:  :  :        +- [#11] Exchange(distribution=[hash[X0]])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X1], build=[right])\n:  :        :- [#4] Exchange(distribution=[hash[y00]])\n:  :        +- [#5] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:        :- [#2] Calc(select=[x, y0])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y1 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right])\n      :- Calc(select=[x, y00, y AS y1])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, y], build=[right])\n      :     :- [#4] Exchange(distribution=[hash[y00]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[14])
         :              :- Calc(select=[x, y0])(reuse_id=[9])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :     :- Exchange(distribution=[hash[y]])(reuse_id=[3])
         :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :     +- Exchange(distribution=[hash[x]])
         :              :        +- Calc(select=[x, y])
         :              :           +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :              :- Reused(reference_id=[1])
         :              :              +- Reused(reference_id=[2])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[5])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :              :- Exchange(distribution=[hash[y00]])(reuse_id=[7])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[3])
         :              :        +- Exchange(distribution=[hash[x]])
         :              :           +- Calc(select=[x, y0])(reuse_id=[21])
         :              :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[15])
         :              :                 :- Reused(reference_id=[1])
         :              :                 +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :              :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[3])
         :              :        +- Exchange(distribution=[hash[X0]])(reuse_id=[10])
         :              :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :              :              +- Exchange(distribution=[hash[X0, X1]])
         :              :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                    +- Union(all=[true], union=[X0, X1])
         :              :                       :- Calc(select=[x0 AS X0, y AS X1])
         :              :                       :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :              :                       :     :- Calc(select=[y, x0])(reuse_id=[17])
         :              :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :              :                       :     :     :- Reused(reference_id=[1])
         :              :                       :     :     +- Reused(reference_id=[4])
         :              :                       :     +- Reused(reference_id=[5])
         :              :                       +- Calc(select=[x AS X0, x AS X1])(reuse_id=[12])
         :              :                          +- Reused(reference_id=[6])
         :              :- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, y])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :        :- Reused(reference_id=[1])
         :              :        +- Reused(reference_id=[5])
         :              :- Reused(reference_id=[3])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- Reused(reference_id=[8])
         :              :                 +- Reused(reference_id=[5])
         :              :- Exchange(distribution=[hash[y0]])(reuse_id=[19])
         :              :  +- Reused(reference_id=[9])
         :              +- Reused(reference_id=[10])
         :- Exchange(distribution=[hash[X0]])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              :- Exchange(distribution=[hash[x]])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[13])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- Reused(reference_id=[11])
         :        :           :              :        :           +- Reused(reference_id=[12])
         :        :           :              :        +- Reused(reference_id=[4])
         :        :           :              :- Reused(reference_id=[13])
         :        :           :              +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[22])
         :        :           :                       :  +- Reused(reference_id=[14])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- Reused(reference_id=[15])
         :        :           :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[hash[X0]])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[16])
         :        :                    +- Reused(reference_id=[5])
         :        +- Reused(reference_id=[5])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[26])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n:  :  :        :- [#1] Exchange(distribution=[hash[y]])\n:  :  :        +- [#10] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X1)], select=[x, y0, X0, X1], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y0]])\n:  :        +- [#6] Exchange(distribution=[hash[X1]])\n:  +- Calc(select=[x AS X0, X0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y00]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[3])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[17])
         :              :                 :           :  :- Reused(reference_id=[4])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[4])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[24])
         :              :                 :                 :- Reused(reference_id=[14])
         :              :                 :                 +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[5])
         :              :- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], build=[right])
         :              :        :- Reused(reference_id=[3])
         :              :        +- Exchange(distribution=[hash[X1]])(reuse_id=[20])
         :              :           +- Reused(reference_id=[18])
         :              :- Reused(reference_id=[19])
         :              :- Reused(reference_id=[20])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[23])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :           :     :- Reused(reference_id=[21])
         :              :        :           :     +- Reused(reference_id=[2])
         :              :        :           +- Reused(reference_id=[22])
         :              :        +- Reused(reference_id=[2])
         :              :- Reused(reference_id=[3])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Calc(select=[X0, x0])
         :                             +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])
         :                                :- Reused(reference_id=[23])
         :                                +- Exchange(distribution=[broadcast])(reuse_id=[27])
         :                                   +- Calc(select=[x, x0])
         :                                      +- Reused(reference_id=[24])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[25])
         :- Reused(reference_id=[26])
         +- Reused(reference_id=[27])

Job has been submitted with JobID b79f85d5e5bc5199c3899530edaa8bfd
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT r_0.x AS X0, p28_3.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0) UNION (SELECT r_0.x AS X0, p28_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0) UNION (SELECT r_0.x AS X0, r_2.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN r AS r_2 ON r_0.y = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x) UNION (SELECT r_0.x AS X0, r_4.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN a AS a_5 ON r_4.y = a_5.x)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1 UNION (SELECT r_0.x AS X0, p40_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1 INNER JOIN b AS b_4 ON s_2.y = b_4.x) UNION (SELECT r_0.x AS X0, p43_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1) UNION (SELECT r_0.x AS X0, p43_4.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 7f5d3f6e_a881_4530_9269_b75cb5f1f7b0

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT r_0.x AS X0, p28_3.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN b AS b_2 ON r_0.y = b_2.x
                      INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0)
            UNION
            (SELECT r_0.x AS X0, p28_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
                      INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0)
            UNION
            (SELECT r_0.x AS X0, r_2.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN r AS r_2 ON r_0.y = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)
            UNION
            (SELECT r_0.x AS X0, r_4.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN b AS b_3 ON s_2.y = b_3.x
                      INNER JOIN r AS r_4 ON s_2.y = r_4.x
                      INNER JOIN a AS a_5 ON r_4.y = a_5.x)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1
             UNION
             (SELECT r_0.x AS X0, p40_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1
                       INNER JOIN b AS b_4 ON s_2.y = b_4.x)
             UNION
             (SELECT r_0.x AS X0, p43_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_0.y = b_2.x
                       INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1)
             UNION
             (SELECT r_0.x AS X0, p43_4.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN r AS r_3 ON s_2.y = r_3.x
                       INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
         :  :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
         :  :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
         :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$8])
         :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 46534.87058023846, cumulative cost = {4.716603261643643E8 rows, 1.623654379891738E10 cpu, 6.300455352E9 io, 2.0458248962163174E9 network, 1.0614524112985971E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 46534.87058023846, cumulative cost = {4.71613791293784E8 rows, 1.6235799240988096E10 cpu, 6.300455352E9 io, 2.0458248962163174E9 network, 1.0584741795814618E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 46534.87058023846, cumulative cost = {4.7156725642320377E8 rows, 1.6227609103765974E10 cpu, 6.300455352E9 io, 2.0447080593223917E9 network, 1.0584741795814618E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 256716.85280547178, cumulative cost = {4.715207215526235E8 rows, 1.6223501634121086E10 cpu, 6.300455352E9 io, 2.0447080593223917E9 network, 1.0554959478643265E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 222430.470600933, cumulative cost = {2.9565082182234496E8 rows, 1.0037136351454462E10 cpu, 3.937787376E9 io, 1.2651134933689032E9 network, 6.44249225085345E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 158841.95314424302, cumulative cost = {1.83785823487366E8 rows, 6.1158819283478775E9 cpu, 2.461111116E9 io, 7.672573700394099E8 network, 4.043969661683929E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 158841.95314424302, cumulative cost = {1.8362698153422174E8 rows, 6.1158819283478775E9 cpu, 2.461111116E9 io, 7.672573700394099E8 network, 4.043969661683929E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 423853.84971126664, cumulative cost = {1.1193857087917592E8 rows, 3.9888362927897863E9 cpu, 1.47667068E9 io, 5.080269213225636E8 network, 2.3984833331695208E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 423853.84971126664, cumulative cost = {1.1151471702946465E8 rows, 3.9176288460382934E9 cpu, 1.47667068E9 io, 4.978544289294932E8 network, 2.3984833331695208E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 423853.84971126664, cumulative cost = {1.1109086317975338E8 rows, 3.910847184442913E9 cpu, 1.47667068E9 io, 4.978544289294932E8 network, 2.12721686935431E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 423853.84971126664, cumulative cost = {1.1066700933004211E8 rows, 3.83624890689373E9 cpu, 1.47667068E9 io, 4.876819365364228E8 network, 2.12721686935431E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2338255.6992340134, cumulative cost = {1.1024315548033084E8 rows, 3.798836815705986E9 cpu, 1.47667068E9 io, 4.876819365364228E8 network, 1.8559504055390993E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1630664.2461574841, cumulative cost = {8.65761272540719E7 rows, 2.9231943760624924E9 cpu, 1.181334996E9 io, 3.7399709932944787E8 network, 1.4881220010500562E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1431870.327188954, cumulative cost = {5.6549917120645866E7 rows, 1.808810967665112E9 cpu, 7.87565784E8 io, 2.2818039729495224E8 network, 7.668083537188642E7 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 1323225.5521904202, cumulative cost = {3.356410034849894E7 rows, 9.262293566764424E8 cpu, 4.92230448E8 io, 1.1416352709542146E8 network, 3.912348327368512E7 memory}
         :  :     :              :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 615635.2868829742, cumulative cost = {1.1003615381655328E7 rows, 4.737113418842421E7 cpu, 1.96895508E8 io, 477181.2431150449 network, 2332224.92611928 memory}
         :  :     :              :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615635.2868829742, cumulative cost = {1.0387980094772354E7 rows, 4.737113418842421E7 cpu, 1.96895508E8 io, 477181.2431150449 network, 2332224.92611928 memory}
         :  :     :              :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :     :              :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :     :              :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :     :              :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707590.2653074461, cumulative cost = {2.1237259414653193E7 rows, 8.775349969358277E8 cpu, 2.9533494E8 io, 1.1368634585230643E8 network, 3.679125834756584E7 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707590.2653074461, cumulative cost = {2.0529669149345748E7 rows, 8.775349969358277E8 cpu, 2.9533494E8 io, 1.1368634585230643E8 network, 3.679125834756584E7 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615626.4353829742, cumulative cost = {1.1618794884038303E7 rows, 1.5072099345276386E8 cpu, 1.96895532E8 io, 1.5246937852306426E7 network, 2316177.96611928 memory}
         :  :     :              :  :  :           +- Calc(select=[x, X0]): rowcount = 615626.4353829742, cumulative cost = {1.100316844865533E7 rows, 4.7295752308424205E7 cpu, 1.96895532E8 io, 471903.40311504493 network, 2316177.96611928 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 615626.4353829742, cumulative cost = {1.0387542013272356E7 rows, 4.7295752308424205E7 cpu, 1.96895532E8 io, 471903.40311504493 network, 2316177.96611928 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 2534.2358864948087, cumulative cost = {5670273.577889381 rows, 1.4462342421332246E7 cpu, 9.8456124E7 io, 471903.40311504493 network, 2174260.7564755706 memory}
         :  :     :              :  :  :                    +- Calc(select=[X0, x0]): rowcount = 2534.2358864948087, cumulative cost = {5667739.342002886 rows, 1.4056864679493077E7 cpu, 9.8456124E7 io, 411081.7418391695 network, 2174260.7564755706 memory}
         :  :     :              :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 2534.2358864948087, cumulative cost = {5665205.106116392 rows, 1.4056864679493077E7 cpu, 9.8456124E7 io, 411081.7418391695 network, 2174260.7564755706 memory}
         :  :     :              :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :     :              :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :     :              :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :     :              :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :     :              :  :  :                             +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 108644.77499853367, cumulative cost = {2.1553946444957968E7 rows, 8.811497406614808E8 cpu, 2.95335336E8 io, 1.1401687019953078E8 network, 3.75573520982013E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 108644.77499853367, cumulative cost = {2.1445301669959433E7 rows, 8.811497406614808E8 cpu, 2.95335336E8 io, 1.1401687019953078E8 network, 3.75573520982013E7 memory}
         :  :     :              :  :        :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :     :              :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :     :              :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :     :              :  :        :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :     :              :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 198793.91896853002, cumulative cost = {2.839554588726856E7 rows, 1.1127527441512227E9 cpu, 3.93769212E8 io, 1.458167020344956E8 network, 7.213136473311919E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 198793.91896853002, cumulative cost = {2.819675196830003E7 rows, 1.1127527441512227E9 cpu, 3.93769212E8 io, 1.458167020344956E8 network, 7.213136473311919E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y00]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :        :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 635092.5045836867, cumulative cost = {7.152956870190158E7 rows, 2.1185740647237313E9 cpu, 9.84440436E8 io, 2.5923044871684632E8 network, 1.4081281726760986E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 635092.5045836867, cumulative cost = {7.08944761973179E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 635092.5045836867, cumulative cost = {7.025938369273421E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 132308.0305579119, cumulative cost = {6.1421007188150525E7 rows, 1.2889310677092087E9 cpu, 8.86001028E8 io, 1.4554882060683784E8 network, 1.334035675563668E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 63588.51745668999, cumulative cost = {1.1164256786437804E8 rows, 3.9210319926359835E9 cpu, 1.47667626E9 io, 4.9785612332949317E8 network, 2.3985225891695207E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 63588.51745668999, cumulative cost = {1.1157897934692134E8 rows, 3.9210319926359835E9 cpu, 1.47667626E9 io, 4.9785612332949317E8 network, 2.3985225891695207E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 423853.84971126664, cumulative cost = {1.1151471702946465E8 rows, 3.9176288460382934E9 cpu, 1.47667068E9 io, 4.978544289294932E8 network, 2.3984833331695208E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 423853.84971126664, cumulative cost = {1.1109086317975338E8 rows, 3.910847184442913E9 cpu, 1.47667068E9 io, 4.978544289294932E8 network, 2.12721686935431E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 423853.84971126664, cumulative cost = {1.1066700933004211E8 rows, 3.83624890689373E9 cpu, 1.47667068E9 io, 4.876819365364228E8 network, 2.12721686935431E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2338255.6992340134, cumulative cost = {1.1024315548033084E8 rows, 3.798836815705986E9 cpu, 1.47667068E9 io, 4.876819365364228E8 network, 1.8559504055390993E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 1630664.2461574841, cumulative cost = {8.65761272540719E7 rows, 2.9231943760624924E9 cpu, 1.181334996E9 io, 3.7399709932944787E8 network, 1.4881220010500562E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1431870.327188954, cumulative cost = {5.6549917120645866E7 rows, 1.808810967665112E9 cpu, 7.87565784E8 io, 2.2818039729495224E8 network, 7.668083537188642E7 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 1323225.5521904202, cumulative cost = {3.356410034849894E7 rows, 9.262293566764424E8 cpu, 4.92230448E8 io, 1.1416352709542146E8 network, 3.912348327368512E7 memory}
         :        :           :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 615635.2868829742, cumulative cost = {1.1003615381655328E7 rows, 4.737113418842421E7 cpu, 1.96895508E8 io, 477181.2431150449 network, 2332224.92611928 memory}
         :        :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615635.2868829742, cumulative cost = {1.0387980094772354E7 rows, 4.737113418842421E7 cpu, 1.96895508E8 io, 477181.2431150449 network, 2332224.92611928 memory}
         :        :           :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :        :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :        :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :        :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :        :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707590.2653074461, cumulative cost = {2.1237259414653193E7 rows, 8.775349969358277E8 cpu, 2.9533494E8 io, 1.1368634585230643E8 network, 3.679125834756584E7 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707590.2653074461, cumulative cost = {2.0529669149345748E7 rows, 8.775349969358277E8 cpu, 2.9533494E8 io, 1.1368634585230643E8 network, 3.679125834756584E7 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615626.4353829742, cumulative cost = {1.1618794884038303E7 rows, 1.5072099345276386E8 cpu, 1.96895532E8 io, 1.5246937852306426E7 network, 2316177.96611928 memory}
         :        :           :  :  :           +- Calc(select=[x, X0]): rowcount = 615626.4353829742, cumulative cost = {1.100316844865533E7 rows, 4.7295752308424205E7 cpu, 1.96895532E8 io, 471903.40311504493 network, 2316177.96611928 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 615626.4353829742, cumulative cost = {1.0387542013272356E7 rows, 4.7295752308424205E7 cpu, 1.96895532E8 io, 471903.40311504493 network, 2316177.96611928 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 2534.2358864948087, cumulative cost = {5670273.577889381 rows, 1.4462342421332246E7 cpu, 9.8456124E7 io, 471903.40311504493 network, 2174260.7564755706 memory}
         :        :           :  :  :                    +- Calc(select=[X0, x0]): rowcount = 2534.2358864948087, cumulative cost = {5667739.342002886 rows, 1.4056864679493077E7 cpu, 9.8456124E7 io, 411081.7418391695 network, 2174260.7564755706 memory}
         :        :           :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 2534.2358864948087, cumulative cost = {5665205.106116392 rows, 1.4056864679493077E7 cpu, 9.8456124E7 io, 411081.7418391695 network, 2174260.7564755706 memory}
         :        :           :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :        :           :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :        :           :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :        :           :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :        :           :  :  :                             +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 108644.77499853367, cumulative cost = {2.1553946444957968E7 rows, 8.811497406614808E8 cpu, 2.95335336E8 io, 1.1401687019953078E8 network, 3.75573520982013E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 108644.77499853367, cumulative cost = {2.1445301669959433E7 rows, 8.811497406614808E8 cpu, 2.95335336E8 io, 1.1401687019953078E8 network, 3.75573520982013E7 memory}
         :        :           :  :        :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :        :           :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :        :           :  :        :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :        :           :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :           :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :           :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :           :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :           :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :           :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 198793.91896853002, cumulative cost = {2.839554588726856E7 rows, 1.1127527441512227E9 cpu, 3.93769212E8 io, 1.458167020344956E8 network, 7.213136473311919E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 198793.91896853002, cumulative cost = {2.819675196830003E7 rows, 1.1127527441512227E9 cpu, 3.93769212E8 io, 1.458167020344956E8 network, 7.213136473311919E7 memory}
         :        :           :        :- Exchange(distribution=[hash[y00]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :        :           :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :        :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 34286.38220453876, cumulative cost = {1.7561318287747306E8 rows, 6.186108565813818E9 cpu, 2.362667976E9 io, 7.795945659534886E8 network, 4.1124672277898145E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 34286.38220453876, cumulative cost = {1.7557889649526852E8 rows, 6.186108565813818E9 cpu, 2.362667976E9 io, 7.795945659534886E8 network, 4.1124672277898145E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 208655.8767799049, cumulative cost = {1.1419516694172032E8 rows, 4.913248319209577E9 cpu, 1.476661044E9 io, 6.367371539700322E8 network, 2.767099229659282E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 208655.8767799049, cumulative cost = {1.1398651106494042E8 rows, 4.909909825181098E9 cpu, 1.476661044E9 io, 6.367371539700322E8 network, 2.6335594685201427E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 208655.8767799049, cumulative cost = {1.1377785518816052E8 rows, 4.873186390867835E9 cpu, 1.476661044E9 io, 6.317294129273145E8 network, 2.6335594685201427E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 1151082.6040429706, cumulative cost = {1.1356919931138062E8 rows, 4.854769069203148E9 cpu, 1.476661044E9 io, 6.317294129273145E8 network, 2.5000197073810035E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 1121248.9532742207, cumulative cost = {8.973881394305015E7 rows, 3.7519606246781054E9 cpu, 1.181331336E9 io, 4.867641253073146E8 network, 1.8105583593810037E8 memory}
               :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1015043.6038992208, cumulative cost = {7.283728371602593E7 rows, 2.8820208864248314E9 cpu, 9.8444106E8 io, 3.735456793073146E8 network, 1.4656377393810037E8 memory}
               :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 816247.9633713354, cumulative cost = {4.351742206305583E7 rows, 1.763920772974547E9 cpu, 5.90671572E8 io, 2.277191971633641E8 network, 7.440005995964938E7 memory}
               :           :  :  :  :- Calc(select=[x AS X0, X1]): rowcount = 707591.7113104329, cumulative cost = {2.123797041310528E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 707591.7113104329, cumulative cost = {2.0530378701794848E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :  :  :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 615636.0754028853, cumulative cost = {1.1619502990484416E7 rows, 1.508103980142864E8 cpu, 1.96896552E8 io, 1.5253414303875316E7 network, 2335381.109047373 memory}
               :           :  :  :  :        +- Calc(select=[x, X1]): rowcount = 615636.0754028853, cumulative cost = {1.100386691508153E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615636.0754028853, cumulative cost = {1.0388230839678645E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 2598.502685902536, cumulative cost = {5670952.76427576 rows, 1.4549613325114453E7 cpu, 9.8457144E7 io, 478148.49420606665 network, 2189864.958636831 memory}
               :           :  :  :  :                 +- Calc(select=[X0, X1]): rowcount = 2598.502685902536, cumulative cost = {5668354.261589858 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :  :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2598.502685902536, cumulative cost = {5665755.758903955 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :  :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :  :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :  :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :  :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :  :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  +- Calc(select=[x AS X0, X1]): rowcount = 108656.25206090254, cumulative cost = {2.146320368657921E7 rows, 8.85480046393666E8 cpu, 2.95335612E8 io, 1.1402637485948882E8 network, 3.758905862804044E7 memory}
               :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 108656.25206090254, cumulative cost = {2.1354547434518307E7 rows, 8.85480046393666E8 cpu, 2.95335612E8 io, 1.1402637485948882E8 network, 3.758905862804044E7 memory}
               :           :  :  :        :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
               :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
               :           :  :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
               :           :  :  :        :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :  :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :           :  :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
               :           :  :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :                       :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :                       :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :  :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  +- Calc(select=[x AS X0, X1]): rowcount = 198795.64052788538, cumulative cost = {2.8304818049070884E7 rows, 1.117085069846385E9 cpu, 3.93769488E8 io, 1.4582648214395046E8 network, 7.216371397845098E7 memory}
               :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X1], build=[right]): rowcount = 198795.64052788538, cumulative cost = {2.8106022408542998E7 rows, 1.117085069846385E9 cpu, 3.93769488E8 io, 1.4582648214395046E8 network, 7.216371397845098E7 memory}
               :           :  :        :- Exchange(distribution=[hash[y00]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
               :           :  :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :  :        :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 617771.0026859025, cumulative cost = {1.1633959615515111E7 rows, 1.533428775448977E8 cpu, 1.96890648E8 io, 1.5640336923950471E7 network, 3114708.6280404446 memory}
               :           :  :           +- Calc(select=[x, X1]): rowcount = 617771.0026859025, cumulative cost = {1.1016188612829208E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617771.0026859025, cumulative cost = {1.0398417610143306E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
               :           :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 106205.34937499999, cumulative cost = {1.578028127375E7 rows, 8.688184893E8 cpu, 1.96890276E8 io, 1.13218446E8 network, 3.4492062E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 106205.34937499999, cumulative cost = {1.5674075924375E7 rows, 8.688184893E8 cpu, 1.96890276E8 io, 1.13218446E8 network, 3.4492062E7 memory}
               :           :        :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
               :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
               :           :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
               :           :        :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :           :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[x AS X0, y1 AS X1]): rowcount = 29833.650768749998, cumulative cost = {2.2679302764287498E7 rows, 1.101657361921E9 cpu, 2.95329708E8 io, 1.4496528762E8 network, 6.89461348E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right]): rowcount = 29833.650768749998, cumulative cost = {2.264946911351875E7 rows, 1.101657361921E9 cpu, 2.95329708E8 io, 1.4496528762E8 network, 6.89461348E7 memory}
               :                 :- Calc(select=[x, y00, y AS y1]): rowcount = 198428.005125, cumulative cost = {2.261870946275E7 rows, 1.09999215388E9 cpu, 2.95324152E8 io, 1.4495973162E8 network, 6.89294668E7 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, y], build=[right]): rowcount = 198428.005125, cumulative cost = {2.2420281457624998E7 rows, 1.09999215388E9 cpu, 2.95324152E8 io, 1.4495973162E8 network, 6.89294668E7 memory}
               :                 :     :- Exchange(distribution=[hash[y00]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
               :                 :     :  +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                 :     :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                 :     :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 615320.1, cumulative cost = {5948586.299999999 rows, 1.362695688E8 cpu, 9.8445312E7 io, 1.4773586399999999E7 network, 17712.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 19920.004583686783, cumulative cost = {6.134944317134367E7 rows, 1.2710316395533326E9 cpu, 8.86006932E8 io, 1.4285741198345643E8 network, 1.334212795563668E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 19920.004583686783, cumulative cost = {6.132952316675998E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19920.004583686783, cumulative cost = {6.1309603162176296E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[24])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[12])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[15])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n:  :  :        :- [#1] Exchange(distribution=[hash[y]])\n:  :  :        +- [#10] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[x, y0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y00]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[23])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[17])
         :              :                 :                 :- Reused(reference_id=[4])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[y00]])(reuse_id=[22])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[9])
         :              :        +- Exchange(distribution=[hash[x]])
         :              :           +- Calc(select=[x, y0])(reuse_id=[14])
         :              :              +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[13])
         :              :           +- Reused(reference_id=[11])
         :              :- Calc(select=[x, y0])(reuse_id=[21])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :     :- Reused(reference_id=[9])
         :              :     +- Exchange(distribution=[hash[x]])
         :              :        +- Calc(select=[x, y])
         :              :           +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :              :- Reused(reference_id=[1])
         :              :              +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[13])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :           :     :- Reused(reference_id=[14])
         :              :        :           :     +- Reused(reference_id=[12])
         :              :        :           +- Reused(reference_id=[15])
         :              :        +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[9])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Calc(select=[X0, x0])
         :                             +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])
         :                                :- Reused(reference_id=[16])
         :                                +- Exchange(distribution=[broadcast])(reuse_id=[20])
         :                                   +- Calc(select=[x, x0])
         :                                      +- Reused(reference_id=[17])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[9])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[18])
         :- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :  :  :     :- [#8] Exchange(distribution=[hash[y]])\n:  :  :  :     +- [#9] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[x AS X0, X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :  :        :- [#2] Calc(select=[x, y0])\n:  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X1], build=[right])\n:  :        :- [#4] Exchange(distribution=[hash[y00]])\n:  :        +- [#5] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:        :- [#2] Calc(select=[x, y0])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y1 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right])\n      :- Calc(select=[x, y00, y AS y1])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, y], build=[right])\n      :     :- [#4] Exchange(distribution=[hash[y00]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[12])
                  :- Reused(reference_id=[21])
                  :- Reused(reference_id=[7])
                  :- Reused(reference_id=[22])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])(reuse_id=[26])
                  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
                  :              +- Exchange(distribution=[hash[X0, X1]])
                  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                    +- Union(all=[true], union=[X0, X1])
                  :                       :- Calc(select=[x0 AS X0, y AS X1])
                  :                       :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                       :     :- Reused(reference_id=[23])
                  :                       :     +- Reused(reference_id=[7])
                  :                       +- Reused(reference_id=[24])
                  :- Reused(reference_id=[22])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[7])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- Reused(reference_id=[25])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[21])
                  +- Reused(reference_id=[26])

Job has been submitted with JobID 8a8fc7fc8e221d5dab9ed5486848a8cf
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT r_0.x AS X0, p28_3.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0) UNION (SELECT r_0.x AS X0, p28_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0) UNION (SELECT r_0.x AS X0, r_2.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN r AS r_2 ON r_0.y = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x) UNION (SELECT r_0.x AS X0, r_4.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN a AS a_5 ON r_4.y = a_5.x)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1 UNION (SELECT r_0.x AS X0, p40_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1 INNER JOIN b AS b_4 ON s_2.y = b_4.x) UNION (SELECT r_0.x AS X0, p43_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1) UNION (SELECT r_0.x AS X0, p43_4.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 58741394_14b1_435b_8ecb_045116ef34dc

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT r_0.x AS X0, p28_3.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN b AS b_2 ON r_0.y = b_2.x
                      INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0)
            UNION
            (SELECT r_0.x AS X0, p28_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
                      INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0)
            UNION
            (SELECT r_0.x AS X0, r_2.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN r AS r_2 ON r_0.y = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)
            UNION
            (SELECT r_0.x AS X0, r_4.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN b AS b_3 ON s_2.y = b_3.x
                      INNER JOIN r AS r_4 ON s_2.y = r_4.x
                      INNER JOIN a AS a_5 ON r_4.y = a_5.x)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1
             UNION
             (SELECT r_0.x AS X0, p40_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1
                       INNER JOIN b AS b_4 ON s_2.y = b_4.x)
             UNION
             (SELECT r_0.x AS X0, p43_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_0.y = b_2.x
                       INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1)
             UNION
             (SELECT r_0.x AS X0, p43_4.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN r AS r_3 ON s_2.y = r_3.x
                       INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
         :  :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
         :  :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
         :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$8])
         :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 46534.87058023846, cumulative cost = {4.716603261643643E8 rows, 1.623654379891738E10 cpu, 6.300455352E9 io, 2.0458248962163174E9 network, 1.0614524112985971E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 46534.87058023846, cumulative cost = {4.71613791293784E8 rows, 1.6235799240988096E10 cpu, 6.300455352E9 io, 2.0458248962163174E9 network, 1.0584741795814618E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 46534.87058023846, cumulative cost = {4.7156725642320377E8 rows, 1.6227609103765974E10 cpu, 6.300455352E9 io, 2.0447080593223917E9 network, 1.0584741795814618E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 256716.85280547178, cumulative cost = {4.715207215526235E8 rows, 1.6223501634121086E10 cpu, 6.300455352E9 io, 2.0447080593223917E9 network, 1.0554959478643265E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 222430.470600933, cumulative cost = {2.9565082182234496E8 rows, 1.0037136351454462E10 cpu, 3.937787376E9 io, 1.2651134933689032E9 network, 6.44249225085345E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 158841.95314424302, cumulative cost = {1.83785823487366E8 rows, 6.1158819283478775E9 cpu, 2.461111116E9 io, 7.672573700394099E8 network, 4.043969661683929E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 158841.95314424302, cumulative cost = {1.8362698153422174E8 rows, 6.1158819283478775E9 cpu, 2.461111116E9 io, 7.672573700394099E8 network, 4.043969661683929E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 423853.84971126664, cumulative cost = {1.1193857087917592E8 rows, 3.9888362927897863E9 cpu, 1.47667068E9 io, 5.080269213225636E8 network, 2.3984833331695208E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 423853.84971126664, cumulative cost = {1.1151471702946465E8 rows, 3.9176288460382934E9 cpu, 1.47667068E9 io, 4.978544289294932E8 network, 2.3984833331695208E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 423853.84971126664, cumulative cost = {1.1109086317975338E8 rows, 3.910847184442913E9 cpu, 1.47667068E9 io, 4.978544289294932E8 network, 2.12721686935431E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 423853.84971126664, cumulative cost = {1.1066700933004211E8 rows, 3.83624890689373E9 cpu, 1.47667068E9 io, 4.876819365364228E8 network, 2.12721686935431E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2338255.6992340134, cumulative cost = {1.1024315548033084E8 rows, 3.798836815705986E9 cpu, 1.47667068E9 io, 4.876819365364228E8 network, 1.8559504055390993E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1630664.2461574841, cumulative cost = {8.65761272540719E7 rows, 2.9231943760624924E9 cpu, 1.181334996E9 io, 3.7399709932944787E8 network, 1.4881220010500562E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1431870.327188954, cumulative cost = {5.6549917120645866E7 rows, 1.808810967665112E9 cpu, 7.87565784E8 io, 2.2818039729495224E8 network, 7.668083537188642E7 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 1323225.5521904202, cumulative cost = {3.356410034849894E7 rows, 9.262293566764424E8 cpu, 4.92230448E8 io, 1.1416352709542146E8 network, 3.912348327368512E7 memory}
         :  :     :              :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 615635.2868829742, cumulative cost = {1.1003615381655328E7 rows, 4.737113418842421E7 cpu, 1.96895508E8 io, 477181.2431150449 network, 2332224.92611928 memory}
         :  :     :              :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615635.2868829742, cumulative cost = {1.0387980094772354E7 rows, 4.737113418842421E7 cpu, 1.96895508E8 io, 477181.2431150449 network, 2332224.92611928 memory}
         :  :     :              :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :     :              :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :     :              :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :     :              :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707590.2653074461, cumulative cost = {2.1237259414653193E7 rows, 8.775349969358277E8 cpu, 2.9533494E8 io, 1.1368634585230643E8 network, 3.679125834756584E7 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707590.2653074461, cumulative cost = {2.0529669149345748E7 rows, 8.775349969358277E8 cpu, 2.9533494E8 io, 1.1368634585230643E8 network, 3.679125834756584E7 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615626.4353829742, cumulative cost = {1.1618794884038303E7 rows, 1.5072099345276386E8 cpu, 1.96895532E8 io, 1.5246937852306426E7 network, 2316177.96611928 memory}
         :  :     :              :  :  :           +- Calc(select=[x, X0]): rowcount = 615626.4353829742, cumulative cost = {1.100316844865533E7 rows, 4.7295752308424205E7 cpu, 1.96895532E8 io, 471903.40311504493 network, 2316177.96611928 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 615626.4353829742, cumulative cost = {1.0387542013272356E7 rows, 4.7295752308424205E7 cpu, 1.96895532E8 io, 471903.40311504493 network, 2316177.96611928 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 2534.2358864948087, cumulative cost = {5670273.577889381 rows, 1.4462342421332246E7 cpu, 9.8456124E7 io, 471903.40311504493 network, 2174260.7564755706 memory}
         :  :     :              :  :  :                    +- Calc(select=[X0, x0]): rowcount = 2534.2358864948087, cumulative cost = {5667739.342002886 rows, 1.4056864679493077E7 cpu, 9.8456124E7 io, 411081.7418391695 network, 2174260.7564755706 memory}
         :  :     :              :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 2534.2358864948087, cumulative cost = {5665205.106116392 rows, 1.4056864679493077E7 cpu, 9.8456124E7 io, 411081.7418391695 network, 2174260.7564755706 memory}
         :  :     :              :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :     :              :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :     :              :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :     :              :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :     :              :  :  :                             +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 108644.77499853367, cumulative cost = {2.1553946444957968E7 rows, 8.811497406614808E8 cpu, 2.95335336E8 io, 1.1401687019953078E8 network, 3.75573520982013E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 108644.77499853367, cumulative cost = {2.1445301669959433E7 rows, 8.811497406614808E8 cpu, 2.95335336E8 io, 1.1401687019953078E8 network, 3.75573520982013E7 memory}
         :  :     :              :  :        :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :     :              :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :     :              :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :     :              :  :        :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :     :              :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 198793.91896853002, cumulative cost = {2.839554588726856E7 rows, 1.1127527441512227E9 cpu, 3.93769212E8 io, 1.458167020344956E8 network, 7.213136473311919E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 198793.91896853002, cumulative cost = {2.819675196830003E7 rows, 1.1127527441512227E9 cpu, 3.93769212E8 io, 1.458167020344956E8 network, 7.213136473311919E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y00]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :        :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 635092.5045836867, cumulative cost = {7.152956870190158E7 rows, 2.1185740647237313E9 cpu, 9.84440436E8 io, 2.5923044871684632E8 network, 1.4081281726760986E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 635092.5045836867, cumulative cost = {7.08944761973179E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 635092.5045836867, cumulative cost = {7.025938369273421E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 132308.0305579119, cumulative cost = {6.1421007188150525E7 rows, 1.2889310677092087E9 cpu, 8.86001028E8 io, 1.4554882060683784E8 network, 1.334035675563668E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 63588.51745668999, cumulative cost = {1.1164256786437804E8 rows, 3.9210319926359835E9 cpu, 1.47667626E9 io, 4.9785612332949317E8 network, 2.3985225891695207E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 63588.51745668999, cumulative cost = {1.1157897934692134E8 rows, 3.9210319926359835E9 cpu, 1.47667626E9 io, 4.9785612332949317E8 network, 2.3985225891695207E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 423853.84971126664, cumulative cost = {1.1151471702946465E8 rows, 3.9176288460382934E9 cpu, 1.47667068E9 io, 4.978544289294932E8 network, 2.3984833331695208E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 423853.84971126664, cumulative cost = {1.1109086317975338E8 rows, 3.910847184442913E9 cpu, 1.47667068E9 io, 4.978544289294932E8 network, 2.12721686935431E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 423853.84971126664, cumulative cost = {1.1066700933004211E8 rows, 3.83624890689373E9 cpu, 1.47667068E9 io, 4.876819365364228E8 network, 2.12721686935431E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2338255.6992340134, cumulative cost = {1.1024315548033084E8 rows, 3.798836815705986E9 cpu, 1.47667068E9 io, 4.876819365364228E8 network, 1.8559504055390993E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 1630664.2461574841, cumulative cost = {8.65761272540719E7 rows, 2.9231943760624924E9 cpu, 1.181334996E9 io, 3.7399709932944787E8 network, 1.4881220010500562E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1431870.327188954, cumulative cost = {5.6549917120645866E7 rows, 1.808810967665112E9 cpu, 7.87565784E8 io, 2.2818039729495224E8 network, 7.668083537188642E7 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 1323225.5521904202, cumulative cost = {3.356410034849894E7 rows, 9.262293566764424E8 cpu, 4.92230448E8 io, 1.1416352709542146E8 network, 3.912348327368512E7 memory}
         :        :           :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 615635.2868829742, cumulative cost = {1.1003615381655328E7 rows, 4.737113418842421E7 cpu, 1.96895508E8 io, 477181.2431150449 network, 2332224.92611928 memory}
         :        :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615635.2868829742, cumulative cost = {1.0387980094772354E7 rows, 4.737113418842421E7 cpu, 1.96895508E8 io, 477181.2431150449 network, 2332224.92611928 memory}
         :        :           :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :        :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :        :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :        :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :        :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707590.2653074461, cumulative cost = {2.1237259414653193E7 rows, 8.775349969358277E8 cpu, 2.9533494E8 io, 1.1368634585230643E8 network, 3.679125834756584E7 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707590.2653074461, cumulative cost = {2.0529669149345748E7 rows, 8.775349969358277E8 cpu, 2.9533494E8 io, 1.1368634585230643E8 network, 3.679125834756584E7 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615626.4353829742, cumulative cost = {1.1618794884038303E7 rows, 1.5072099345276386E8 cpu, 1.96895532E8 io, 1.5246937852306426E7 network, 2316177.96611928 memory}
         :        :           :  :  :           +- Calc(select=[x, X0]): rowcount = 615626.4353829742, cumulative cost = {1.100316844865533E7 rows, 4.7295752308424205E7 cpu, 1.96895532E8 io, 471903.40311504493 network, 2316177.96611928 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 615626.4353829742, cumulative cost = {1.0387542013272356E7 rows, 4.7295752308424205E7 cpu, 1.96895532E8 io, 471903.40311504493 network, 2316177.96611928 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 2534.2358864948087, cumulative cost = {5670273.577889381 rows, 1.4462342421332246E7 cpu, 9.8456124E7 io, 471903.40311504493 network, 2174260.7564755706 memory}
         :        :           :  :  :                    +- Calc(select=[X0, x0]): rowcount = 2534.2358864948087, cumulative cost = {5667739.342002886 rows, 1.4056864679493077E7 cpu, 9.8456124E7 io, 411081.7418391695 network, 2174260.7564755706 memory}
         :        :           :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 2534.2358864948087, cumulative cost = {5665205.106116392 rows, 1.4056864679493077E7 cpu, 9.8456124E7 io, 411081.7418391695 network, 2174260.7564755706 memory}
         :        :           :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :        :           :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :        :           :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :        :           :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :        :           :  :  :                             +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 108644.77499853367, cumulative cost = {2.1553946444957968E7 rows, 8.811497406614808E8 cpu, 2.95335336E8 io, 1.1401687019953078E8 network, 3.75573520982013E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 108644.77499853367, cumulative cost = {2.1445301669959433E7 rows, 8.811497406614808E8 cpu, 2.95335336E8 io, 1.1401687019953078E8 network, 3.75573520982013E7 memory}
         :        :           :  :        :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :        :           :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :        :           :  :        :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :        :           :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :           :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :           :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :           :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :           :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :           :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 198793.91896853002, cumulative cost = {2.839554588726856E7 rows, 1.1127527441512227E9 cpu, 3.93769212E8 io, 1.458167020344956E8 network, 7.213136473311919E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 198793.91896853002, cumulative cost = {2.819675196830003E7 rows, 1.1127527441512227E9 cpu, 3.93769212E8 io, 1.458167020344956E8 network, 7.213136473311919E7 memory}
         :        :           :        :- Exchange(distribution=[hash[y00]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :        :           :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :        :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 34286.38220453876, cumulative cost = {1.7561318287747306E8 rows, 6.186108565813818E9 cpu, 2.362667976E9 io, 7.795945659534886E8 network, 4.1124672277898145E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 34286.38220453876, cumulative cost = {1.7557889649526852E8 rows, 6.186108565813818E9 cpu, 2.362667976E9 io, 7.795945659534886E8 network, 4.1124672277898145E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 208655.8767799049, cumulative cost = {1.1419516694172032E8 rows, 4.913248319209577E9 cpu, 1.476661044E9 io, 6.367371539700322E8 network, 2.767099229659282E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 208655.8767799049, cumulative cost = {1.1398651106494042E8 rows, 4.909909825181098E9 cpu, 1.476661044E9 io, 6.367371539700322E8 network, 2.6335594685201427E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 208655.8767799049, cumulative cost = {1.1377785518816052E8 rows, 4.873186390867835E9 cpu, 1.476661044E9 io, 6.317294129273145E8 network, 2.6335594685201427E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 1151082.6040429706, cumulative cost = {1.1356919931138062E8 rows, 4.854769069203148E9 cpu, 1.476661044E9 io, 6.317294129273145E8 network, 2.5000197073810035E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 1121248.9532742207, cumulative cost = {8.973881394305015E7 rows, 3.7519606246781054E9 cpu, 1.181331336E9 io, 4.867641253073146E8 network, 1.8105583593810037E8 memory}
               :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1015043.6038992208, cumulative cost = {7.283728371602593E7 rows, 2.8820208864248314E9 cpu, 9.8444106E8 io, 3.735456793073146E8 network, 1.4656377393810037E8 memory}
               :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 816247.9633713354, cumulative cost = {4.351742206305583E7 rows, 1.763920772974547E9 cpu, 5.90671572E8 io, 2.277191971633641E8 network, 7.440005995964938E7 memory}
               :           :  :  :  :- Calc(select=[x AS X0, X1]): rowcount = 707591.7113104329, cumulative cost = {2.123797041310528E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 707591.7113104329, cumulative cost = {2.0530378701794848E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :  :  :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 615636.0754028853, cumulative cost = {1.1619502990484416E7 rows, 1.508103980142864E8 cpu, 1.96896552E8 io, 1.5253414303875316E7 network, 2335381.109047373 memory}
               :           :  :  :  :        +- Calc(select=[x, X1]): rowcount = 615636.0754028853, cumulative cost = {1.100386691508153E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615636.0754028853, cumulative cost = {1.0388230839678645E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 2598.502685902536, cumulative cost = {5670952.76427576 rows, 1.4549613325114453E7 cpu, 9.8457144E7 io, 478148.49420606665 network, 2189864.958636831 memory}
               :           :  :  :  :                 +- Calc(select=[X0, X1]): rowcount = 2598.502685902536, cumulative cost = {5668354.261589858 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :  :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2598.502685902536, cumulative cost = {5665755.758903955 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :  :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :  :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :  :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :  :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :  :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  +- Calc(select=[x AS X0, X1]): rowcount = 108656.25206090254, cumulative cost = {2.146320368657921E7 rows, 8.85480046393666E8 cpu, 2.95335612E8 io, 1.1402637485948882E8 network, 3.758905862804044E7 memory}
               :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 108656.25206090254, cumulative cost = {2.1354547434518307E7 rows, 8.85480046393666E8 cpu, 2.95335612E8 io, 1.1402637485948882E8 network, 3.758905862804044E7 memory}
               :           :  :  :        :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
               :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
               :           :  :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
               :           :  :  :        :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :  :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :           :  :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
               :           :  :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :                       :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :                       :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :  :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  +- Calc(select=[x AS X0, X1]): rowcount = 198795.64052788538, cumulative cost = {2.8304818049070884E7 rows, 1.117085069846385E9 cpu, 3.93769488E8 io, 1.4582648214395046E8 network, 7.216371397845098E7 memory}
               :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X1], build=[right]): rowcount = 198795.64052788538, cumulative cost = {2.8106022408542998E7 rows, 1.117085069846385E9 cpu, 3.93769488E8 io, 1.4582648214395046E8 network, 7.216371397845098E7 memory}
               :           :  :        :- Exchange(distribution=[hash[y00]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
               :           :  :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :  :        :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 617771.0026859025, cumulative cost = {1.1633959615515111E7 rows, 1.533428775448977E8 cpu, 1.96890648E8 io, 1.5640336923950471E7 network, 3114708.6280404446 memory}
               :           :  :           +- Calc(select=[x, X1]): rowcount = 617771.0026859025, cumulative cost = {1.1016188612829208E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617771.0026859025, cumulative cost = {1.0398417610143306E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
               :           :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 106205.34937499999, cumulative cost = {1.578028127375E7 rows, 8.688184893E8 cpu, 1.96890276E8 io, 1.13218446E8 network, 3.4492062E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 106205.34937499999, cumulative cost = {1.5674075924375E7 rows, 8.688184893E8 cpu, 1.96890276E8 io, 1.13218446E8 network, 3.4492062E7 memory}
               :           :        :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
               :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
               :           :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
               :           :        :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :           :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[x AS X0, y1 AS X1]): rowcount = 29833.650768749998, cumulative cost = {2.2679302764287498E7 rows, 1.101657361921E9 cpu, 2.95329708E8 io, 1.4496528762E8 network, 6.89461348E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right]): rowcount = 29833.650768749998, cumulative cost = {2.264946911351875E7 rows, 1.101657361921E9 cpu, 2.95329708E8 io, 1.4496528762E8 network, 6.89461348E7 memory}
               :                 :- Calc(select=[x, y00, y AS y1]): rowcount = 198428.005125, cumulative cost = {2.261870946275E7 rows, 1.09999215388E9 cpu, 2.95324152E8 io, 1.4495973162E8 network, 6.89294668E7 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, y], build=[right]): rowcount = 198428.005125, cumulative cost = {2.2420281457624998E7 rows, 1.09999215388E9 cpu, 2.95324152E8 io, 1.4495973162E8 network, 6.89294668E7 memory}
               :                 :     :- Exchange(distribution=[hash[y00]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
               :                 :     :  +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                 :     :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                 :     :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 615320.1, cumulative cost = {5948586.299999999 rows, 1.362695688E8 cpu, 9.8445312E7 io, 1.4773586399999999E7 network, 17712.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 19920.004583686783, cumulative cost = {6.134944317134367E7 rows, 1.2710316395533326E9 cpu, 8.86006932E8 io, 1.4285741198345643E8 network, 1.334212795563668E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 19920.004583686783, cumulative cost = {6.132952316675998E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19920.004583686783, cumulative cost = {6.1309603162176296E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[24])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[12])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[15])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n:  :  :        :- [#1] Exchange(distribution=[hash[y]])\n:  :  :        +- [#10] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[x, y0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y00]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[23])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[17])
         :              :                 :                 :- Reused(reference_id=[4])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[y00]])(reuse_id=[22])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[9])
         :              :        +- Exchange(distribution=[hash[x]])
         :              :           +- Calc(select=[x, y0])(reuse_id=[14])
         :              :              +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[13])
         :              :           +- Reused(reference_id=[11])
         :              :- Calc(select=[x, y0])(reuse_id=[21])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :     :- Reused(reference_id=[9])
         :              :     +- Exchange(distribution=[hash[x]])
         :              :        +- Calc(select=[x, y])
         :              :           +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :              :- Reused(reference_id=[1])
         :              :              +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[13])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :           :     :- Reused(reference_id=[14])
         :              :        :           :     +- Reused(reference_id=[12])
         :              :        :           +- Reused(reference_id=[15])
         :              :        +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[9])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Calc(select=[X0, x0])
         :                             +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])
         :                                :- Reused(reference_id=[16])
         :                                +- Exchange(distribution=[broadcast])(reuse_id=[20])
         :                                   +- Calc(select=[x, x0])
         :                                      +- Reused(reference_id=[17])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[9])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[18])
         :- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :  :  :     :- [#8] Exchange(distribution=[hash[y]])\n:  :  :  :     +- [#9] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[x AS X0, X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :  :        :- [#2] Calc(select=[x, y0])\n:  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X1], build=[right])\n:  :        :- [#4] Exchange(distribution=[hash[y00]])\n:  :        +- [#5] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:        :- [#2] Calc(select=[x, y0])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y1 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right])\n      :- Calc(select=[x, y00, y AS y1])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, y], build=[right])\n      :     :- [#4] Exchange(distribution=[hash[y00]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[12])
                  :- Reused(reference_id=[21])
                  :- Reused(reference_id=[7])
                  :- Reused(reference_id=[22])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])(reuse_id=[26])
                  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
                  :              +- Exchange(distribution=[hash[X0, X1]])
                  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                    +- Union(all=[true], union=[X0, X1])
                  :                       :- Calc(select=[x0 AS X0, y AS X1])
                  :                       :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                       :     :- Reused(reference_id=[23])
                  :                       :     +- Reused(reference_id=[7])
                  :                       +- Reused(reference_id=[24])
                  :- Reused(reference_id=[22])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[7])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- Reused(reference_id=[25])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[21])
                  +- Reused(reference_id=[26])

Job has been submitted with JobID 57a249832211cfdcc52e567ee874b08d
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x UNION (SELECT r_0.x AS X0, p28_3.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0) UNION (SELECT r_0.x AS X0, p28_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0) UNION (SELECT r_0.x AS X0, r_2.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN r AS r_2 ON r_0.y = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x) UNION (SELECT r_0.x AS X0, r_4.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN b AS b_3 ON s_2.y = b_3.x INNER JOIN r AS r_4 ON s_2.y = r_4.x INNER JOIN a AS a_5 ON r_4.y = a_5.x)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1 UNION (SELECT r_0.x AS X0, p40_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1 INNER JOIN b AS b_4 ON s_2.y = b_4.x) UNION (SELECT r_0.x AS X0, p43_3.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN b AS b_2 ON r_0.y = b_2.x INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1) UNION (SELECT r_0.x AS X0, p43_4.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x INNER JOIN r AS r_3 ON s_2.y = r_3.x INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1 FROM p3 AS p3_0 INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0 INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: a43aaa85_9e3a_47d8_a1fd_85a3920ec53d

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p3 AS (SELECT r_0.x AS X0, p28_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN r AS r_1 ON r_0.y = r_1.x
                     INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                     INNER JOIN a AS a_3 ON r_1.y = a_3.x
            UNION
            (SELECT r_0.x AS X0, p28_3.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN b AS b_2 ON r_0.y = b_2.x
                      INNER JOIN p28 AS p28_3 ON r_1.y = p28_3.X0)
            UNION
            (SELECT r_0.x AS X0, p28_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN r AS r_3 ON s_2.y = r_3.x
                      INNER JOIN p28 AS p28_4 ON r_3.y = p28_4.X0)
            UNION
            (SELECT r_0.x AS X0, r_2.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN r AS r_2 ON r_0.y = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x)
            UNION
            (SELECT r_0.x AS X0, r_4.y AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
                      INNER JOIN b AS b_3 ON s_2.y = b_3.x
                      INNER JOIN r AS r_4 ON s_2.y = r_4.x
                      INNER JOIN a AS a_5 ON r_4.y = a_5.x)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p35 AS (SELECT r_0.x AS X0, p40_2.X0 AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
                      INNER JOIN p40 AS p40_2 ON r_0.y = p40_2.X1
             UNION
             (SELECT r_0.x AS X0, p40_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN p40 AS p40_3 ON s_2.y = p40_3.X1
                       INNER JOIN b AS b_4 ON s_2.y = b_4.x)
             UNION
             (SELECT r_0.x AS X0, p43_3.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN b AS b_2 ON r_0.y = b_2.x
                       INNER JOIN p43 AS p43_3 ON r_1.y = p43_3.X1)
             UNION
             (SELECT r_0.x AS X0, p43_4.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x
                       INNER JOIN r AS r_3 ON s_2.y = r_3.x
                       INNER JOIN p43 AS p43_4 ON r_3.y = p43_4.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT p3_0.X0 AS X0, p2_1.X1 AS X1
             FROM p3 AS p3_0
                      INNER JOIN p2 AS p2_1 ON p3_0.X1 = p2_1.X0
                      INNER JOIN a AS a_2 ON p3_0.X1 = a_2.x))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :- LogicalUnion(all=[false])
   :  :     :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :  :     :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :  :     :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :  :     :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :     :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :     :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :     :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :     :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :     :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :  :     :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :  :     :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :     +- LogicalUnion(all=[false])
   :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     +- LogicalUnion(all=[false])
   :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :     +- LogicalUnion(all=[false])
   :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :              +- LogicalUnion(all=[false])
   :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :              :  :- LogicalUnion(all=[false])
   :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :              :  :        +- LogicalUnion(all=[false])
   :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$2])
   :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :        :  :- LogicalUnion(all=[false])
   :        :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :  :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :     +- LogicalUnion(all=[false])
   :        :  :  :  :  :  :        :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :  :        :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :  :        :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
   :        :  :  :  :  :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :  :  :  :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :        :  :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :  +- LogicalUnion(all=[false])
   :        :  :  :  :  :        :     :- LogicalProject(X0=[$4], X1=[$0])
   :        :  :  :  :  :        :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :        :  :  :  :  :        :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :        :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :  :  :  :        :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :        :  :  :     +- LogicalJoin(condition=[=($7, $9)], joinType=[inner])
   :        :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :        +- LogicalUnion(all=[false])
   :        :  :  :           :- LogicalUnion(all=[false])
   :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :  +- LogicalUnion(all=[false])
   :        :  :        :     :- LogicalUnion(all=[false])
   :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$3])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :- LogicalUnion(all=[false])
         :  :  :- LogicalUnion(all=[false])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :  :  :  +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
         :  :  :  :  :  :     :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :  +- LogicalUnion(all=[false])
         :  :  :  :  :  :     :     :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :  :     :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :  :     :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :  +- LogicalProject(X0=[$0], X1=[$6])
         :  :  :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
         :  :  :  :  :        :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :  :  :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$9])
         :  :  :  :     +- LogicalJoin(condition=[=($7, $8)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :  :  :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalUnion(all=[false])
         :  :  :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :  :  :  :           :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :           :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :           :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
         :  :  :     +- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalProject(X0=[$0], X1=[$8])
         :  :     +- LogicalJoin(condition=[=($8, $9)], joinType=[inner])
         :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
         :  :        :  :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
         :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :  +- LogicalUnion(all=[false])
         :     :- LogicalProject(X0=[$3], X1=[$5])
         :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
         :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :  +- LogicalUnion(all=[false])
         :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
         :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
         :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :     +- LogicalUnion(all=[false])
         :     :        :- LogicalProject(X0=[$0], X1=[$5])
         :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :     +- LogicalUnion(all=[false])
         :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
         :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
         :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     :        +- LogicalProject(X0=[$0], X1=[$2])
         :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :     :              +- LogicalUnion(all=[false])
         :     :                 :- LogicalProject(X0=[$0], X1=[$3])
         :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :     :                 +- LogicalProject(X0=[$0], X1=[$0])
         :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :     +- LogicalProject(X0=[$2], X1=[$1])
         :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
         :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :           :  :- LogicalUnion(all=[false])
         :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
         :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :     +- LogicalUnion(all=[false])
         :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
         :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
         :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :           :  :        +- LogicalUnion(all=[false])
         :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
         :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
         :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 46534.87058023846, cumulative cost = {4.716603261643643E8 rows, 1.623654379891738E10 cpu, 6.300455352E9 io, 2.0458248962163174E9 network, 1.0614524112985971E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 46534.87058023846, cumulative cost = {4.71613791293784E8 rows, 1.6235799240988096E10 cpu, 6.300455352E9 io, 2.0458248962163174E9 network, 1.0584741795814618E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 46534.87058023846, cumulative cost = {4.7156725642320377E8 rows, 1.6227609103765974E10 cpu, 6.300455352E9 io, 2.0447080593223917E9 network, 1.0584741795814618E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 256716.85280547178, cumulative cost = {4.715207215526235E8 rows, 1.6223501634121086E10 cpu, 6.300455352E9 io, 2.0447080593223917E9 network, 1.0554959478643265E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 222430.470600933, cumulative cost = {2.9565082182234496E8 rows, 1.0037136351454462E10 cpu, 3.937787376E9 io, 1.2651134933689032E9 network, 6.44249225085345E8 memory}
         :  :- Calc(select=[X0, X10 AS X1]): rowcount = 158841.95314424302, cumulative cost = {1.83785823487366E8 rows, 6.1158819283478775E9 cpu, 2.461111116E9 io, 7.672573700394099E8 network, 4.043969661683929E8 memory}
         :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 158841.95314424302, cumulative cost = {1.8362698153422174E8 rows, 6.1158819283478775E9 cpu, 2.461111116E9 io, 7.672573700394099E8 network, 4.043969661683929E8 memory}
         :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 423853.84971126664, cumulative cost = {1.1193857087917592E8 rows, 3.9888362927897863E9 cpu, 1.47667068E9 io, 5.080269213225636E8 network, 2.3984833331695208E8 memory}
         :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 423853.84971126664, cumulative cost = {1.1151471702946465E8 rows, 3.9176288460382934E9 cpu, 1.47667068E9 io, 4.978544289294932E8 network, 2.3984833331695208E8 memory}
         :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 423853.84971126664, cumulative cost = {1.1109086317975338E8 rows, 3.910847184442913E9 cpu, 1.47667068E9 io, 4.978544289294932E8 network, 2.12721686935431E8 memory}
         :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 423853.84971126664, cumulative cost = {1.1066700933004211E8 rows, 3.83624890689373E9 cpu, 1.47667068E9 io, 4.876819365364228E8 network, 2.12721686935431E8 memory}
         :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 2338255.6992340134, cumulative cost = {1.1024315548033084E8 rows, 3.798836815705986E9 cpu, 1.47667068E9 io, 4.876819365364228E8 network, 1.8559504055390993E8 memory}
         :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 1630664.2461574841, cumulative cost = {8.65761272540719E7 rows, 2.9231943760624924E9 cpu, 1.181334996E9 io, 3.7399709932944787E8 network, 1.4881220010500562E8 memory}
         :  :     :              :  :- Union(all=[true], union=[X0, X1]): rowcount = 1431870.327188954, cumulative cost = {5.6549917120645866E7 rows, 1.808810967665112E9 cpu, 7.87565784E8 io, 2.2818039729495224E8 network, 7.668083537188642E7 memory}
         :  :     :              :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 1323225.5521904202, cumulative cost = {3.356410034849894E7 rows, 9.262293566764424E8 cpu, 4.92230448E8 io, 1.1416352709542146E8 network, 3.912348327368512E7 memory}
         :  :     :              :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 615635.2868829742, cumulative cost = {1.1003615381655328E7 rows, 4.737113418842421E7 cpu, 1.96895508E8 io, 477181.2431150449 network, 2332224.92611928 memory}
         :  :     :              :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615635.2868829742, cumulative cost = {1.0387980094772354E7 rows, 4.737113418842421E7 cpu, 1.96895508E8 io, 477181.2431150449 network, 2332224.92611928 memory}
         :  :     :              :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :     :              :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :     :              :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :     :              :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :     :              :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707590.2653074461, cumulative cost = {2.1237259414653193E7 rows, 8.775349969358277E8 cpu, 2.9533494E8 io, 1.1368634585230643E8 network, 3.679125834756584E7 memory}
         :  :     :              :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707590.2653074461, cumulative cost = {2.0529669149345748E7 rows, 8.775349969358277E8 cpu, 2.9533494E8 io, 1.1368634585230643E8 network, 3.679125834756584E7 memory}
         :  :     :              :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615626.4353829742, cumulative cost = {1.1618794884038303E7 rows, 1.5072099345276386E8 cpu, 1.96895532E8 io, 1.5246937852306426E7 network, 2316177.96611928 memory}
         :  :     :              :  :  :           +- Calc(select=[x, X0]): rowcount = 615626.4353829742, cumulative cost = {1.100316844865533E7 rows, 4.7295752308424205E7 cpu, 1.96895532E8 io, 471903.40311504493 network, 2316177.96611928 memory}
         :  :     :              :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 615626.4353829742, cumulative cost = {1.0387542013272356E7 rows, 4.7295752308424205E7 cpu, 1.96895532E8 io, 471903.40311504493 network, 2316177.96611928 memory}
         :  :     :              :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 2534.2358864948087, cumulative cost = {5670273.577889381 rows, 1.4462342421332246E7 cpu, 9.8456124E7 io, 471903.40311504493 network, 2174260.7564755706 memory}
         :  :     :              :  :  :                    +- Calc(select=[X0, x0]): rowcount = 2534.2358864948087, cumulative cost = {5667739.342002886 rows, 1.4056864679493077E7 cpu, 9.8456124E7 io, 411081.7418391695 network, 2174260.7564755706 memory}
         :  :     :              :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 2534.2358864948087, cumulative cost = {5665205.106116392 rows, 1.4056864679493077E7 cpu, 9.8456124E7 io, 411081.7418391695 network, 2174260.7564755706 memory}
         :  :     :              :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :     :              :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :     :              :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :     :              :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :     :              :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :     :              :  :  :                             +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 108644.77499853367, cumulative cost = {2.1553946444957968E7 rows, 8.811497406614808E8 cpu, 2.95335336E8 io, 1.1401687019953078E8 network, 3.75573520982013E7 memory}
         :  :     :              :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 108644.77499853367, cumulative cost = {2.1445301669959433E7 rows, 8.811497406614808E8 cpu, 2.95335336E8 io, 1.1401687019953078E8 network, 3.75573520982013E7 memory}
         :  :     :              :  :        :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :     :              :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :  :     :              :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :  :     :              :  :        :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :     :              :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :     :              :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :        +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :     :              :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 198793.91896853002, cumulative cost = {2.839554588726856E7 rows, 1.1127527441512227E9 cpu, 3.93769212E8 io, 1.458167020344956E8 network, 7.213136473311919E7 memory}
         :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 198793.91896853002, cumulative cost = {2.819675196830003E7 rows, 1.1127527441512227E9 cpu, 3.93769212E8 io, 1.458167020344956E8 network, 7.213136473311919E7 memory}
         :  :     :              :        :- Exchange(distribution=[hash[y00]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :     :              :        :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :              :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :     :              :        :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :  :     :              :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :  :     :                       +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :  :     :                                +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :     +- Exchange(distribution=[hash[x]]): rowcount = 635092.5045836867, cumulative cost = {7.152956870190158E7 rows, 2.1185740647237313E9 cpu, 9.84440436E8 io, 2.5923044871684632E8 network, 1.4081281726760986E8 memory}
         :  :        +- Calc(select=[x, X1]): rowcount = 635092.5045836867, cumulative cost = {7.08944761973179E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 635092.5045836867, cumulative cost = {7.025938369273421E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 132308.0305579119, cumulative cost = {6.1421007188150525E7 rows, 1.2889310677092087E9 cpu, 8.86001028E8 io, 1.4554882060683784E8 network, 1.334035675563668E8 memory}
         :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :                             :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :  :                                      +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, x0 AS X1]): rowcount = 63588.51745668999, cumulative cost = {1.1164256786437804E8 rows, 3.9210319926359835E9 cpu, 1.47667626E9 io, 4.9785612332949317E8 network, 2.3985225891695207E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 63588.51745668999, cumulative cost = {1.1157897934692134E8 rows, 3.9210319926359835E9 cpu, 1.47667626E9 io, 4.9785612332949317E8 network, 2.3985225891695207E8 memory}
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 423853.84971126664, cumulative cost = {1.1151471702946465E8 rows, 3.9176288460382934E9 cpu, 1.47667068E9 io, 4.978544289294932E8 network, 2.3984833331695208E8 memory}
         :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 423853.84971126664, cumulative cost = {1.1109086317975338E8 rows, 3.910847184442913E9 cpu, 1.47667068E9 io, 4.978544289294932E8 network, 2.12721686935431E8 memory}
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 423853.84971126664, cumulative cost = {1.1066700933004211E8 rows, 3.83624890689373E9 cpu, 1.47667068E9 io, 4.876819365364228E8 network, 2.12721686935431E8 memory}
         :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 2338255.6992340134, cumulative cost = {1.1024315548033084E8 rows, 3.798836815705986E9 cpu, 1.47667068E9 io, 4.876819365364228E8 network, 1.8559504055390993E8 memory}
         :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 1630664.2461574841, cumulative cost = {8.65761272540719E7 rows, 2.9231943760624924E9 cpu, 1.181334996E9 io, 3.7399709932944787E8 network, 1.4881220010500562E8 memory}
         :        :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1431870.327188954, cumulative cost = {5.6549917120645866E7 rows, 1.808810967665112E9 cpu, 7.87565784E8 io, 2.2818039729495224E8 network, 7.668083537188642E7 memory}
         :        :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 1323225.5521904202, cumulative cost = {3.356410034849894E7 rows, 9.262293566764424E8 cpu, 4.92230448E8 io, 1.1416352709542146E8 network, 3.912348327368512E7 memory}
         :        :           :  :  :  :- Calc(select=[x AS X0, X0 AS X1]): rowcount = 615635.2868829742, cumulative cost = {1.1003615381655328E7 rows, 4.737113418842421E7 cpu, 1.96895508E8 io, 477181.2431150449 network, 2332224.92611928 memory}
         :        :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615635.2868829742, cumulative cost = {1.0387980094772354E7 rows, 4.737113418842421E7 cpu, 1.96895508E8 io, 477181.2431150449 network, 2332224.92611928 memory}
         :        :           :  :  :  :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :        :           :  :  :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :        :           :  :  :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :        :           :  :  :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :        :           :  :  :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :        :           :  :  :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707590.2653074461, cumulative cost = {2.1237259414653193E7 rows, 8.775349969358277E8 cpu, 2.9533494E8 io, 1.1368634585230643E8 network, 3.679125834756584E7 memory}
         :        :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707590.2653074461, cumulative cost = {2.0529669149345748E7 rows, 8.775349969358277E8 cpu, 2.9533494E8 io, 1.1368634585230643E8 network, 3.679125834756584E7 memory}
         :        :           :  :  :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615626.4353829742, cumulative cost = {1.1618794884038303E7 rows, 1.5072099345276386E8 cpu, 1.96895532E8 io, 1.5246937852306426E7 network, 2316177.96611928 memory}
         :        :           :  :  :           +- Calc(select=[x, X0]): rowcount = 615626.4353829742, cumulative cost = {1.100316844865533E7 rows, 4.7295752308424205E7 cpu, 1.96895532E8 io, 471903.40311504493 network, 2316177.96611928 memory}
         :        :           :  :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right]): rowcount = 615626.4353829742, cumulative cost = {1.0387542013272356E7 rows, 4.7295752308424205E7 cpu, 1.96895532E8 io, 471903.40311504493 network, 2316177.96611928 memory}
         :        :           :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 2534.2358864948087, cumulative cost = {5670273.577889381 rows, 1.4462342421332246E7 cpu, 9.8456124E7 io, 471903.40311504493 network, 2174260.7564755706 memory}
         :        :           :  :  :                    +- Calc(select=[X0, x0]): rowcount = 2534.2358864948087, cumulative cost = {5667739.342002886 rows, 1.4056864679493077E7 cpu, 9.8456124E7 io, 411081.7418391695 network, 2174260.7564755706 memory}
         :        :           :  :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 2534.2358864948087, cumulative cost = {5665205.106116392 rows, 1.4056864679493077E7 cpu, 9.8456124E7 io, 411081.7418391695 network, 2174260.7564755706 memory}
         :        :           :  :  :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :        :           :  :  :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :        :           :  :  :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :        :           :  :  :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :                          :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :        :           :  :  :                          :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                          :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :  :                          :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                          +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :        :           :  :  :                             +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :  :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 108644.77499853367, cumulative cost = {2.1553946444957968E7 rows, 8.811497406614808E8 cpu, 2.95335336E8 io, 1.1401687019953078E8 network, 3.75573520982013E7 memory}
         :        :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 108644.77499853367, cumulative cost = {2.1445301669959433E7 rows, 8.811497406614808E8 cpu, 2.95335336E8 io, 1.1401687019953078E8 network, 3.75573520982013E7 memory}
         :        :           :  :        :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :        :           :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
         :        :           :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
         :        :           :  :        :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :           :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :           :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :        +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :        :           :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :           :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :           :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :           :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :           :  :                       :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :           :  :                       :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :  :                       :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                       :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                       :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                       +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :  :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :  :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :  :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :  +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 198793.91896853002, cumulative cost = {2.839554588726856E7 rows, 1.1127527441512227E9 cpu, 3.93769212E8 io, 1.458167020344956E8 network, 7.213136473311919E7 memory}
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X0], build=[right]): rowcount = 198793.91896853002, cumulative cost = {2.819675196830003E7 rows, 1.1127527441512227E9 cpu, 3.93769212E8 io, 1.458167020344956E8 network, 7.213136473311919E7 memory}
         :        :           :        :- Exchange(distribution=[hash[y00]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
         :        :           :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :           :        :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :           :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :           :        :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :        :           :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :        :                    +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                          +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :        :                             +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :           +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 34286.38220453876, cumulative cost = {1.7561318287747306E8 rows, 6.186108565813818E9 cpu, 2.362667976E9 io, 7.795945659534886E8 network, 4.1124672277898145E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 34286.38220453876, cumulative cost = {1.7557889649526852E8 rows, 6.186108565813818E9 cpu, 2.362667976E9 io, 7.795945659534886E8 network, 4.1124672277898145E8 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 208655.8767799049, cumulative cost = {1.1419516694172032E8 rows, 4.913248319209577E9 cpu, 1.476661044E9 io, 6.367371539700322E8 network, 2.767099229659282E8 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 208655.8767799049, cumulative cost = {1.1398651106494042E8 rows, 4.909909825181098E9 cpu, 1.476661044E9 io, 6.367371539700322E8 network, 2.6335594685201427E8 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 208655.8767799049, cumulative cost = {1.1377785518816052E8 rows, 4.873186390867835E9 cpu, 1.476661044E9 io, 6.317294129273145E8 network, 2.6335594685201427E8 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 1151082.6040429706, cumulative cost = {1.1356919931138062E8 rows, 4.854769069203148E9 cpu, 1.476661044E9 io, 6.317294129273145E8 network, 2.5000197073810035E8 memory}
               :           :- Union(all=[true], union=[X0, X1]): rowcount = 1121248.9532742207, cumulative cost = {8.973881394305015E7 rows, 3.7519606246781054E9 cpu, 1.181331336E9 io, 4.867641253073146E8 network, 1.8105583593810037E8 memory}
               :           :  :- Union(all=[true], union=[X0, X1]): rowcount = 1015043.6038992208, cumulative cost = {7.283728371602593E7 rows, 2.8820208864248314E9 cpu, 9.8444106E8 io, 3.735456793073146E8 network, 1.4656377393810037E8 memory}
               :           :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 816247.9633713354, cumulative cost = {4.351742206305583E7 rows, 1.763920772974547E9 cpu, 5.90671572E8 io, 2.277191971633641E8 network, 7.440005995964938E7 memory}
               :           :  :  :  :- Calc(select=[x AS X0, X1]): rowcount = 707591.7113104329, cumulative cost = {2.123797041310528E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 707591.7113104329, cumulative cost = {2.0530378701794848E7 rows, 8.776244786175095E8 cpu, 2.9533596E8 io, 1.1369282230387531E8 network, 3.681100133160895E7 memory}
               :           :  :  :  :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :  :  :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 615636.0754028853, cumulative cost = {1.1619502990484416E7 rows, 1.508103980142864E8 cpu, 1.96896552E8 io, 1.5253414303875316E7 network, 2335381.109047373 memory}
               :           :  :  :  :        +- Calc(select=[x, X1]): rowcount = 615636.0754028853, cumulative cost = {1.100386691508153E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615636.0754028853, cumulative cost = {1.0388230839678645E7 rows, 4.738353734660167E7 cpu, 1.96896552E8 io, 478148.49420606665 network, 2335381.109047373 memory}
               :           :  :  :  :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :              +- Exchange(distribution=[broadcast]): rowcount = 2598.502685902536, cumulative cost = {5670952.76427576 rows, 1.4549613325114453E7 cpu, 9.8457144E7 io, 478148.49420606665 network, 2189864.958636831 memory}
               :           :  :  :  :                 +- Calc(select=[X0, X1]): rowcount = 2598.502685902536, cumulative cost = {5668354.261589858 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :  :  :                    +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2598.502685902536, cumulative cost = {5665755.758903955 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
               :           :  :  :  :                       :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :  :  :                       :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :  :  :                       :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :  :  :                       :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :  :                       :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :  :                       :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :  :                       :           :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :  :  :                       :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :  :  :                       :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  :                       +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :  +- Calc(select=[x AS X0, X1]): rowcount = 108656.25206090254, cumulative cost = {2.146320368657921E7 rows, 8.85480046393666E8 cpu, 2.95335612E8 io, 1.1402637485948882E8 network, 3.758905862804044E7 memory}
               :           :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right]): rowcount = 108656.25206090254, cumulative cost = {2.1354547434518307E7 rows, 8.85480046393666E8 cpu, 2.95335612E8 io, 1.1402637485948882E8 network, 3.758905862804044E7 memory}
               :           :  :  :        :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
               :           :  :  :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
               :           :  :  :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :  :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :        :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
               :           :  :  :        :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :  :  :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :  :  :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :           :  :  :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :           :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
               :           :  :  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :  :              +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :  :                    +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :                       :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :                       :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :  :                       :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :  :                       :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :  :                       :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :  :                       :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                       +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :  +- Calc(select=[x AS X0, X1]): rowcount = 198795.64052788538, cumulative cost = {2.8304818049070884E7 rows, 1.117085069846385E9 cpu, 3.93769488E8 io, 1.4582648214395046E8 network, 7.216371397845098E7 memory}
               :           :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, X1], build=[right]): rowcount = 198795.64052788538, cumulative cost = {2.8106022408542998E7 rows, 1.117085069846385E9 cpu, 3.93769488E8 io, 1.4582648214395046E8 network, 7.216371397845098E7 memory}
               :           :  :        :- Exchange(distribution=[hash[y00]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
               :           :  :        :  +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :  :        :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :           :  :        :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :  :        :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :        :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :           :  :        :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :        :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :        :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :        :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :        +- Exchange(distribution=[hash[x]]): rowcount = 617771.0026859025, cumulative cost = {1.1633959615515111E7 rows, 1.533428775448977E8 cpu, 1.96890648E8 io, 1.5640336923950471E7 network, 3114708.6280404446 memory}
               :           :  :           +- Calc(select=[x, X1]): rowcount = 617771.0026859025, cumulative cost = {1.1016188612829208E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617771.0026859025, cumulative cost = {1.0398417610143306E7 rows, 4.9557349093666084E7 cpu, 1.96890648E8 io, 813832.8594888116 network, 3114708.6280404446 memory}
               :           :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :                 +- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
               :           :  :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
               :           :  :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
               :           :  :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
               :           :  :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                                :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                                :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
               :           :  :                                :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :           :  :                                :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :  :                                :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :           :  :                                :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :           :  :                                :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :  :                                :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                                +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           :  +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 106205.34937499999, cumulative cost = {1.578028127375E7 rows, 8.688184893E8 cpu, 1.96890276E8 io, 1.13218446E8 network, 3.4492062E7 memory}
               :           :     +- HashJoin(joinType=[InnerJoin], where=[=(y0, x0)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 106205.34937499999, cumulative cost = {1.5674075924375E7 rows, 8.688184893E8 cpu, 1.96890276E8 io, 1.13218446E8 network, 3.4492062E7 memory}
               :           :        :- Calc(select=[x, y0]): rowcount = 707543.6625, cumulative cost = {1.5566886575E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
               :           :        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707543.6625, cumulative cost = {1.48593429125E7 rows, 8.63075484E8 cpu, 1.96884372E8 io, 1.13212542E8 network, 3.447435E7 memory}
               :           :        :     :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :           :        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :     +- Exchange(distribution=[hash[x]]): rowcount = 615315.75, cumulative cost = {5948515.25 rows, 1.36263966E8 cpu, 9.8444964E7 io, 1.4773134E7 network, 16668.0 memory}
               :           :        :        +- Calc(select=[x, y]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :           +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :           :        :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :           :        :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :           :        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :           :        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[x AS X0, y1 AS X1]): rowcount = 29833.650768749998, cumulative cost = {2.2679302764287498E7 rows, 1.101657361921E9 cpu, 2.95329708E8 io, 1.4496528762E8 network, 6.89461348E7 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right]): rowcount = 29833.650768749998, cumulative cost = {2.264946911351875E7 rows, 1.101657361921E9 cpu, 2.95329708E8 io, 1.4496528762E8 network, 6.89461348E7 memory}
               :                 :- Calc(select=[x, y00, y AS y1]): rowcount = 198428.005125, cumulative cost = {2.261870946275E7 rows, 1.09999215388E9 cpu, 2.95324152E8 io, 1.4495973162E8 network, 6.89294668E7 memory}
               :                 :  +- HashJoin(joinType=[InnerJoin], where=[=(y00, x0)], select=[x, y00, x0, y], build=[right]): rowcount = 198428.005125, cumulative cost = {2.2420281457624998E7 rows, 1.09999215388E9 cpu, 2.95324152E8 io, 1.4495973162E8 network, 6.89294668E7 memory}
               :                 :     :- Exchange(distribution=[hash[y00]]): rowcount = 707533.2675, cumulative cost = {1.62732671525E7 rows, 9.531397581400001E8 cpu, 1.9687884E8 io, 1.3018614522E8 network, 3.4453829199999996E7 memory}
               :                 :     :  +- Calc(select=[x, y0 AS y00]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 :     :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                 :     :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :        +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                 :     :           +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                 :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :     :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                 :     :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               :                 :     +- Exchange(distribution=[hash[x]]): rowcount = 615320.1, cumulative cost = {5948586.299999999 rows, 1.362695688E8 cpu, 9.8445312E7 io, 1.4773586399999999E7 network, 17712.0 memory}
               :                 :        +- Calc(select=[x, y]): rowcount = 615320.1, cumulative cost = {5333266.199999999 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :                 :           +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615320.1, cumulative cost = {4717946.1 rows, 3.2895792E7 cpu, 9.8445312E7 io, 5904.0 network, 17712.0 memory}
               :                 :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                 :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
               :                 :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 19920.004583686783, cumulative cost = {6.134944317134367E7 rows, 1.2710316395533326E9 cpu, 8.86006932E8 io, 1.4285741198345643E8 network, 1.334212795563668E8 memory}
                  +- Calc(select=[X0, X1]): rowcount = 19920.004583686783, cumulative cost = {6.132952316675998E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19920.004583686783, cumulative cost = {6.1309603162176296E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
                        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
                        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
                        :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
                        :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
                        :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
                        :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
                        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
                        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
                        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
                        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
                        :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
                        :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[0,1,2,1,0,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X10 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :     :- [#2] Exchange(distribution=[hash[X1]])\n:  :     +- [#3] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, x0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:        :- [#4] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:        +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      :  +- [#6] Exchange(distribution=[hash[X0, X1]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :- Exchange(distribution=[hash[X0]])
         :        :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :        :           :     +- Exchange(distribution=[hash[X0, X1]])
         :        :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :        :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :        :           :              :- Exchange(distribution=[broadcast])
         :        :           :              :  +- Calc(select=[X1, x])
         :        :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :        :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[3])
         :        :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :        :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :        :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :        :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :        :           :              :        :           :     :- Reused(reference_id=[1])
         :        :           :              :        :           :     +- Exchange(distribution=[broadcast])(reuse_id=[2])
         :        :           :              :        :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :        :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[24])
         :        :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :        :           :              :        +- Reused(reference_id=[2])
         :        :           :              :- Reused(reference_id=[3])
         :        :           :              +- Exchange(distribution=[broadcast])(reuse_id=[12])
         :        :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[4])
         :        :           :- Exchange(distribution=[hash[y]])
         :        :           :  +- Calc(select=[y, X1])
         :        :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :        :           :        :- Exchange(distribution=[hash[x]])
         :        :           :        :  +- Reused(reference_id=[1])
         :        :           :        +- Exchange(distribution=[hash[X0]])
         :        :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :        :           :              +- Exchange(distribution=[hash[X0, X1]])
         :        :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        :           :                    +- Union(all=[true], union=[X0, X1])
         :        :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[15])
         :        :           :                       :  +- Reused(reference_id=[4])
         :        :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :        :           :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[10])
         :        :           :                             :- Reused(reference_id=[1])
         :        :           :                             +- Reused(reference_id=[2])
         :        :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :           :  +- Reused(reference_id=[1])
         :        :           +- Exchange(distribution=[broadcast])
         :        :              +- Calc(select=[X0, X1])
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :        :                    :- Reused(reference_id=[5])
         :        :                    +- Exchange(distribution=[broadcast])(reuse_id=[7])
         :        :                       +- Reused(reference_id=[6])
         :        +- Reused(reference_id=[7])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X0 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :  :  :     :- [#7] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :     +- [#8] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n:  :  :        :- [#1] Exchange(distribution=[hash[y]])\n:  :  :        +- [#10] Exchange(distribution=[hash[x]])\n:  :  +- Calc(select=[x AS X0, X0 AS X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X1)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :        :- [#5] Calc(select=[x, y0])\n:  :        +- [#6] Exchange(distribution=[broadcast])\n:  +- Calc(select=[x AS X0, X0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X0], build=[right])\n:        :- [#3] Exchange(distribution=[hash[y00]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[9])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[11])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Calc(select=[y, x0])(reuse_id=[23])
         :              :                 :           :  :  +- Reused(reference_id=[8])
         :              :                 :           :  :- Reused(reference_id=[2])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[2])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[17])
         :              :                 :                 :- Reused(reference_id=[4])
         :              :                 :                 +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[7])
         :              :- Exchange(distribution=[hash[y00]])(reuse_id=[22])
         :              :  +- Calc(select=[x, y0 AS y00])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :        :- Reused(reference_id=[9])
         :              :        +- Exchange(distribution=[hash[x]])
         :              :           +- Calc(select=[x, y0])(reuse_id=[14])
         :              :              +- Reused(reference_id=[10])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])(reuse_id=[13])
         :              :           +- Reused(reference_id=[11])
         :              :- Calc(select=[x, y0])(reuse_id=[21])
         :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])
         :              :     :- Reused(reference_id=[9])
         :              :     +- Exchange(distribution=[hash[x]])
         :              :        +- Calc(select=[x, y])
         :              :           +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y, x0], isBroadcast=[true], build=[right])
         :              :              :- Reused(reference_id=[1])
         :              :              +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[13])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :        :        +- Union(all=[true], union=[X0, X1])
         :              :        :           :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :        :           :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :        :           :     :- Reused(reference_id=[14])
         :              :        :           :     +- Reused(reference_id=[12])
         :              :        :           +- Reused(reference_id=[15])
         :              :        +- Reused(reference_id=[12])
         :              :- Reused(reference_id=[9])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X0, x0], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Calc(select=[X0, x0])
         :                             +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])
         :                                :- Reused(reference_id=[16])
         :                                +- Exchange(distribution=[broadcast])(reuse_id=[20])
         :                                   +- Calc(select=[x, x0])
         :                                      +- Reused(reference_id=[17])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[9])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[18])
         :- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         +- Exchange(distribution=[hash[X0, X1]])
            +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
               +- MultipleInput(readOrder=[0,1,0,1,0,1,0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[x AS X0, X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :  :  :     :- [#8] Exchange(distribution=[hash[y]])\n:  :  :  :     +- [#9] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[x AS X0, X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(y0 = X0)], select=[x, y0, X0, X1], isBroadcast=[true], build=[right])\n:  :  :        :- [#2] Calc(select=[x, y0])\n:  :  :        +- [#11] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, X1], build=[right])\n:  :        :- [#4] Exchange(distribution=[hash[y00]])\n:  :        +- [#5] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[x AS X0, y0 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(y0 = x0)], select=[x, y0, x0], isBroadcast=[true], build=[right])\n:        :- [#2] Calc(select=[x, y0])\n:        +- [#3] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y1 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, y1, x0], isBroadcast=[true], build=[right])\n      :- Calc(select=[x, y00, y AS y1])\n      :  +- HashJoin(joinType=[InnerJoin], where=[(y00 = x0)], select=[x, y00, x0, y], build=[right])\n      :     :- [#4] Exchange(distribution=[hash[y00]])\n      :     +- [#7] Exchange(distribution=[hash[x]])\n      +- [#1] Exchange(distribution=[broadcast])\n])
                  :- Reused(reference_id=[12])
                  :- Reused(reference_id=[21])
                  :- Reused(reference_id=[7])
                  :- Reused(reference_id=[22])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])(reuse_id=[26])
                  :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[25])
                  :              +- Exchange(distribution=[hash[X0, X1]])
                  :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
                  :                    +- Union(all=[true], union=[X0, X1])
                  :                       :- Calc(select=[x0 AS X0, y AS X1])
                  :                       :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
                  :                       :     :- Reused(reference_id=[23])
                  :                       :     +- Reused(reference_id=[7])
                  :                       +- Reused(reference_id=[24])
                  :- Reused(reference_id=[22])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, y])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])
                  :        :- Reused(reference_id=[1])
                  :        +- Reused(reference_id=[7])
                  :- Reused(reference_id=[9])
                  :- Exchange(distribution=[hash[x]])
                  :  +- Calc(select=[x, X1])
                  :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
                  :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
                  :        :  +- Reused(reference_id=[1])
                  :        +- Exchange(distribution=[broadcast])
                  :           +- Calc(select=[X0, X1])
                  :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
                  :                 :- Reused(reference_id=[25])
                  :                 +- Reused(reference_id=[7])
                  :- Reused(reference_id=[21])
                  +- Reused(reference_id=[26])

Job has been submitted with JobID 7449e6b4ff6fcf2044e8e465fe0078c4
