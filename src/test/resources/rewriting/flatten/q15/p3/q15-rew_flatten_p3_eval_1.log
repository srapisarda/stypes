WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT r_0.x AS X0, p2_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0 INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x) UNION (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0 INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x) UNION (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 6873d4f5_ab8b_414d_9cd7_7043acfc116a

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT r_0.x AS X0, p2_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN a AS a_3 ON r_1.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0
                      INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0
                      INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalUnion(all=[false])
   :  :  :- LogicalUnion(all=[false])
   :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :  :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :  +- LogicalUnion(all=[false])
   :  :  :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :  :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :              +- LogicalUnion(all=[false])
   :  :  :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :  :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :  :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :              :  :- LogicalUnion(all=[false])
   :  :  :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :        +- LogicalUnion(all=[false])
   :  :  :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        +- LogicalUnion(all=[false])
   :  :  :        :  :  :           :- LogicalUnion(all=[false])
   :  :  :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :  :        :  :        :     :- LogicalUnion(all=[false])
   :  :  :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     +- LogicalJoin(condition=[=($5, $9)], joinType=[inner])
   :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalUnion(all=[false])
   :  :        :  :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :  :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalUnion(all=[false])
   :  :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     +- LogicalUnion(all=[false])
   :  :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     +- LogicalUnion(all=[false])
   :  :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :              +- LogicalUnion(all=[false])
   :  :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :  :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :           :  :- LogicalUnion(all=[false])
   :  :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     +- LogicalUnion(all=[false])
   :  :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :        +- LogicalUnion(all=[false])
   :  :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$7])
   :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalUnion(all=[false])
   :        :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalUnion(all=[false])
   :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :  +- LogicalUnion(all=[false])
   :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     +- LogicalUnion(all=[false])
   :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     +- LogicalUnion(all=[false])
   :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :              +- LogicalUnion(all=[false])
   :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :           :  :- LogicalUnion(all=[false])
   :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     +- LogicalUnion(all=[false])
   :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :        +- LogicalUnion(all=[false])
   :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$7])
      +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalProject(X0=[$3], X1=[$5])
            :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     :  +- LogicalUnion(all=[false])
            :     :     :- LogicalProject(X0=[$0], X1=[$0])
            :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :     :     +- LogicalProject(X0=[$1], X1=[$2])
            :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     +- LogicalUnion(all=[false])
            :        :- LogicalProject(X0=[$0], X1=[$5])
            :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalUnion(all=[false])
            :        :        :- LogicalProject(X0=[$0], X1=[$3])
            :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :        +- LogicalProject(X0=[$0], X1=[$0])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalProject(X0=[$0], X1=[$2])
            :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :              +- LogicalUnion(all=[false])
            :                 :- LogicalProject(X0=[$0], X1=[$3])
            :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalProject(X0=[$0], X1=[$0])
            :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$2], X1=[$1])
               +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$0], X1=[$5])
                  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalUnion(all=[false])
                  :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
                  :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
                  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$0], X1=[$2])
                  :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
                  :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
                  :  :        +- LogicalUnion(all=[false])
                  :  :           :- LogicalProject(X0=[$0], X1=[$3])
                  :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           +- LogicalProject(X0=[$0], X1=[$0])
                  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11669.2848417168, cumulative cost = {3.0819929050581288E7 rows, 6.712821694379501E8 cpu, 4.49778144E8 io, 7.590044050281973E7 network, 7.36886431086854E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 11669.2848417168, cumulative cost = {3.080825976573957E7 rows, 6.710954608804827E8 cpu, 4.49778144E8 io, 7.590044050281973E7 network, 7.294180887881553E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11669.2848417168, cumulative cost = {3.0796590480897855E7 rows, 6.690416667483405E8 cpu, 4.49778144E8 io, 7.562037766661853E7 network, 7.294180887881553E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 64375.42517477834, cumulative cost = {3.078492119605614E7 rows, 6.68011659945544E8 cpu, 4.49778144E8 io, 7.562037766661853E7 network, 7.219497464894566E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 61252.62753838621, cumulative cost = {2.5382922576099157E7 rows, 5.762185996774546E8 cpu, 3.6968094E8 io, 6.6201950226798624E7 network, 5.936178875041731E7 memory}
         :  :- Union(all=[true], union=[X0, X1]): rowcount = 53217.945414818416, cumulative cost = {1.9621640340066474E7 rows, 4.8209958002569616E8 cpu, 2.83422132E8 io, 5.653353156164195E7 network, 4.5869000933022544E7 memory}
         :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 8932.8987688335, cumulative cost = {1.4695672171853486E7 rows, 3.9757685316014016E8 cpu, 2.0948478E8 io, 4.760961902072254E7 network, 3.519384292923838E7 memory}
         :  :  :  :- Calc(select=[X0, X10 AS X1]): rowcount = 7446.929496049157, cumulative cost = {9296528.321170732 rows, 2.161666454016037E8 cpu, 1.35548616E8 io, 2.4923885329062648E7 network, 2.2283344349201538E7 memory}
         :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 7446.929496049157, cumulative cost = {9289081.391674682 rows, 2.161666454016037E8 cpu, 1.35548616E8 io, 2.4923885329062648E7 network, 2.2283344349201538E7 memory}
         :  :  :  :     :- Exchange(distribution=[broadcast]): rowcount = 9899.26181856229, cumulative cost = {5397067.675186917 rows, 1.829125230656439E8 cpu, 7.3935576E7 io, 2.292311917530539E7 network, 1.2910268980036838E7 memory}
         :  :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5387168.413368355 rows, 1.8132864117467394E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2910268980036838E7 memory}
         :  :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9899.26181856229, cumulative cost = {5377269.151549792 rows, 1.8117025298557696E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2276716223648852E7 memory}
         :  :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5367369.889731229 rows, 1.7942798290551E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.2276716223648852E7 memory}
         :  :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 54610.81781192009, cumulative cost = {5357470.627912667 rows, 1.785542098205193E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.1643163467260865E7 memory}
         :  :  :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 10326.504608038007, cumulative cost = {3967862.2000914263 rows, 1.2383810867630154E8 cpu, 5.545122E7 io, 1.5332502739201952E7 network, 9339651.42388057 memory}
         :  :  :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :  :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :  :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :  :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :  :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :  :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :  :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :  :  :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :  :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :  :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :  :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :  :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :  :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :  :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :  :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :  :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :  :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :  :  :     :              :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :  :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :  :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :  :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :  :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :  :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :  :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :  :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :  :  :     :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :  :  :     :              :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :  :  :     :              :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :  :  :     :              :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :  :  :     :              :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :  :  :     :              :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :  :  :     :              :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :  :  :  :     :                       +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :  :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :  :  :  :     :                                +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :  :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :  :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :  :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :  :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :  :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :  :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :  :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :  :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     +- Calc(select=[x, X1]): rowcount = 39746.934821765426, cumulative cost = {3884566.786991716 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :  :  :        +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39746.934821765426, cumulative cost = {3844819.8521699505 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :  :  :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :           +- Exchange(distribution=[broadcast]): rowcount = 8280.565478436212, cumulative cost = {3548373.917348185 rows, 3.0737116239009675E7 cpu, 5.5452264E7 io, 2000766.1537572588 network, 8355005.040532785 memory}
         :  :  :  :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :  :  :  :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :  :  :  :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :  :  :  :                       +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :  :  :  :                          :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :  :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :  :  :                          :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :  :  :  :                          :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :  :  :                          :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :  :  :                          :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :  :  :                          :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :  :  :                          :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :  :  :                          :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :  :  :                          :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :  :  :                          :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :  :  :                          :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :  :  :                          :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :  :  :                          :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :  :  :                          :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :  :  :                          :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                          :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                          :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :  :  :                          :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :  :  :                          :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :  :  :                          :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :  :  :                          :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :  :  :                          :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                          :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :                          :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :  :  :                          :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :  :  :                          :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :  :  :                          :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :  :  :                          :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :  :  :                          :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :  :  :                          :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                          :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :  :  :                             +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :  :  :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :  :  :  :                                   +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :  :  :                                      +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :  :  :                                         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :  :  :                                         :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :  :  :                                         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :  :  :                                         :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :  :  :                                         :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :  :  :                                         :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :  :  :                                         :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :  :  :                                         :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :  :  :                                         :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :  :  :                                         :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :  :  :                                         :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :  :  :                                         :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :  :  :                                         :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                         :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                         :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :  :  :                                         :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :  :  :                                         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :  :  :                                         :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :  :  :                                         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :  :  :                                         :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                         :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :                                         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :  :  :                                            +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  +- Calc(select=[X0, x0 AS X1]): rowcount = 1485.9692727843437, cumulative cost = {5390210.951913922 rows, 1.814012748597676E8 cpu, 7.3936164E7 io, 2.2685733691659894E7 network, 1.2910498580036838E7 memory}
         :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 1485.9692727843437, cumulative cost = {5388724.982641138 rows, 1.814012748597676E8 cpu, 7.3936164E7 io, 2.2685733691659894E7 network, 1.2910498580036838E7 memory}
         :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5387168.413368355 rows, 1.8132864117467394E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2910268980036838E7 memory}
         :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9899.26181856229, cumulative cost = {5377269.151549792 rows, 1.8117025298557696E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2276716223648852E7 memory}
         :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5367369.889731229 rows, 1.7942798290551E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.2276716223648852E7 memory}
         :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 54610.81781192009, cumulative cost = {5357470.627912667 rows, 1.785542098205193E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.1643163467260865E7 memory}
         :  :  :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 10326.504608038007, cumulative cost = {3967862.2000914263 rows, 1.2383810867630154E8 cpu, 5.545122E7 io, 1.5332502739201952E7 network, 9339651.42388057 memory}
         :  :  :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :  :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :  :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :  :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :  :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :  :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :  :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :  :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :  :  :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :  :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :  :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :  :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :  :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :  :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :  :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :  :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :  :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :  :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :  :        :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :  :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :  :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :  :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :  :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :  :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :  :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :  :        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :  :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :  :        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :  :        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :  :        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :  :        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :  :        :           :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :  :        :           :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :  :  :        :                    +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :  :  :        :                             +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :  :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :  :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :  :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :  :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :  :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :  :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :  :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :  :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :  :           +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  +- Calc(select=[x AS X0, X1]): rowcount = 44285.04664598491, cumulative cost = {4872750.222798168 rows, 8.446950892014116E7 cpu, 7.3937352E7 io, 8923912.540919404 network, 1.0675158003784167E7 memory}
         :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 44285.04664598491, cumulative cost = {4828465.176152183 rows, 8.446950892014116E7 cpu, 7.3937352E7 io, 8923912.540919404 network, 1.0675158003784167E7 memory}
         :  :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :        +- Exchange(distribution=[hash[x]]): rowcount = 38534.64430656607, cumulative cost = {4270782.129506198 rows, 3.898220776568863E7 cpu, 6.7776576E7 io, 2763136.5409194045 network, 8517217.922616467 memory}
         :  :           +- Calc(select=[x, X1]): rowcount = 38534.64430656607, cumulative cost = {4232247.485199632 rows, 3.2508387522185527E7 cpu, 6.7776576E7 io, 1838305.077561819 network, 8517217.922616467 memory}
         :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38534.64430656607, cumulative cost = {4193712.840893066 rows, 3.2508387522185527E7 cpu, 6.7776576E7 io, 1838305.077561819 network, 8517217.922616467 memory}
         :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                 +- Exchange(distribution=[broadcast]): rowcount = 198.6287104404686, cumulative cost = {3898479.1965865 rows, 3.0453206492502004E7 cpu, 6.16158E7 io, 1838305.077561819 network, 8506094.714831801 memory}
         :  :                    +- Calc(select=[X1, x AS x0]): rowcount = 198.6287104404686, cumulative cost = {3898280.5678760596 rows, 3.0421425898831528E7 cpu, 6.16158E7 io, 1833537.9885112478 network, 8506094.714831801 memory}
         :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X00)], select=[X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 198.6287104404686, cumulative cost = {3898081.939165619 rows, 3.0421425898831528E7 cpu, 6.16158E7 io, 1833537.9885112478 network, 8506094.714831801 memory}
         :  :                          :- Calc(select=[X1, X00]): rowcount = 1267.1914029364575, cumulative cost = {3897769.310455179 rows, 3.0401712367608037E7 cpu, 6.1615116E7 io, 1832853.9885112478 network, 8504042.714831801 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1267.1914029364575, cumulative cost = {3896502.1190522425 rows, 3.0401712367608037E7 cpu, 6.1615116E7 io, 1832853.9885112478 network, 8504042.714831801 memory}
         :  :                          :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :  :                          :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :  :                          :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :  :                          :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :  :                          :     :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                          :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                          :     :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :  :                          :     :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                          :     :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                          :     :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                          :     :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                          :     :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                          :     :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                          :     :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :     :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :     :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :                          :     :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :                          :     :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :                          :     :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :                          :     :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                          :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                          :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :  :                          :     :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                          :     :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                          :     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                          :     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                          :     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                          :     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                          :     :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                          :     :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                          :     :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                          :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 167.37720780683773, cumulative cost = {355141.5757795572 rows, 921903.063658211 cpu, 6162852.0 io, 30821.40623645814 network, 139664.55066183486 memory}
         :  :                          :        +- Calc(select=[X0, X1]): rowcount = 167.37720780683773, cumulative cost = {354974.19857175037 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
         :  :                          :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 167.37720780683773, cumulative cost = {354806.8213639435 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
         :  :                          :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
         :  :                          :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
         :  :                          :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
         :  :                          :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
         :  :                          :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :                          :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :                          :              :           :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                          :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X10 AS X1]): rowcount = 8034.68212356779, cumulative cost = {5700029.6084942985 rows, 9.405776702422006E7 cpu, 8.6258808E7 io, 9668418.665156674 network, 1.3492787817394763E7 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 8034.68212356779, cumulative cost = {5691994.926370731 rows, 9.405776702422006E7 cpu, 8.6258808E7 io, 9668418.665156674 network, 1.3492787817394763E7 memory}
         :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Calc(select=[x, X10]): rowcount = 38556.813364660746, cumulative cost = {4233144.807743998 rows, 3.2664804732017945E7 cpu, 6.7775892E7 io, 1862563.4271186972 network, 8573364.738249185 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right]): rowcount = 38556.813364660746, cumulative cost = {4194587.994379338 rows, 3.2664804732017945E7 cpu, 6.7775892E7 io, 1862563.4271186972 network, 8573364.738249185 memory}
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[broadcast]): rowcount = 346.42243107165245, cumulative cost = {3899332.1810146775 rows, 3.060844135256937E7 cpu, 6.1615116E7 io, 1862563.4271186972 network, 8553965.082109172 memory}
         :                 +- Calc(select=[X0, X10]): rowcount = 346.42243107165245, cumulative cost = {3898985.7585836058 rows, 3.0553013763597906E7 cpu, 6.1615116E7 io, 1854249.2887729777 network, 8553965.082109172 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 346.42243107165245, cumulative cost = {3898639.336152534 rows, 3.0553013763597906E7 cpu, 6.1615116E7 io, 1854249.2887729777 network, 8553965.082109172 memory}
         :                       :- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
         :                       :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
         :                       :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
         :                       :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
         :                       :           +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
         :                       :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :              :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :              :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :              :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :              :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :              :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X0, X1]): rowcount = 1250.6348217654318, cumulative cost = {3542708.62151328 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1250.6348217654318, cumulative cost = {3541457.9866915145 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :                             :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :                             :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :                             :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :                             :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :                             :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :                             :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :                             :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :                             :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :                             :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :                             :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :                             :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :                             :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :                             :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :                             :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :                             :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :                             :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :                             :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :                             :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :                             :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :                             :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                             :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :                             :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :                             :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :                             :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :                             :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :                             :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :                             :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :                             :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                             :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                             :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :                             :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :                             :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :                             :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :                             :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :                             :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :                             :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :                             :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :                             :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :                             :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :                             :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :                             :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :                             :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :                             :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :                             :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :                             :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :                             :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :                             :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :                             :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :                             :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :                             :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :                             :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :                             :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                             :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 3122.797636392137, cumulative cost = {5337623.194782202 rows, 9.17286848429146E7 cpu, 8.0097204E7 io, 9418427.439819902 network, 1.2833185898528345E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[right]): rowcount = 3122.797636392137, cumulative cost = {5334500.39714581 rows, 9.17286848429146E7 cpu, 8.0097204E7 io, 9418427.439819902 network, 1.2833185898528345E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 5810.916783489723, cumulative cost = {3895569.8971320447 rows, 3.299892718348844E7 cpu, 6.1614288E7 io, 1972757.8208009135 network, 8428784.590551648 memory}
                  +- Calc(select=[x, X1]): rowcount = 5810.916783489723, cumulative cost = {3889758.980348555 rows, 3.2069180498130083E7 cpu, 6.1614288E7 io, 1833295.8179971601 network, 8428784.590551648 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 5810.916783489723, cumulative cost = {3883948.063565065 rows, 3.2069180498130083E7 cpu, 6.1614288E7 io, 1833295.8179971601 network, 8428784.590551648 memory}
                        :- Calc(select=[x, X1]): rowcount = 38692.44522326482, cumulative cost = {3878043.1467815754 rows, 3.1751744936343964E7 cpu, 6.1613724E7 io, 1832731.8179971601 network, 8427092.590551648 memory}
                        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38692.44522326482, cumulative cost = {3839350.7015583105 rows, 3.1751744936343964E7 cpu, 6.1613724E7 io, 1832731.8179971601 network, 8427092.590551648 memory}
                        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :     +- Exchange(distribution=[broadcast]): rowcount = 1250.6348217654318, cumulative cost = {3543959.2563350457 rows, 2.968814785776984E7 cpu, 5.5452948E7 io, 1832731.8179971601 network, 8357057.040532785 memory}
                        :        +- Calc(select=[X0, X1]): rowcount = 1250.6348217654318, cumulative cost = {3542708.62151328 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1250.6348217654318, cumulative cost = {3541457.9866915145 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
                        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
                        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
                        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
                        :              :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :              :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
                        :              :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :              :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :              :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :              :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :              :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :              :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :              :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :              :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :              :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :              :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :              :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :              :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :              :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :              :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :              :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :              :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :              :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :              :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :              :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :              :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :              :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :              :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
                        :              :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
                        :              :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
                        :              :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
                        :              :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
                        :              :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :              :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :              :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
                        :              :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :              :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :              :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :              :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :              :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :              :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :              :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :              :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :              :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :              :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :              :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :              :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :              :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :              :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :              :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :              :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :              :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :              :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :              :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :              :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :              :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,1,0,1,1,0,2,0,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X0, X10 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:  :  :  :     :- [#6] Exchange(distribution=[broadcast])\n:  :  :  :     +- Calc(select=[x, X1])\n:  :  :  :        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :  :  :           :- [#11] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :           +- [#12] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, x0 AS X1])\n:  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])\n:  :  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#8] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :        :- [#4] Exchange(distribution=[hash[y]])\n:  :        +- [#5] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:        :- [#3] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X10])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right])\n:              :- [#9] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#10] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[10])
         :  +- Exchange(distribution=[hash[X0, X1]])
         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :           :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[7])
         :           :- Exchange(distribution=[hash[y]])(reuse_id=[11])
         :           :  +- Reused(reference_id=[1])
         :           +- Exchange(distribution=[hash[x]])
         :              +- Calc(select=[x, y0])(reuse_id=[16])
         :                 +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :                    :- Reused(reference_id=[1])
         :                    +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, X1])
         :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:     :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[2])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])(reuse_id=[23])
         :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[12])
         :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :        +- MultipleInput(readOrder=[0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[y, X1])\n:        +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:           :- [#4] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:           +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#3] Exchange(distribution=[broadcast])\n])
         :                 :           :- Exchange(distribution=[broadcast])
         :                 :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :                 :           :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :              :  +- Reused(reference_id=[1])
         :                 :           :              :- Exchange(distribution=[broadcast])
         :                 :           :              :  +- Calc(select=[X1, x])
         :                 :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :                 :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :                 :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :                 :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :                 :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[13])
         :                 :           :              :        :           :     :- Reused(reference_id=[1])
         :                 :           :              :        :           :     +- Reused(reference_id=[3])
         :                 :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[14])
         :                 :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :                 :           :              :        +- Reused(reference_id=[3])
         :                 :           :              :- Reused(reference_id=[4])
         :                 :           :              +- Reused(reference_id=[2])
         :                 :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :  +- Reused(reference_id=[1])
         :                 :           :- Exchange(distribution=[broadcast])
         :                 :           :  +- Calc(select=[X0, X1])
         :                 :           :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :           :        :- Reused(reference_id=[5])
         :                 :           :        +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :                 :           :           +- Reused(reference_id=[6])
         :                 :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :  +- Reused(reference_id=[1])
         :                 :           +- Exchange(distribution=[broadcast])
         :                 :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :                 :                 +- Exchange(distribution=[hash[X0, X1]])
         :                 :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :                       +- Union(all=[true], union=[X0, X1])
         :                 :                          :- Calc(select=[x AS X0, x AS X1])(reuse_id=[17])
         :                 :                          :  +- Reused(reference_id=[7])
         :                 :                          +- Calc(select=[y0 AS X0, x AS X1])
         :                 :                             +- Reused(reference_id=[8])
         :                 +- Reused(reference_id=[9])
         :- Exchange(distribution=[broadcast])(reuse_id=[18])
         :  +- Reused(reference_id=[10])
         :- Reused(reference_id=[11])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X1, x AS x0])
         :              +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X00)], select=[X1, X00, x], isBroadcast=[true], build=[right])\n:- Calc(select=[X1, X00])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :                 :- Reused(reference_id=[9])
         :                 :- Reused(reference_id=[12])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Calc(select=[X0, X1])
         :                       +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
         :                          :  +- Exchange(distribution=[hash[X0, X1]])
         :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                          :        +- Union(all=[true], union=[X0, X1])
         :                          :           :- Calc(select=[x0 AS X0, y AS X1])
         :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :                          :           :     :- Calc(select=[y, x0])(reuse_id=[15])
         :                          :           :     :  +- Reused(reference_id=[13])
         :                          :           :     +- Reused(reference_id=[9])
         :                          :           +- Reused(reference_id=[14])
         :                          +- Reused(reference_id=[9])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left])\n:        :- [#5] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X0])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#7] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[11])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[15])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[21])
         :              :                 :                 :- Reused(reference_id=[7])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[10])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[16])
         :              :                 :     +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[21])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X10])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Reused(reference_id=[22])
         :        +- Reused(reference_id=[23])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         +- Exchange(distribution=[broadcast])
            +- Reused(reference_id=[12])

Job has been submitted with JobID e4bfd68e5c37ce3272a9ac4437c56a57
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT r_0.x AS X0, p2_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0 INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x) UNION (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0 INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x) UNION (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 57b0b749_0929_4454_a258_80b57b55ac66

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT r_0.x AS X0, p2_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN a AS a_3 ON r_1.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0
                      INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0
                      INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalUnion(all=[false])
   :  :  :- LogicalUnion(all=[false])
   :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :  :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :  +- LogicalUnion(all=[false])
   :  :  :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :  :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :              +- LogicalUnion(all=[false])
   :  :  :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :  :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :  :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :              :  :- LogicalUnion(all=[false])
   :  :  :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :        +- LogicalUnion(all=[false])
   :  :  :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        +- LogicalUnion(all=[false])
   :  :  :        :  :  :           :- LogicalUnion(all=[false])
   :  :  :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :  :        :  :        :     :- LogicalUnion(all=[false])
   :  :  :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     +- LogicalJoin(condition=[=($5, $9)], joinType=[inner])
   :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalUnion(all=[false])
   :  :        :  :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :  :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalUnion(all=[false])
   :  :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     +- LogicalUnion(all=[false])
   :  :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     +- LogicalUnion(all=[false])
   :  :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :              +- LogicalUnion(all=[false])
   :  :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :  :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :           :  :- LogicalUnion(all=[false])
   :  :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     +- LogicalUnion(all=[false])
   :  :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :        +- LogicalUnion(all=[false])
   :  :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$7])
   :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalUnion(all=[false])
   :        :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalUnion(all=[false])
   :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :  +- LogicalUnion(all=[false])
   :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     +- LogicalUnion(all=[false])
   :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     +- LogicalUnion(all=[false])
   :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :              +- LogicalUnion(all=[false])
   :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :           :  :- LogicalUnion(all=[false])
   :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     +- LogicalUnion(all=[false])
   :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :        +- LogicalUnion(all=[false])
   :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$7])
      +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalProject(X0=[$3], X1=[$5])
            :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     :  +- LogicalUnion(all=[false])
            :     :     :- LogicalProject(X0=[$0], X1=[$0])
            :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :     :     +- LogicalProject(X0=[$1], X1=[$2])
            :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     +- LogicalUnion(all=[false])
            :        :- LogicalProject(X0=[$0], X1=[$5])
            :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalUnion(all=[false])
            :        :        :- LogicalProject(X0=[$0], X1=[$3])
            :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :        +- LogicalProject(X0=[$0], X1=[$0])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalProject(X0=[$0], X1=[$2])
            :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :              +- LogicalUnion(all=[false])
            :                 :- LogicalProject(X0=[$0], X1=[$3])
            :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalProject(X0=[$0], X1=[$0])
            :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$2], X1=[$1])
               +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$0], X1=[$5])
                  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalUnion(all=[false])
                  :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
                  :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
                  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$0], X1=[$2])
                  :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
                  :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
                  :  :        +- LogicalUnion(all=[false])
                  :  :           :- LogicalProject(X0=[$0], X1=[$3])
                  :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           +- LogicalProject(X0=[$0], X1=[$0])
                  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11669.2848417168, cumulative cost = {3.0819929050581288E7 rows, 6.712821694379501E8 cpu, 4.49778144E8 io, 7.590044050281973E7 network, 7.36886431086854E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 11669.2848417168, cumulative cost = {3.080825976573957E7 rows, 6.710954608804827E8 cpu, 4.49778144E8 io, 7.590044050281973E7 network, 7.294180887881553E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11669.2848417168, cumulative cost = {3.0796590480897855E7 rows, 6.690416667483405E8 cpu, 4.49778144E8 io, 7.562037766661853E7 network, 7.294180887881553E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 64375.42517477834, cumulative cost = {3.078492119605614E7 rows, 6.68011659945544E8 cpu, 4.49778144E8 io, 7.562037766661853E7 network, 7.219497464894566E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 61252.62753838621, cumulative cost = {2.5382922576099157E7 rows, 5.762185996774546E8 cpu, 3.6968094E8 io, 6.6201950226798624E7 network, 5.936178875041731E7 memory}
         :  :- Union(all=[true], union=[X0, X1]): rowcount = 53217.945414818416, cumulative cost = {1.9621640340066474E7 rows, 4.8209958002569616E8 cpu, 2.83422132E8 io, 5.653353156164195E7 network, 4.5869000933022544E7 memory}
         :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 8932.8987688335, cumulative cost = {1.4695672171853486E7 rows, 3.9757685316014016E8 cpu, 2.0948478E8 io, 4.760961902072254E7 network, 3.519384292923838E7 memory}
         :  :  :  :- Calc(select=[X0, X10 AS X1]): rowcount = 7446.929496049157, cumulative cost = {9296528.321170732 rows, 2.161666454016037E8 cpu, 1.35548616E8 io, 2.4923885329062648E7 network, 2.2283344349201538E7 memory}
         :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 7446.929496049157, cumulative cost = {9289081.391674682 rows, 2.161666454016037E8 cpu, 1.35548616E8 io, 2.4923885329062648E7 network, 2.2283344349201538E7 memory}
         :  :  :  :     :- Exchange(distribution=[broadcast]): rowcount = 9899.26181856229, cumulative cost = {5397067.675186917 rows, 1.829125230656439E8 cpu, 7.3935576E7 io, 2.292311917530539E7 network, 1.2910268980036838E7 memory}
         :  :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5387168.413368355 rows, 1.8132864117467394E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2910268980036838E7 memory}
         :  :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9899.26181856229, cumulative cost = {5377269.151549792 rows, 1.8117025298557696E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2276716223648852E7 memory}
         :  :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5367369.889731229 rows, 1.7942798290551E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.2276716223648852E7 memory}
         :  :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 54610.81781192009, cumulative cost = {5357470.627912667 rows, 1.785542098205193E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.1643163467260865E7 memory}
         :  :  :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 10326.504608038007, cumulative cost = {3967862.2000914263 rows, 1.2383810867630154E8 cpu, 5.545122E7 io, 1.5332502739201952E7 network, 9339651.42388057 memory}
         :  :  :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :  :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :  :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :  :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :  :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :  :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :  :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :  :  :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :  :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :  :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :  :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :  :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :  :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :  :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :  :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :  :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :  :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :  :  :     :              :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :  :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :  :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :  :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :  :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :  :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :  :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :  :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :  :  :     :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :  :  :     :              :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :  :  :     :              :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :  :  :     :              :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :  :  :     :              :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :  :  :     :              :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :  :  :     :              :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :  :  :  :     :                       +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :  :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :  :  :  :     :                                +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :  :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :  :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :  :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :  :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :  :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :  :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :  :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :  :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     +- Calc(select=[x, X1]): rowcount = 39746.934821765426, cumulative cost = {3884566.786991716 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :  :  :        +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39746.934821765426, cumulative cost = {3844819.8521699505 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :  :  :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :           +- Exchange(distribution=[broadcast]): rowcount = 8280.565478436212, cumulative cost = {3548373.917348185 rows, 3.0737116239009675E7 cpu, 5.5452264E7 io, 2000766.1537572588 network, 8355005.040532785 memory}
         :  :  :  :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :  :  :  :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :  :  :  :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :  :  :  :                       +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :  :  :  :                          :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :  :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :  :  :                          :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :  :  :  :                          :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :  :  :                          :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :  :  :                          :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :  :  :                          :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :  :  :                          :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :  :  :                          :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :  :  :                          :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :  :  :                          :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :  :  :                          :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :  :  :                          :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :  :  :                          :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :  :  :                          :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :  :  :                          :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                          :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                          :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :  :  :                          :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :  :  :                          :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :  :  :                          :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :  :  :                          :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :  :  :                          :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                          :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :                          :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :  :  :                          :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :  :  :                          :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :  :  :                          :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :  :  :                          :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :  :  :                          :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :  :  :                          :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                          :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :  :  :                             +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :  :  :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :  :  :  :                                   +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :  :  :                                      +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :  :  :                                         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :  :  :                                         :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :  :  :                                         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :  :  :                                         :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :  :  :                                         :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :  :  :                                         :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :  :  :                                         :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :  :  :                                         :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :  :  :                                         :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :  :  :                                         :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :  :  :                                         :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :  :  :                                         :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :  :  :                                         :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                         :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                         :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :  :  :                                         :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :  :  :                                         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :  :  :                                         :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :  :  :                                         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :  :  :                                         :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                         :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :                                         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :  :  :                                            +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  +- Calc(select=[X0, x0 AS X1]): rowcount = 1485.9692727843437, cumulative cost = {5390210.951913922 rows, 1.814012748597676E8 cpu, 7.3936164E7 io, 2.2685733691659894E7 network, 1.2910498580036838E7 memory}
         :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 1485.9692727843437, cumulative cost = {5388724.982641138 rows, 1.814012748597676E8 cpu, 7.3936164E7 io, 2.2685733691659894E7 network, 1.2910498580036838E7 memory}
         :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5387168.413368355 rows, 1.8132864117467394E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2910268980036838E7 memory}
         :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9899.26181856229, cumulative cost = {5377269.151549792 rows, 1.8117025298557696E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2276716223648852E7 memory}
         :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5367369.889731229 rows, 1.7942798290551E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.2276716223648852E7 memory}
         :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 54610.81781192009, cumulative cost = {5357470.627912667 rows, 1.785542098205193E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.1643163467260865E7 memory}
         :  :  :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 10326.504608038007, cumulative cost = {3967862.2000914263 rows, 1.2383810867630154E8 cpu, 5.545122E7 io, 1.5332502739201952E7 network, 9339651.42388057 memory}
         :  :  :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :  :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :  :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :  :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :  :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :  :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :  :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :  :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :  :  :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :  :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :  :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :  :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :  :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :  :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :  :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :  :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :  :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :  :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :  :        :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :  :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :  :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :  :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :  :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :  :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :  :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :  :        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :  :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :  :        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :  :        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :  :        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :  :        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :  :        :           :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :  :        :           :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :  :  :        :                    +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :  :  :        :                             +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :  :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :  :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :  :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :  :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :  :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :  :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :  :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :  :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :  :           +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  +- Calc(select=[x AS X0, X1]): rowcount = 44285.04664598491, cumulative cost = {4872750.222798168 rows, 8.446950892014116E7 cpu, 7.3937352E7 io, 8923912.540919404 network, 1.0675158003784167E7 memory}
         :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 44285.04664598491, cumulative cost = {4828465.176152183 rows, 8.446950892014116E7 cpu, 7.3937352E7 io, 8923912.540919404 network, 1.0675158003784167E7 memory}
         :  :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :        +- Exchange(distribution=[hash[x]]): rowcount = 38534.64430656607, cumulative cost = {4270782.129506198 rows, 3.898220776568863E7 cpu, 6.7776576E7 io, 2763136.5409194045 network, 8517217.922616467 memory}
         :  :           +- Calc(select=[x, X1]): rowcount = 38534.64430656607, cumulative cost = {4232247.485199632 rows, 3.2508387522185527E7 cpu, 6.7776576E7 io, 1838305.077561819 network, 8517217.922616467 memory}
         :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38534.64430656607, cumulative cost = {4193712.840893066 rows, 3.2508387522185527E7 cpu, 6.7776576E7 io, 1838305.077561819 network, 8517217.922616467 memory}
         :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                 +- Exchange(distribution=[broadcast]): rowcount = 198.6287104404686, cumulative cost = {3898479.1965865 rows, 3.0453206492502004E7 cpu, 6.16158E7 io, 1838305.077561819 network, 8506094.714831801 memory}
         :  :                    +- Calc(select=[X1, x AS x0]): rowcount = 198.6287104404686, cumulative cost = {3898280.5678760596 rows, 3.0421425898831528E7 cpu, 6.16158E7 io, 1833537.9885112478 network, 8506094.714831801 memory}
         :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X00)], select=[X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 198.6287104404686, cumulative cost = {3898081.939165619 rows, 3.0421425898831528E7 cpu, 6.16158E7 io, 1833537.9885112478 network, 8506094.714831801 memory}
         :  :                          :- Calc(select=[X1, X00]): rowcount = 1267.1914029364575, cumulative cost = {3897769.310455179 rows, 3.0401712367608037E7 cpu, 6.1615116E7 io, 1832853.9885112478 network, 8504042.714831801 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1267.1914029364575, cumulative cost = {3896502.1190522425 rows, 3.0401712367608037E7 cpu, 6.1615116E7 io, 1832853.9885112478 network, 8504042.714831801 memory}
         :  :                          :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :  :                          :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :  :                          :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :  :                          :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :  :                          :     :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                          :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                          :     :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :  :                          :     :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                          :     :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                          :     :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                          :     :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                          :     :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                          :     :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                          :     :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :     :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :     :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :                          :     :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :                          :     :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :                          :     :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :                          :     :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                          :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                          :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :  :                          :     :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                          :     :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                          :     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                          :     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                          :     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                          :     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                          :     :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                          :     :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                          :     :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                          :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 167.37720780683773, cumulative cost = {355141.5757795572 rows, 921903.063658211 cpu, 6162852.0 io, 30821.40623645814 network, 139664.55066183486 memory}
         :  :                          :        +- Calc(select=[X0, X1]): rowcount = 167.37720780683773, cumulative cost = {354974.19857175037 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
         :  :                          :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 167.37720780683773, cumulative cost = {354806.8213639435 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
         :  :                          :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
         :  :                          :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
         :  :                          :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
         :  :                          :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
         :  :                          :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :                          :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :                          :              :           :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                          :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X10 AS X1]): rowcount = 8034.68212356779, cumulative cost = {5700029.6084942985 rows, 9.405776702422006E7 cpu, 8.6258808E7 io, 9668418.665156674 network, 1.3492787817394763E7 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 8034.68212356779, cumulative cost = {5691994.926370731 rows, 9.405776702422006E7 cpu, 8.6258808E7 io, 9668418.665156674 network, 1.3492787817394763E7 memory}
         :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Calc(select=[x, X10]): rowcount = 38556.813364660746, cumulative cost = {4233144.807743998 rows, 3.2664804732017945E7 cpu, 6.7775892E7 io, 1862563.4271186972 network, 8573364.738249185 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right]): rowcount = 38556.813364660746, cumulative cost = {4194587.994379338 rows, 3.2664804732017945E7 cpu, 6.7775892E7 io, 1862563.4271186972 network, 8573364.738249185 memory}
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[broadcast]): rowcount = 346.42243107165245, cumulative cost = {3899332.1810146775 rows, 3.060844135256937E7 cpu, 6.1615116E7 io, 1862563.4271186972 network, 8553965.082109172 memory}
         :                 +- Calc(select=[X0, X10]): rowcount = 346.42243107165245, cumulative cost = {3898985.7585836058 rows, 3.0553013763597906E7 cpu, 6.1615116E7 io, 1854249.2887729777 network, 8553965.082109172 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 346.42243107165245, cumulative cost = {3898639.336152534 rows, 3.0553013763597906E7 cpu, 6.1615116E7 io, 1854249.2887729777 network, 8553965.082109172 memory}
         :                       :- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
         :                       :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
         :                       :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
         :                       :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
         :                       :           +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
         :                       :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :              :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :              :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :              :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :              :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :              :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X0, X1]): rowcount = 1250.6348217654318, cumulative cost = {3542708.62151328 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1250.6348217654318, cumulative cost = {3541457.9866915145 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :                             :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :                             :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :                             :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :                             :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :                             :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :                             :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :                             :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :                             :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :                             :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :                             :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :                             :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :                             :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :                             :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :                             :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :                             :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :                             :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :                             :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :                             :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :                             :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :                             :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                             :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :                             :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :                             :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :                             :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :                             :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :                             :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :                             :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :                             :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                             :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                             :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :                             :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :                             :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :                             :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :                             :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :                             :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :                             :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :                             :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :                             :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :                             :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :                             :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :                             :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :                             :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :                             :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :                             :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :                             :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :                             :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :                             :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :                             :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :                             :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :                             :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :                             :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :                             :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                             :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 3122.797636392137, cumulative cost = {5337623.194782202 rows, 9.17286848429146E7 cpu, 8.0097204E7 io, 9418427.439819902 network, 1.2833185898528345E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[right]): rowcount = 3122.797636392137, cumulative cost = {5334500.39714581 rows, 9.17286848429146E7 cpu, 8.0097204E7 io, 9418427.439819902 network, 1.2833185898528345E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 5810.916783489723, cumulative cost = {3895569.8971320447 rows, 3.299892718348844E7 cpu, 6.1614288E7 io, 1972757.8208009135 network, 8428784.590551648 memory}
                  +- Calc(select=[x, X1]): rowcount = 5810.916783489723, cumulative cost = {3889758.980348555 rows, 3.2069180498130083E7 cpu, 6.1614288E7 io, 1833295.8179971601 network, 8428784.590551648 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 5810.916783489723, cumulative cost = {3883948.063565065 rows, 3.2069180498130083E7 cpu, 6.1614288E7 io, 1833295.8179971601 network, 8428784.590551648 memory}
                        :- Calc(select=[x, X1]): rowcount = 38692.44522326482, cumulative cost = {3878043.1467815754 rows, 3.1751744936343964E7 cpu, 6.1613724E7 io, 1832731.8179971601 network, 8427092.590551648 memory}
                        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38692.44522326482, cumulative cost = {3839350.7015583105 rows, 3.1751744936343964E7 cpu, 6.1613724E7 io, 1832731.8179971601 network, 8427092.590551648 memory}
                        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :     +- Exchange(distribution=[broadcast]): rowcount = 1250.6348217654318, cumulative cost = {3543959.2563350457 rows, 2.968814785776984E7 cpu, 5.5452948E7 io, 1832731.8179971601 network, 8357057.040532785 memory}
                        :        +- Calc(select=[X0, X1]): rowcount = 1250.6348217654318, cumulative cost = {3542708.62151328 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1250.6348217654318, cumulative cost = {3541457.9866915145 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
                        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
                        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
                        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
                        :              :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :              :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
                        :              :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :              :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :              :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :              :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :              :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :              :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :              :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :              :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :              :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :              :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :              :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :              :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :              :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :              :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :              :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :              :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :              :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :              :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :              :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :              :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :              :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :              :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
                        :              :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
                        :              :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
                        :              :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
                        :              :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
                        :              :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :              :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :              :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
                        :              :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :              :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :              :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :              :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :              :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :              :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :              :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :              :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :              :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :              :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :              :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :              :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :              :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :              :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :              :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :              :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :              :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :              :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :              :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :              :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :              :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,1,0,1,1,0,2,0,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X0, X10 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:  :  :  :     :- [#6] Exchange(distribution=[broadcast])\n:  :  :  :     +- Calc(select=[x, X1])\n:  :  :  :        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :  :  :           :- [#11] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :           +- [#12] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, x0 AS X1])\n:  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])\n:  :  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#8] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :        :- [#4] Exchange(distribution=[hash[y]])\n:  :        +- [#5] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:        :- [#3] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X10])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right])\n:              :- [#9] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#10] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[10])
         :  +- Exchange(distribution=[hash[X0, X1]])
         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :           :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[7])
         :           :- Exchange(distribution=[hash[y]])(reuse_id=[11])
         :           :  +- Reused(reference_id=[1])
         :           +- Exchange(distribution=[hash[x]])
         :              +- Calc(select=[x, y0])(reuse_id=[16])
         :                 +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :                    :- Reused(reference_id=[1])
         :                    +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, X1])
         :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:     :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[2])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])(reuse_id=[23])
         :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[12])
         :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :        +- MultipleInput(readOrder=[0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[y, X1])\n:        +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:           :- [#4] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:           +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#3] Exchange(distribution=[broadcast])\n])
         :                 :           :- Exchange(distribution=[broadcast])
         :                 :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :                 :           :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :              :  +- Reused(reference_id=[1])
         :                 :           :              :- Exchange(distribution=[broadcast])
         :                 :           :              :  +- Calc(select=[X1, x])
         :                 :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :                 :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :                 :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :                 :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :                 :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[13])
         :                 :           :              :        :           :     :- Reused(reference_id=[1])
         :                 :           :              :        :           :     +- Reused(reference_id=[3])
         :                 :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[14])
         :                 :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :                 :           :              :        +- Reused(reference_id=[3])
         :                 :           :              :- Reused(reference_id=[4])
         :                 :           :              +- Reused(reference_id=[2])
         :                 :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :  +- Reused(reference_id=[1])
         :                 :           :- Exchange(distribution=[broadcast])
         :                 :           :  +- Calc(select=[X0, X1])
         :                 :           :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :           :        :- Reused(reference_id=[5])
         :                 :           :        +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :                 :           :           +- Reused(reference_id=[6])
         :                 :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :  +- Reused(reference_id=[1])
         :                 :           +- Exchange(distribution=[broadcast])
         :                 :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :                 :                 +- Exchange(distribution=[hash[X0, X1]])
         :                 :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :                       +- Union(all=[true], union=[X0, X1])
         :                 :                          :- Calc(select=[x AS X0, x AS X1])(reuse_id=[17])
         :                 :                          :  +- Reused(reference_id=[7])
         :                 :                          +- Calc(select=[y0 AS X0, x AS X1])
         :                 :                             +- Reused(reference_id=[8])
         :                 +- Reused(reference_id=[9])
         :- Exchange(distribution=[broadcast])(reuse_id=[18])
         :  +- Reused(reference_id=[10])
         :- Reused(reference_id=[11])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X1, x AS x0])
         :              +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X00)], select=[X1, X00, x], isBroadcast=[true], build=[right])\n:- Calc(select=[X1, X00])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :                 :- Reused(reference_id=[9])
         :                 :- Reused(reference_id=[12])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Calc(select=[X0, X1])
         :                       +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
         :                          :  +- Exchange(distribution=[hash[X0, X1]])
         :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                          :        +- Union(all=[true], union=[X0, X1])
         :                          :           :- Calc(select=[x0 AS X0, y AS X1])
         :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :                          :           :     :- Calc(select=[y, x0])(reuse_id=[15])
         :                          :           :     :  +- Reused(reference_id=[13])
         :                          :           :     +- Reused(reference_id=[9])
         :                          :           +- Reused(reference_id=[14])
         :                          +- Reused(reference_id=[9])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left])\n:        :- [#5] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X0])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#7] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[11])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[15])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[21])
         :              :                 :                 :- Reused(reference_id=[7])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[10])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[16])
         :              :                 :     +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[21])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X10])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Reused(reference_id=[22])
         :        +- Reused(reference_id=[23])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         +- Exchange(distribution=[broadcast])
            +- Reused(reference_id=[12])

Job has been submitted with JobID b50cd0df7f0c4c20e3696728d46f2cb2
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT r_0.x AS X0, p2_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0 INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x) UNION (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0 INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x) UNION (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 8a51ac4a_1f29_4086_a782_3c7c27ff153f

Adding statistics for table s number 3 
Adding statistics for table a number 3 
Adding statistics for table b number 3 
Adding statistics for table r number 3 
Adding statistics for table t number 3 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT r_0.x AS X0, p2_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN a AS a_3 ON r_1.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0
                      INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0
                      INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalUnion(all=[false])
   :  :  :- LogicalUnion(all=[false])
   :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :  :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :  +- LogicalUnion(all=[false])
   :  :  :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :  :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :              +- LogicalUnion(all=[false])
   :  :  :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :  :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :  :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :              :  :- LogicalUnion(all=[false])
   :  :  :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :        +- LogicalUnion(all=[false])
   :  :  :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        +- LogicalUnion(all=[false])
   :  :  :        :  :  :           :- LogicalUnion(all=[false])
   :  :  :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :  :        :  :        :     :- LogicalUnion(all=[false])
   :  :  :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     +- LogicalJoin(condition=[=($5, $9)], joinType=[inner])
   :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalUnion(all=[false])
   :  :        :  :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :  :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalUnion(all=[false])
   :  :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     +- LogicalUnion(all=[false])
   :  :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     +- LogicalUnion(all=[false])
   :  :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :              +- LogicalUnion(all=[false])
   :  :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :  :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :           :  :- LogicalUnion(all=[false])
   :  :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     +- LogicalUnion(all=[false])
   :  :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :        +- LogicalUnion(all=[false])
   :  :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$7])
   :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalUnion(all=[false])
   :        :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalUnion(all=[false])
   :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :  +- LogicalUnion(all=[false])
   :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     +- LogicalUnion(all=[false])
   :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     +- LogicalUnion(all=[false])
   :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :              +- LogicalUnion(all=[false])
   :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :           :  :- LogicalUnion(all=[false])
   :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     +- LogicalUnion(all=[false])
   :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :        +- LogicalUnion(all=[false])
   :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$7])
      +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalProject(X0=[$3], X1=[$5])
            :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     :  +- LogicalUnion(all=[false])
            :     :     :- LogicalProject(X0=[$0], X1=[$0])
            :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :     :     +- LogicalProject(X0=[$1], X1=[$2])
            :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     +- LogicalUnion(all=[false])
            :        :- LogicalProject(X0=[$0], X1=[$5])
            :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalUnion(all=[false])
            :        :        :- LogicalProject(X0=[$0], X1=[$3])
            :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :        +- LogicalProject(X0=[$0], X1=[$0])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalProject(X0=[$0], X1=[$2])
            :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :              +- LogicalUnion(all=[false])
            :                 :- LogicalProject(X0=[$0], X1=[$3])
            :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalProject(X0=[$0], X1=[$0])
            :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$2], X1=[$1])
               +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$0], X1=[$5])
                  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalUnion(all=[false])
                  :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
                  :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
                  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$0], X1=[$2])
                  :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
                  :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
                  :  :        +- LogicalUnion(all=[false])
                  :  :           :- LogicalProject(X0=[$0], X1=[$3])
                  :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           +- LogicalProject(X0=[$0], X1=[$0])
                  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 11669.2848417168, cumulative cost = {3.0819929050581288E7 rows, 6.712821694379501E8 cpu, 4.49778144E8 io, 7.590044050281973E7 network, 7.36886431086854E7 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 11669.2848417168, cumulative cost = {3.080825976573957E7 rows, 6.710954608804827E8 cpu, 4.49778144E8 io, 7.590044050281973E7 network, 7.294180887881553E7 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 11669.2848417168, cumulative cost = {3.0796590480897855E7 rows, 6.690416667483405E8 cpu, 4.49778144E8 io, 7.562037766661853E7 network, 7.294180887881553E7 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 64375.42517477834, cumulative cost = {3.078492119605614E7 rows, 6.68011659945544E8 cpu, 4.49778144E8 io, 7.562037766661853E7 network, 7.219497464894566E7 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 61252.62753838621, cumulative cost = {2.5382922576099157E7 rows, 5.762185996774546E8 cpu, 3.6968094E8 io, 6.6201950226798624E7 network, 5.936178875041731E7 memory}
         :  :- Union(all=[true], union=[X0, X1]): rowcount = 53217.945414818416, cumulative cost = {1.9621640340066474E7 rows, 4.8209958002569616E8 cpu, 2.83422132E8 io, 5.653353156164195E7 network, 4.5869000933022544E7 memory}
         :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 8932.8987688335, cumulative cost = {1.4695672171853486E7 rows, 3.9757685316014016E8 cpu, 2.0948478E8 io, 4.760961902072254E7 network, 3.519384292923838E7 memory}
         :  :  :  :- Calc(select=[X0, X10 AS X1]): rowcount = 7446.929496049157, cumulative cost = {9296528.321170732 rows, 2.161666454016037E8 cpu, 1.35548616E8 io, 2.4923885329062648E7 network, 2.2283344349201538E7 memory}
         :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 7446.929496049157, cumulative cost = {9289081.391674682 rows, 2.161666454016037E8 cpu, 1.35548616E8 io, 2.4923885329062648E7 network, 2.2283344349201538E7 memory}
         :  :  :  :     :- Exchange(distribution=[broadcast]): rowcount = 9899.26181856229, cumulative cost = {5397067.675186917 rows, 1.829125230656439E8 cpu, 7.3935576E7 io, 2.292311917530539E7 network, 1.2910268980036838E7 memory}
         :  :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5387168.413368355 rows, 1.8132864117467394E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2910268980036838E7 memory}
         :  :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9899.26181856229, cumulative cost = {5377269.151549792 rows, 1.8117025298557696E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2276716223648852E7 memory}
         :  :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5367369.889731229 rows, 1.7942798290551E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.2276716223648852E7 memory}
         :  :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 54610.81781192009, cumulative cost = {5357470.627912667 rows, 1.785542098205193E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.1643163467260865E7 memory}
         :  :  :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 10326.504608038007, cumulative cost = {3967862.2000914263 rows, 1.2383810867630154E8 cpu, 5.545122E7 io, 1.5332502739201952E7 network, 9339651.42388057 memory}
         :  :  :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :  :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :  :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :  :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :  :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :  :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :  :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :  :  :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :  :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :  :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :  :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :  :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :  :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :  :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :  :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :  :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :  :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :  :  :     :              :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :  :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :  :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :  :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :  :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :  :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :  :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :  :  :     :              :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :  :  :     :              :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :  :  :     :              :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :  :  :     :              :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :  :  :     :              :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :  :  :     :              :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :  :  :     :              :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :  :  :     :              :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :  :  :  :     :                       +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :  :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :  :  :  :     :                                +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :  :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :  :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :  :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :  :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :  :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :  :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :  :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :  :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     +- Calc(select=[x, X1]): rowcount = 39746.934821765426, cumulative cost = {3884566.786991716 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :  :  :        +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39746.934821765426, cumulative cost = {3844819.8521699505 rows, 3.2856952762837164E7 cpu, 6.161304E7 io, 2000766.1537572588 network, 8818716.707325213 memory}
         :  :  :  :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :           +- Exchange(distribution=[broadcast]): rowcount = 8280.565478436212, cumulative cost = {3548373.917348185 rows, 3.0737116239009675E7 cpu, 5.5452264E7 io, 2000766.1537572588 network, 8355005.040532785 memory}
         :  :  :  :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :  :  :  :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :  :  :  :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :  :  :  :                       +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :  :  :  :                          :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :  :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :  :  :                          :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :  :  :  :                          :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :  :  :                          :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :  :  :                          :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :  :  :                          :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :  :  :                          :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :  :  :                          :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :  :  :                          :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :  :  :                          :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :  :  :                          :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :  :  :                          :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :  :  :                          :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :  :  :                          :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :  :  :                          :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                          :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                          :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :  :  :                          :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :  :  :                          :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :  :  :                          :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :  :  :                          :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :  :  :                          :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                          :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :                          :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :  :  :                          :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :  :  :                          :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :  :  :                          :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :  :  :                          :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :  :  :                          :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :  :  :                          :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                          :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                          :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                          +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :  :  :                             +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :  :  :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :  :  :  :                                   +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :  :  :                                      +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :  :  :                                         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :  :  :                                         :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :  :  :                                         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :  :  :                                         :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :  :  :                                         :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :  :  :                                         :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :  :  :                                         :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :  :  :                                         :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :  :  :                                         :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :  :  :                                         :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :  :  :                                         :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :  :  :                                         :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :  :  :                                         :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                         :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                         :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :  :  :                                         :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :  :  :                                         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :  :  :                                         :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :  :  :                                         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :  :  :                                         :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :  :                                         :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                         :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :  :                                         :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                         +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :  :  :                                            +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :  +- Calc(select=[X0, x0 AS X1]): rowcount = 1485.9692727843437, cumulative cost = {5390210.951913922 rows, 1.814012748597676E8 cpu, 7.3936164E7 io, 2.2685733691659894E7 network, 1.2910498580036838E7 memory}
         :  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], build=[right]): rowcount = 1485.9692727843437, cumulative cost = {5388724.982641138 rows, 1.814012748597676E8 cpu, 7.3936164E7 io, 2.2685733691659894E7 network, 1.2910498580036838E7 memory}
         :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5387168.413368355 rows, 1.8132864117467394E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2910268980036838E7 memory}
         :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9899.26181856229, cumulative cost = {5377269.151549792 rows, 1.8117025298557696E8 cpu, 7.3935576E7 io, 2.2685536891659893E7 network, 1.2276716223648852E7 memory}
         :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9899.26181856229, cumulative cost = {5367369.889731229 rows, 1.7942798290551E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.2276716223648852E7 memory}
         :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 54610.81781192009, cumulative cost = {5357470.627912667 rows, 1.785542098205193E8 cpu, 7.3935576E7 io, 2.2447954608014397E7 network, 1.1643163467260865E7 memory}
         :  :  :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 10326.504608038007, cumulative cost = {3967862.2000914263 rows, 1.2383810867630154E8 cpu, 5.545122E7 io, 1.5332502739201952E7 network, 9339651.42388057 memory}
         :  :  :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 2275.994796622063, cumulative cost = {1795415.0758928033 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :  :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 2275.994796622063, cumulative cost = {1793139.0810961812 rows, 5.960223545538323E7 cpu, 2.4645408E7 io, 7476157.490396474 network, 4226939.303459568 memory}
         :  :  :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :  :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :  :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :  :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :  :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :  :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 165.56451835589723, cumulative cost = {355055.38392218563 rows, 917640.6140781399 cpu, 6162492.0 io, 30487.87137748509 network, 138677.72233036565 memory}
         :  :  :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 165.56451835589723, cumulative cost = {354889.81940382975 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :  :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 165.56451835589723, cumulative cost = {354724.25488547387 rows, 891150.2911411964 cpu, 6162492.0 io, 26514.322936943558 network, 138677.72233036565 memory}
         :  :  :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {354464.690367118 rows, 874800.1834955486 cpu, 6161928.0 io, 25950.322936943558 network, 136985.72233036565 memory}
         :  :  :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1056.7634557059816, cumulative cost = {353407.926911412 rows, 857891.9682042529 cpu, 6161928.0 io, 25950.322936943558 network, 69352.86116518283 memory}
         :  :  :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1056.7634557059816, cumulative cost = {352351.163455706 rows, 671901.6000000001 cpu, 6161928.0 io, 588.0 network, 69352.86116518283 memory}
         :  :  :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5829.8, cumulative cost = {351294.39999999997 rows, 578624.8 cpu, 6161928.0 io, 588.0 network, 1720.0 memory}
         :  :  :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5782.8, cumulative cost = {345370.6 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :  :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 5782.8, cumulative cost = {339587.8 rows, 572795.0 cpu, 6161364.0 io, 588.0 network, 1720.0 memory}
         :  :  :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 8050.509811415945, cumulative cost = {2162120.619590585 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :  :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left]): rowcount = 8050.509811415945, cumulative cost = {2154070.1097791693 rows, 6.422554671631028E7 cpu, 3.0805812E7 io, 7856345.248805479 network, 5112712.120421001 memory}
         :  :  :        :           :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :  :  :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :  :  :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :  :  :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :  :  :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :  :  :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :  :  :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :  :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :  :  :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :  :  :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        +- Calc(select=[x, X0]): rowcount = 38662.33128364844, cumulative cost = {695204.1634645888 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :  :        :           :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38662.33128364844, cumulative cost = {656541.8321809403 rows, 2831740.2807562603 cpu, 1.2322896E7 io, 50490.01076750136 network, 193289.04127542186 memory}
         :  :  :        :           :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :              +- Exchange(distribution=[broadcast]): rowcount = 1049.8752243229449, cumulative cost = {361180.5008972919 rows, 769749.2789616765 cpu, 6162120.0 io, 50490.01076750136 network, 134496.02871333694 memory}
         :  :  :        :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :  :        :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :  :        :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :  :        :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :  :        :           :                             :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :  :        :           :                             :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                             :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                             :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                             :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                             :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                             :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                             :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                             :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                             :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                             :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                             :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                             :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                             :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                             :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                             +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 44284.313203882084, cumulative cost = {1334997.6100093203 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 44284.313203882084, cumulative cost = {1290713.2968054381 rows, 5.4661490326405846E7 cpu, 1.8484356E7 io, 7115451.868812447 network, 2303512.0433802963 memory}
         :  :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 38529.75469254726, cumulative cost = {733030.983601556 rows, 9174228.288865468 cpu, 1.232358E7 io, 954675.8688124476 network, 145845.7805976497 memory}
         :  :  :        :                    +- Calc(select=[x, X0]): rowcount = 38529.75469254726, cumulative cost = {694501.2289090088 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38529.75469254726, cumulative cost = {655971.4742164615 rows, 2701229.500517527 cpu, 1.232358E7 io, 29961.75619131328 network, 145845.7805976497 memory}
         :  :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 166.03128364844173, cumulative cost = {360742.7195239143 rows, 646309.2502483395 cpu, 6162804.0 io, 29961.75619131328 network, 136548.02871333694 memory}
         :  :  :        :                             +- Calc(select=[X0, X1]): rowcount = 166.03128364844173, cumulative cost = {360576.6882402658 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :  :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 166.03128364844173, cumulative cost = {360410.6569566174 rows, 619744.2448645888 cpu, 6162804.0 io, 25977.00538375068 network, 136548.02871333694 memory}
         :  :  :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {360130.6256729689 rows, 601769.2430700053 cpu, 6162120.0 io, 25293.00538375068 network, 134496.02871333694 memory}
         :  :  :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1049.8752243229449, cumulative cost = {359080.75044864597 rows, 584971.2394808382 cpu, 6162120.0 io, 25293.00538375068 network, 67304.01435666847 memory}
         :  :  :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1049.8752243229449, cumulative cost = {358030.875224323 rows, 400193.19999999995 cpu, 6162120.0 io, 96.0 network, 67304.01435666847 memory}
         :  :  :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 5791.799999999999, cumulative cost = {356981.00000000006 rows, 307524.39999999997 cpu, 6162120.0 io, 96.0 network, 112.0 memory}
         :  :  :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 5784.599999999999, cumulative cost = {351125.80000000005 rows, 301525.6 cpu, 6161532.0 io, 72.0 network, 84.0 memory}
         :  :  :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 5775.9, cumulative cost = {345264.80000000005 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 5775.9, cumulative cost = {339488.9 rows, 295524.0 cpu, 6160824.0 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 8.7, cumulative cost = {76.4 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 8.7, cumulative cost = {67.7 rows, 217.0 cpu, 708.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :  :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 7.199999999999999, cumulative cost = {70.60000000000001 rows, 1359.0 cpu, 588.0 io, 196.79999999999998 network, 28.0 memory}
         :  :  :           +- Calc(select=[x, x0]): rowcount = 7.199999999999999, cumulative cost = {63.400000000000006 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 7.199999999999999, cumulative cost = {56.2 rows, 207.0 cpu, 588.0 io, 24.0 network, 28.0 memory}
         :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  +- Calc(select=[x AS X0, X1]): rowcount = 44285.04664598491, cumulative cost = {4872750.222798168 rows, 8.446950892014116E7 cpu, 7.3937352E7 io, 8923912.540919404 network, 1.0675158003784167E7 memory}
         :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 44285.04664598491, cumulative cost = {4828465.176152183 rows, 8.446950892014116E7 cpu, 7.3937352E7 io, 8923912.540919404 network, 1.0675158003784167E7 memory}
         :  :        :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :        +- Exchange(distribution=[hash[x]]): rowcount = 38534.64430656607, cumulative cost = {4270782.129506198 rows, 3.898220776568863E7 cpu, 6.7776576E7 io, 2763136.5409194045 network, 8517217.922616467 memory}
         :  :           +- Calc(select=[x, X1]): rowcount = 38534.64430656607, cumulative cost = {4232247.485199632 rows, 3.2508387522185527E7 cpu, 6.7776576E7 io, 1838305.077561819 network, 8517217.922616467 memory}
         :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38534.64430656607, cumulative cost = {4193712.840893066 rows, 3.2508387522185527E7 cpu, 6.7776576E7 io, 1838305.077561819 network, 8517217.922616467 memory}
         :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                 +- Exchange(distribution=[broadcast]): rowcount = 198.6287104404686, cumulative cost = {3898479.1965865 rows, 3.0453206492502004E7 cpu, 6.16158E7 io, 1838305.077561819 network, 8506094.714831801 memory}
         :  :                    +- Calc(select=[X1, x AS x0]): rowcount = 198.6287104404686, cumulative cost = {3898280.5678760596 rows, 3.0421425898831528E7 cpu, 6.16158E7 io, 1833537.9885112478 network, 8506094.714831801 memory}
         :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X00)], select=[X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 198.6287104404686, cumulative cost = {3898081.939165619 rows, 3.0421425898831528E7 cpu, 6.16158E7 io, 1833537.9885112478 network, 8506094.714831801 memory}
         :  :                          :- Calc(select=[X1, X00]): rowcount = 1267.1914029364575, cumulative cost = {3897769.310455179 rows, 3.0401712367608037E7 cpu, 6.1615116E7 io, 1832853.9885112478 network, 8504042.714831801 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 1267.1914029364575, cumulative cost = {3896502.1190522425 rows, 3.0401712367608037E7 cpu, 6.1615116E7 io, 1832853.9885112478 network, 8504042.714831801 memory}
         :  :                          :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :  :                          :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :  :                          :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :  :                          :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :  :                          :     :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                          :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :  :                          :     :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :  :                          :     :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                          :     :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                          :     :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                          :     :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                          :     :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                          :     :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                          :     :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :     :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :  :                          :     :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :  :                          :     :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :  :                          :     :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :  :                          :     :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :  :                          :     :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                          :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :  :                          :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :  :                          :     :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                          :     :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :  :                          :     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :  :                          :     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :  :                          :     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :  :                          :     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :  :                          :     :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :  :                          :     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :  :                          :     :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :  :                          :     :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :  :                          :     :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :  :                          :     :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :  :                          :     :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :  :                          :     :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :  :                          :     :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                          :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 167.37720780683773, cumulative cost = {355141.5757795572 rows, 921903.063658211 cpu, 6162852.0 io, 30821.40623645814 network, 139664.55066183486 memory}
         :  :                          :        +- Calc(select=[X0, X1]): rowcount = 167.37720780683773, cumulative cost = {354974.19857175037 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
         :  :                          :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 167.37720780683773, cumulative cost = {354806.8213639435 rows, 895122.710409117 cpu, 6162852.0 io, 26804.353249094034 network, 139664.55066183486 memory}
         :  :                          :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
         :  :                          :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
         :  :                          :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
         :  :                          :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
         :  :                          :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :                          :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :  :                          :              :           :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                          :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X10 AS X1]): rowcount = 8034.68212356779, cumulative cost = {5700029.6084942985 rows, 9.405776702422006E7 cpu, 8.6258808E7 io, 9668418.665156674 network, 1.3492787817394763E7 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left]): rowcount = 8034.68212356779, cumulative cost = {5691994.926370731 rows, 9.405776702422006E7 cpu, 8.6258808E7 io, 9668418.665156674 network, 1.3492787817394763E7 memory}
         :        :- Exchange(distribution=[broadcast]): rowcount = 15007.73412579119, cumulative cost = {1450815.4365031645 rows, 6.09644459122785E7 cpu, 1.8482916E7 io, 7805855.238037977 network, 4078989.9681012724 memory}
         :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
         :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
         :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
         :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
         :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
         :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
         :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
         :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
         :        :                       +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Calc(select=[x, X10]): rowcount = 38556.813364660746, cumulative cost = {4233144.807743998 rows, 3.2664804732017945E7 cpu, 6.7775892E7 io, 1862563.4271186972 network, 8573364.738249185 memory}
         :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right]): rowcount = 38556.813364660746, cumulative cost = {4194587.994379338 rows, 3.2664804732017945E7 cpu, 6.7775892E7 io, 1862563.4271186972 network, 8573364.738249185 memory}
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :              +- Exchange(distribution=[broadcast]): rowcount = 346.42243107165245, cumulative cost = {3899332.1810146775 rows, 3.060844135256937E7 cpu, 6.1615116E7 io, 1862563.4271186972 network, 8553965.082109172 memory}
         :                 +- Calc(select=[X0, X10]): rowcount = 346.42243107165245, cumulative cost = {3898985.7585836058 rows, 3.0553013763597906E7 cpu, 6.1615116E7 io, 1854249.2887729777 network, 8553965.082109172 memory}
         :                    +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 346.42243107165245, cumulative cost = {3898639.336152534 rows, 3.0553013763597906E7 cpu, 6.1615116E7 io, 1854249.2887729777 network, 8553965.082109172 memory}
         :                       :- Exchange(distribution=[broadcast]): rowcount = 1058.8480520455848, cumulative cost = {355584.2922081822 rows, 1046491.614320046 cpu, 6162168.0 io, 51532.70649818807 network, 137612.55066183486 memory}
         :                       :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {354525.44415613665 rows, 877075.9259927524 cpu, 6162168.0 io, 26120.353249094034 network, 137612.55066183486 memory}
         :                       :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 1058.8480520455848, cumulative cost = {353466.5961040911 rows, 860134.3571600231 cpu, 6162168.0 io, 26120.353249094034 network, 69846.27533091743 memory}
         :                       :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 1058.8480520455848, cumulative cost = {352407.7480520455 rows, 673777.1000000001 cpu, 6162168.0 io, 708.0 network, 69846.27533091743 memory}
         :                       :           +- Union(all=[true], union=[X0, X1]): rowcount = 5841.3, cumulative cost = {351348.89999999997 rows, 580316.3 cpu, 6162168.0 io, 708.0 network, 2080.0 memory}
         :                       :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 5784.3, cumulative cost = {345393.6 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 5784.3, cumulative cost = {339609.3 rows, 574475.0 cpu, 6161484.0 io, 708.0 network, 2080.0 memory}
         :                       :              :     :- Calc(select=[y, x0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :              :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                       :              :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                       :              :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                       :              :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                       :              :     +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                       :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                       +- Calc(select=[X0, X1]): rowcount = 1250.6348217654318, cumulative cost = {3542708.62151328 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
         :                          +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1250.6348217654318, cumulative cost = {3541457.9866915145 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
         :                             :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
         :                             :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
         :                             :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
         :                             :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
         :                             :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :                             :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
         :                             :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
         :                             :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :                             :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :                             :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :                             :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :                             :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :                             :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :                             :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :                             :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :                             :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :                             :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :                             :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :                             :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :                             :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :                             :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :                             :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :                             :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :                             :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :                             :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                             :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                             :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :                             :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
         :                             :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
         :                             :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
         :                             :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
         :                             :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
         :                             :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
         :                             :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                             :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                             :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :                             :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
         :                             :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
         :                             :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :                             :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
         :                             :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
         :                             :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
         :                             :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
         :                             :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
         :                             :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :                             :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
         :                             :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
         :                             :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :                             :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
         :                             :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :                             :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :                             :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :                             :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :                             :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :                             :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
         :                             :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
         :                             :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
         :                             :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
         :                             :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
         :                             :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
         :                             :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
         :                             :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                             :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                             :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
         :                             :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
         :                             :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                             :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         :                             +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
         :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 3122.797636392137, cumulative cost = {5337623.194782202 rows, 9.17286848429146E7 cpu, 8.0097204E7 io, 9418427.439819902 network, 1.2833185898528345E7 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[right]): rowcount = 3122.797636392137, cumulative cost = {5334500.39714581 rows, 9.17286848429146E7 cpu, 8.0097204E7 io, 9418427.439819902 network, 1.2833185898528345E7 memory}
               :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1435807.7023773734 rows, 5.856320845215191E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 4078989.9681012724 memory}
               :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 15007.73412579119, cumulative cost = {1420799.9682515822 rows, 5.832308470613925E7 cpu, 1.8482916E7 io, 7445669.619018989 network, 3118494.984050636 memory}
               :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 15007.73412579119, cumulative cost = {1405792.2341257911 rows, 5.56817235E7 cpu, 1.8482916E7 io, 7085484.0 network, 3118494.984050636 memory}
               :        +- Union(all=[true], union=[X0, X1]): rowcount = 82792.5, cumulative cost = {1390784.5 rows, 5.43570435E7 cpu, 1.8482916E7 io, 7085484.0 network, 2158000.0 memory}
               :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 38511.9, cumulative cost = {333816.80000000005 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 38511.9, cumulative cost = {295304.9 rows, 2061488.0 cpu, 6161340.0 io, 564.0 network, 1692.0 memory}
               :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :           :     +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
               :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
               :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 44280.6, cumulative cost = {974175.2 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 44280.6, cumulative cost = {929894.6 rows, 5.2212763E7 cpu, 1.2321576E7 io, 7084920.0 network, 2156308.0 memory}
               :                 :- Exchange(distribution=[hash[y]]): rowcount = 256699.0, cumulative cost = {513398.0 rows, 4.3125432E7 cpu, 6160776.0 io, 6160776.0 network, 0.0 memory}
               :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                 +- Exchange(distribution=[hash[x]]): rowcount = 38505.0, cumulative cost = {372216.0 rows, 6725699.0 cpu, 6160800.0 io, 924144.0 network, 28.0 memory}
               :                    +- Calc(select=[x, y0]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
               :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
               :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[broadcast]): rowcount = 5810.916783489723, cumulative cost = {3895569.8971320447 rows, 3.299892718348844E7 cpu, 6.1614288E7 io, 1972757.8208009135 network, 8428784.590551648 memory}
                  +- Calc(select=[x, X1]): rowcount = 5810.916783489723, cumulative cost = {3889758.980348555 rows, 3.2069180498130083E7 cpu, 6.1614288E7 io, 1833295.8179971601 network, 8428784.590551648 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 5810.916783489723, cumulative cost = {3883948.063565065 rows, 3.2069180498130083E7 cpu, 6.1614288E7 io, 1833295.8179971601 network, 8428784.590551648 memory}
                        :- Calc(select=[x, X1]): rowcount = 38692.44522326482, cumulative cost = {3878043.1467815754 rows, 3.1751744936343964E7 cpu, 6.1613724E7 io, 1832731.8179971601 network, 8427092.590551648 memory}
                        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38692.44522326482, cumulative cost = {3839350.7015583105 rows, 3.1751744936343964E7 cpu, 6.1613724E7 io, 1832731.8179971601 network, 8427092.590551648 memory}
                        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :     +- Exchange(distribution=[broadcast]): rowcount = 1250.6348217654318, cumulative cost = {3543959.2563350457 rows, 2.968814785776984E7 cpu, 5.5452948E7 io, 1832731.8179971601 network, 8357057.040532785 memory}
                        :        +- Calc(select=[X0, X1]): rowcount = 1250.6348217654318, cumulative cost = {3542708.62151328 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1250.6348217654318, cumulative cost = {3541457.9866915145 rows, 2.948804628628737E7 cpu, 5.5452948E7 io, 1802716.5822747897 network, 8357057.040532785 memory}
                        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3540093.351869749 rows, 2.941222576245988E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 8355005.040532785 memory}
                        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 8280.565478436212, cumulative cost = {3531812.7863913127 rows, 2.9279736714804903E7 cpu, 5.5452264E7 io, 1802032.5822747897 network, 7825048.849912867 memory}
                        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 8280.565478436212, cumulative cost = {3523532.2209128765 rows, 2.782235719060013E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7825048.849912867 memory}
                        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 45681.027637294166, cumulative cost = {3515251.6554344404 rows, 2.7091460748403423E7 cpu, 5.5452264E7 io, 1603299.0107923206 network, 7295092.659292949 memory}
                        :              :           :- Calc(select=[X10 AS X0, X1]): rowcount = 7012.904128538202, cumulative cost = {1944748.3374411485 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left]): rowcount = 7012.904128538202, cumulative cost = {1937735.4333126103 rows, 1.5874863163137225E7 cpu, 3.0806472E7 io, 1042371.8375416349 network, 4460568.2835834045 memory}
                        :              :           :     :- Exchange(distribution=[broadcast]): rowcount = 7199.600389154035, cumulative cost = {1194607.17355252 rows, 1.0019221486973636E7 cpu, 1.8484332E7 io, 706909.821189428 network, 2771516.9324406516 memory}
                        :              :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :              :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :              :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :              :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :              :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :              :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :              :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :              :           :     :              :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :              :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :              :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :              :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :              :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :              :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :              :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :              :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :              :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :              :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :              :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :              :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :              :           :     +- Calc(select=[y, X1]): rowcount = 39553.09380110065, cumulative cost = {736115.3556315519 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :              :           :        +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 39553.09380110065, cumulative cost = {696562.2618304513 rows, 5481620.122641552 cpu, 1.232214E7 io, 335462.01635220693 network, 1285873.7293501266 memory}
                        :              :           :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :           :           +- Exchange(distribution=[broadcast]): rowcount = 6988.2920073376445, cumulative cost = {400310.1680293507 rows, 3372121.786582851 cpu, 6161364.0 io, 335462.01635220693 network, 894529.3769392185 memory}
                        :              :           :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {393321.876022013 rows, 2253995.0654088277 cpu, 6161364.0 io, 167743.00817610347 network, 894529.3769392185 memory}
                        :              :           :                 +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6988.2920073376445, cumulative cost = {386333.58401467535 rows, 2142182.3932914254 cpu, 6161364.0 io, 167743.00817610347 network, 447278.68846960925 memory}
                        :              :           :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6988.2920073376445, cumulative cost = {379345.2920073377 rows, 912243.0 cpu, 6161364.0 io, 24.0 network, 447278.68846960925 memory}
                        :              :           :                       +- Union(all=[true], union=[X0, X1]): rowcount = 38552.0, cumulative cost = {372357.0 rows, 295411.0 cpu, 6161364.0 io, 24.0 network, 28.0 memory}
                        :              :           :                          :- Calc(select=[x AS X0, x AS X1]): rowcount = 47.0, cumulative cost = {94.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :              :           :                          :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :              :           :                          +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :                             +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :           :                                :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :           :                                +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           +- Calc(select=[x AS X0, X1]): rowcount = 38668.12350875596, cumulative cost = {1524822.2903559976 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 38668.12350875596, cumulative cost = {1486154.1668472416 rows, 1.1170916557628904E7 cpu, 2.4645792E7 io, 560927.1732506857 network, 2834524.3757095453 memory}
                        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 1088.4900583731053, cumulative cost = {1190787.0433384858 rows, 9108616.637161918 cpu, 1.8485016E7 io, 560927.1732506857 network, 2773568.9324406516 memory}
                        :              :                    +- Calc(select=[X0, X1]): rowcount = 1088.4900583731053, cumulative cost = {1189698.5532801126 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1088.4900583731053, cumulative cost = {1188610.0632217394 rows, 8934458.227822222 cpu, 1.8485016E7 io, 534803.4118497311 network, 2773568.9324406516 memory}
                        :              :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1187407.5731633662 rows, 8867285.42470899 cpu, 1.8484332E7 io, 534119.4118497311 network, 2771516.9324406516 memory}
                        :              :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 7199.600389154035, cumulative cost = {1180207.9727742122 rows, 8752091.818482526 cpu, 1.8484332E7 io, 534119.4118497311 network, 2310742.5075347936 memory}
                        :              :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 7199.600389154035, cumulative cost = {1173008.3723850583 rows, 7484962.149991415 cpu, 1.8484332E7 io, 361329.00251003425 network, 2310742.5075347936 memory}
                        :              :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 39717.71556071668, cumulative cost = {1165808.7719959044 rows, 6849478.701019948 cpu, 1.8484332E7 io, 361329.00251003425 network, 1849968.082628935 memory}
                        :              :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 38662.14985574565, cumulative cost = {730528.610925825 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :              :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 38662.14985574565, cumulative cost = {691866.4610700794 rows, 4491431.045497858 cpu, 1.2322284E7 io, 192978.4897146695 network, 953514.6810536564 memory}
                        :              :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 1048.6657049710298, cumulative cost = {396505.3112143337 rows, 2429449.71985809 cpu, 6161508.0 io, 192978.4897146695 network, 894789.4015752787 memory}
                        :              :                          :           :        +- Calc(select=[X1, x]): rowcount = 1048.6657049710298, cumulative cost = {395456.6455093627 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :              :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 1048.6657049710298, cumulative cost = {394407.9798043917 rows, 2261663.207062725 cpu, 6161508.0 io, 167810.51279536478 network, 894789.4015752787 memory}
                        :              :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :              :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :              :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :              :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 1055.5657049710296, cumulative cost = {395562.44550936273 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :              :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1055.5657049710296, cumulative cost = {394506.8798043917 rows, 2318329.9399613733 cpu, 6162048.0 io, 168350.51279536478 network, 896453.4015752787 memory}
                        :              :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {393357.3140994207 rows, 2254513.102362918 cpu, 6161484.0 io, 167786.51279536478 network, 894761.4015752787 memory}
                        :              :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 6990.104699806865, cumulative cost = {386367.2093996138 rows, 2142671.4271660084 cpu, 6161484.0 io, 167786.51279536478 network, 447394.70078763936 memory}
                        :              :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 6990.104699806865, cumulative cost = {379377.1046998069 rows, 912413.0 cpu, 6161484.0 io, 24.0 network, 447394.70078763936 memory}
                        :              :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 38562.0, cumulative cost = {372387.0 rows, 295421.0 cpu, 6161484.0 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 38505.0, cumulative cost = {333711.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 38505.0, cumulative cost = {295206.0 rows, 256859.0 cpu, 6160800.0 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 256699.0, cumulative cost = {256699.0 rows, 0.0 cpu, 6160776.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 57.0, cumulative cost = {114.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                        :              :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}
                        :              :                          +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        :              +- Exchange(distribution=[broadcast]): rowcount = 57.0, cumulative cost = {114.0 rows, 9120.0 cpu, 684.0 io, 684.0 network, 0.0 memory}
                        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 57.0, cumulative cost = {57.0 rows, 0.0 cpu, 684.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 47.0, cumulative cost = {94.0 rows, 7520.0 cpu, 564.0 io, 564.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 47.0, cumulative cost = {47.0 rows, 0.0 cpu, 564.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,1,0,1,1,0,2,0,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X0, X10 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:  :  :  :     :- [#6] Exchange(distribution=[broadcast])\n:  :  :  :     +- Calc(select=[x, X1])\n:  :  :  :        +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:  :  :  :           :- [#11] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:  :  :  :           +- [#12] Exchange(distribution=[broadcast])\n:  :  :  +- Calc(select=[X0, x0 AS X1])\n:  :  :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], build=[right])\n:  :  :        :- [#7] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#8] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :        :- [#4] Exchange(distribution=[hash[y]])\n:  :        +- [#5] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[left])\n:        :- [#3] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X10])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right])\n:              :- [#9] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#10] Exchange(distribution=[broadcast])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], isBroadcast=[true], build=[right])\n      :- [#1] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[10])
         :  +- Exchange(distribution=[hash[X0, X1]])
         :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :        +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :           :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :           :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :           :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[7])
         :           :- Exchange(distribution=[hash[y]])(reuse_id=[11])
         :           :  +- Reused(reference_id=[1])
         :           +- Exchange(distribution=[hash[x]])
         :              +- Calc(select=[x, y0])(reuse_id=[16])
         :                 +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[8])
         :                    :- Reused(reference_id=[1])
         :                    +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, X1])
         :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:     :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[2])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])(reuse_id=[23])
         :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[12])
         :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :        +- MultipleInput(readOrder=[0,1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], isBroadcast=[true], build=[left])\n:     :- [#1] Exchange(distribution=[broadcast])\n:     +- Calc(select=[y, X1])\n:        +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:           :- [#4] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:           +- [#5] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#3] Exchange(distribution=[broadcast])\n])
         :                 :           :- Exchange(distribution=[broadcast])
         :                 :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :                 :           :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :              :  +- Reused(reference_id=[1])
         :                 :           :              :- Exchange(distribution=[broadcast])
         :                 :           :              :  +- Calc(select=[X1, x])
         :                 :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :                 :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :                 :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :                 :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :                 :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[13])
         :                 :           :              :        :           :     :- Reused(reference_id=[1])
         :                 :           :              :        :           :     +- Reused(reference_id=[3])
         :                 :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[14])
         :                 :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :                 :           :              :        +- Reused(reference_id=[3])
         :                 :           :              :- Reused(reference_id=[4])
         :                 :           :              +- Reused(reference_id=[2])
         :                 :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :  +- Reused(reference_id=[1])
         :                 :           :- Exchange(distribution=[broadcast])
         :                 :           :  +- Calc(select=[X0, X1])
         :                 :           :     +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :           :        :- Reused(reference_id=[5])
         :                 :           :        +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :                 :           :           +- Reused(reference_id=[6])
         :                 :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :  +- Reused(reference_id=[1])
         :                 :           +- Exchange(distribution=[broadcast])
         :                 :              +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :                 :                 +- Exchange(distribution=[hash[X0, X1]])
         :                 :                    +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :                       +- Union(all=[true], union=[X0, X1])
         :                 :                          :- Calc(select=[x AS X0, x AS X1])(reuse_id=[17])
         :                 :                          :  +- Reused(reference_id=[7])
         :                 :                          +- Calc(select=[y0 AS X0, x AS X1])
         :                 :                             +- Reused(reference_id=[8])
         :                 +- Reused(reference_id=[9])
         :- Exchange(distribution=[broadcast])(reuse_id=[18])
         :  +- Reused(reference_id=[10])
         :- Reused(reference_id=[11])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X1, x AS x0])
         :              +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X00)], select=[X1, X00, x], isBroadcast=[true], build=[right])\n:- Calc(select=[X1, X00])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :                 :- Reused(reference_id=[9])
         :                 :- Reused(reference_id=[12])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Calc(select=[X0, X1])
         :                       +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
         :                          :  +- Exchange(distribution=[hash[X0, X1]])
         :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                          :        +- Union(all=[true], union=[X0, X1])
         :                          :           :- Calc(select=[x0 AS X0, y AS X1])
         :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :                          :           :     :- Calc(select=[y, x0])(reuse_id=[15])
         :                          :           :     :  +- Reused(reference_id=[13])
         :                          :           :     +- Reused(reference_id=[9])
         :                          :           +- Reused(reference_id=[14])
         :                          +- Reused(reference_id=[9])
         :- Exchange(distribution=[broadcast])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[20])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], isBroadcast=[true], build=[left])\n:        :- [#5] Exchange(distribution=[broadcast])\n:        +- Calc(select=[x, X0])\n:           +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:              :- [#6] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:              +- [#7] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[11])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[19])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[15])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[6])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[21])
         :              :                 :                 :- Reused(reference_id=[7])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[10])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[16])
         :              :                 :     +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[17])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[broadcast])
         :                 +- Reused(reference_id=[19])
         :- Reused(reference_id=[20])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[x, x0])
         :     +- Reused(reference_id=[21])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[broadcast])
         :  +- Calc(select=[X0, X10])
         :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])
         :        :- Exchange(distribution=[broadcast])
         :        :  +- Reused(reference_id=[22])
         :        +- Reused(reference_id=[23])
         :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         +- Exchange(distribution=[broadcast])
            +- Reused(reference_id=[12])

Job has been submitted with JobID 716896f3c85189ab3955389ead2d5539
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT r_0.x AS X0, p2_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0 INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x) UNION (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0 INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x) UNION (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1

------------> using sink uuid: 2480f942_fa30_4e9c_9e03_7422f92694bf

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT r_0.x AS X0, p2_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN a AS a_3 ON r_1.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0
                      INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0
                      INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalUnion(all=[false])
   :  :  :- LogicalUnion(all=[false])
   :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :  :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :  +- LogicalUnion(all=[false])
   :  :  :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :  :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :              +- LogicalUnion(all=[false])
   :  :  :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :  :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :  :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :              :  :- LogicalUnion(all=[false])
   :  :  :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :        +- LogicalUnion(all=[false])
   :  :  :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        +- LogicalUnion(all=[false])
   :  :  :        :  :  :           :- LogicalUnion(all=[false])
   :  :  :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :  :        :  :        :     :- LogicalUnion(all=[false])
   :  :  :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     +- LogicalJoin(condition=[=($5, $9)], joinType=[inner])
   :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalUnion(all=[false])
   :  :        :  :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :  :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalUnion(all=[false])
   :  :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     +- LogicalUnion(all=[false])
   :  :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     +- LogicalUnion(all=[false])
   :  :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :              +- LogicalUnion(all=[false])
   :  :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :  :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :           :  :- LogicalUnion(all=[false])
   :  :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     +- LogicalUnion(all=[false])
   :  :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :        +- LogicalUnion(all=[false])
   :  :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$7])
   :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalUnion(all=[false])
   :        :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalUnion(all=[false])
   :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :  +- LogicalUnion(all=[false])
   :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     +- LogicalUnion(all=[false])
   :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     +- LogicalUnion(all=[false])
   :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :              +- LogicalUnion(all=[false])
   :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :           :  :- LogicalUnion(all=[false])
   :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     +- LogicalUnion(all=[false])
   :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :        +- LogicalUnion(all=[false])
   :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$7])
      +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalProject(X0=[$3], X1=[$5])
            :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     :  +- LogicalUnion(all=[false])
            :     :     :- LogicalProject(X0=[$0], X1=[$0])
            :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :     :     +- LogicalProject(X0=[$1], X1=[$2])
            :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     +- LogicalUnion(all=[false])
            :        :- LogicalProject(X0=[$0], X1=[$5])
            :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalUnion(all=[false])
            :        :        :- LogicalProject(X0=[$0], X1=[$3])
            :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :        +- LogicalProject(X0=[$0], X1=[$0])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalProject(X0=[$0], X1=[$2])
            :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :              +- LogicalUnion(all=[false])
            :                 :- LogicalProject(X0=[$0], X1=[$3])
            :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalProject(X0=[$0], X1=[$0])
            :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$2], X1=[$1])
               +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$0], X1=[$5])
                  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalUnion(all=[false])
                  :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
                  :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
                  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$0], X1=[$2])
                  :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
                  :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
                  :  :        +- LogicalUnion(all=[false])
                  :  :           :- LogicalProject(X0=[$0], X1=[$3])
                  :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           +- LogicalProject(X0=[$0], X1=[$0])
                  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 104875.54816036184, cumulative cost = {2.914570631723051E8 rows, 8.4757031575097E9 cpu, 4.042225536E9 io, 1.0298446599925916E9 network, 6.620161743883364E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 104875.54816036184, cumulative cost = {2.9135218762414473E8 rows, 8.474025148739134E9 cpu, 4.042225536E9 io, 1.0298446599925916E9 network, 6.553041393060733E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 104875.54816036184, cumulative cost = {2.9124731207598436E8 rows, 8.45556705226291E9 cpu, 4.042225536E9 io, 1.0273276468367429E9 network, 6.553041393060733E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 578562.2765094797, cumulative cost = {2.91142436527824E8 rows, 8.446310055838758E9 cpu, 4.042225536E9 io, 1.0273276468367429E9 network, 6.485921042238102E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 550498.3095665164, cumulative cost = {2.3979969538720876E8 rows, 7.150099633952668E9 cpu, 3.322378884E9 io, 8.755574205835714E8 network, 5.3330338969428134E8 memory}
         :  :- Union(all=[true], union=[X0, X1]): rowcount = 478287.97406040406, cumulative cost = {1.8501724598310816E8 rows, 5.796799680851858E9 cpu, 2.547159132E9 io, 7.164636139419744E8 network, 4.1209612089390194E8 memory}
         :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 80281.60466489474, cumulative cost = {1.3808885642927116E8 rows, 4.589059663715315E9 cpu, 1.882678248E9 io, 5.723789721970937E8 network, 3.162163056231519E8 memory}
         :  :  :  :- Calc(select=[X0, X10 AS X1]): rowcount = 66928.35524274662, cumulative cost = {8.921967721672498E7 rows, 2.899239428895385E9 cpu, 1.21820004E9 io, 3.6016401762949324E8 network, 2.0020909595669687E8 memory}
         :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 66928.35524274662, cumulative cost = {8.915274886148223E7 rows, 2.899239428895385E9 cpu, 1.21820004E9 io, 3.6016401762949324E8 network, 2.0020909595669687E8 memory}
         :  :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 88967.96281432081, cumulative cost = {4.885063897185131E7 rows, 1.7039652886655567E9 cpu, 6.644739E8 io, 2.1434887287514418E8 network, 1.1600417446645501E8 memory}
         :  :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.876167100903699E7 rows, 1.6890186709127507E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1600417446645501E8 memory}
         :  :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 88967.96281432081, cumulative cost = {4.8672703046222664E7 rows, 1.6875951835077217E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1031022484633848E8 memory}
         :  :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.858373508340834E7 rows, 1.6719368220524013E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.1031022484633848E8 memory}
         :  :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 490805.6072666023, cumulative cost = {4.849476712059402E7 rows, 1.6640839323361356E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.0461627522622195E8 memory}
         :  :  :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 92805.83747645898, cumulative cost = {3.600674510913113E7 rows, 1.1723714832640958E9 cpu, 4.98353568E8 io, 1.461328865431288E8 network, 8.39236567636666E7 memory}
         :  :  :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :  :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :  :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :  :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :  :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :  :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :  :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :  :  :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :  :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :  :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :  :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :  :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :  :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :  :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :  :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :  :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :  :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :  :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :  :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :  :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :  :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :  :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :  :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :  :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :  :  :  :     :              :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :  :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :  :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :  :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :  :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :  :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :  :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :  :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :  :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :  :  :  :     :                       +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :  :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :  :  :  :     :                                +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :  :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :  :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :  :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :  :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :  :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :  :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :  :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :  :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 357221.0721373233, cumulative cost = {4.023518153438817E7 rows, 1.1917046279502146E9 cpu, 5.5372614E8 io, 1.4581514475434905E8 network, 7.92227155726399E7 memory}
         :  :  :  :        +- Calc(select=[x, X1]): rowcount = 357221.0721373233, cumulative cost = {3.987796046225084E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 357221.0721373233, cumulative cost = {3.952073939011352E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :  :  :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 74419.81424882227, cumulative cost = {3.454941031797619E7 rows, 7.250546253171537E8 cpu, 4.98356844E8 io, 8.18725430230533E7 network, 7.505520597470585E7 memory}
         :  :  :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :  :  :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :  :  :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :  :  :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :  :  :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :  :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :  :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :  :  :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :  :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :  :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :  :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :  :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :  :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :  :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :  :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :  :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :  :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :  :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :  :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :  :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :  :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :  :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :  :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :  :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :  :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :  :  :                             :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :  :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :  :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :  :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :  :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :  :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :  :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :  :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :  :  :  :                                      +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :  :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :  :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :  :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :  :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :  :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :  :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :  :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :  :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :  :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :  :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :  :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :  :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :  :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :  :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :  :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :  :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :  :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :  :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :  :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :  :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  +- Calc(select=[X0, x0 AS X1]): rowcount = 13353.249422148121, cumulative cost = {4.8788897607881285E7 rows, 1.6897399532152653E9 cpu, 6.64478208E8 io, 2.122149545676005E8 network, 1.1600720966645502E8 memory}
         :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 13353.249422148121, cumulative cost = {4.877554435845914E7 rows, 1.6897399532152653E9 cpu, 6.64478208E8 io, 2.122149545676005E8 network, 1.1600720966645502E8 memory}
         :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.876167100903699E7 rows, 1.6890186709127507E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1600417446645501E8 memory}
         :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 88967.96281432081, cumulative cost = {4.8672703046222664E7 rows, 1.6875951835077217E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1031022484633848E8 memory}
         :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.858373508340834E7 rows, 1.6719368220524013E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.1031022484633848E8 memory}
         :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 490805.6072666023, cumulative cost = {4.849476712059402E7 rows, 1.6640839323361356E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.0461627522622195E8 memory}
         :  :  :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 92805.83747645898, cumulative cost = {3.600674510913113E7 rows, 1.1723714832640958E9 cpu, 4.98353568E8 io, 1.461328865431288E8 network, 8.39236567636666E7 memory}
         :  :  :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :  :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :  :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :  :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :  :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :  :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :  :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :  :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :  :  :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :  :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :  :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :  :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :  :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :  :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :  :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :  :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :  :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :  :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :  :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :  :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :  :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :  :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :  :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :  :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :  :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :  :  :        :           :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :  :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :  :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :  :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :  :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :  :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :  :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :  :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :  :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :  :  :        :                    +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :  :  :        :                             +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :  :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :  :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :  :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :  :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :  :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :  :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :  :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :  :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :  :           +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  +- Calc(select=[x AS X0, X1]): rowcount = 398006.3693955093, cumulative cost = {4.645010157977658E7 rows, 1.2072617291624837E9 cpu, 6.64480884E8 io, 1.4408464174488074E8 network, 9.587981527075006E7 memory}
         :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 398006.3693955093, cumulative cost = {4.605209521038107E7 rows, 1.2072617291624837E9 cpu, 6.64480884E8 io, 1.4408464174488074E8 network, 9.587981527075006E7 memory}
         :  :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346321.7959700621, cumulative cost = {4.103998084098556E7 rows, 7.984496507947232E8 cpu, 6.09111588E8 io, 8.871534574488074E7 network, 7.648579469642659E7 memory}
         :  :           +- Calc(select=[x, X1]): rowcount = 346321.7959700621, cumulative cost = {4.06936590450155E7 rows, 7.402675890717527E8 cpu, 6.09111588E8 io, 8.040362264159924E7 network, 7.648579469642659E7 memory}
         :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 346321.7959700621, cumulative cost = {4.034733724904544E7 rows, 7.402675890717527E8 cpu, 6.09111588E8 io, 8.040362264159924E7 network, 7.648579469642659E7 memory}
         :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1757.9731337475419, cumulative cost = {3.769396145307538E7 rows, 7.217970932866827E8 cpu, 5.53742292E8 io, 8.040362264159924E7 network, 7.638734820093672E7 memory}
         :  :                    +- Calc(select=[X1, x AS x0]): rowcount = 1757.9731337475419, cumulative cost = {3.769220347994163E7 rows, 7.215158175852832E8 cpu, 5.53742292E8 io, 8.036143128638929E7 network, 7.638734820093672E7 memory}
         :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X00)], select=[X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 1757.9731337475419, cumulative cost = {3.769044550680788E7 rows, 7.215158175852832E8 cpu, 5.53742292E8 io, 8.036143128638929E7 network, 7.638734820093672E7 memory}
         :  :                          :- Calc(select=[X1, X00]): rowcount = 11383.820891650279, cumulative cost = {3.768801553367413E7 rows, 7.2136829901815E8 cpu, 5.5373826E8 io, 8.035739928638929E7 network, 7.637525220093672E7 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 11383.820891650279, cumulative cost = {3.767663171278248E7 rows, 7.2136829901815E8 cpu, 5.5373826E8 io, 8.035739928638929E7 network, 7.637525220093672E7 memory}
         :  :                          :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :  :                          :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :  :                          :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :  :                          :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :  :                          :     :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                          :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                          :     :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :  :                          :     :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                          :     :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                          :     :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                          :     :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                          :     :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                          :     :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                          :     :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                          :     :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                          :     :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                          :     :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                          :     :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                          :     :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                          :     :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                          :     :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                          :     :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                          :     :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                          :     :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                          :     :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                          :     :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :                          :     :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                          :     :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                          :     :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                          :     :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :                          :     :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :                          :     :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :                          :     :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :                          :     :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                          :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                          :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :  :                          :     :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                          :     :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                          :     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                          :     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                          :     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                          :     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                          :     :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                          :     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                          :     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                          :     :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                          :     :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                          :     :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                          :     :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                          :     :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                          :     :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                          :     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                          :     :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                          :     :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                          :     :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                          :     :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                          :     :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                          :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1472.3250288462589, cumulative cost = {3190257.3881634637 rows, 8209065.380577081 cpu, 5.5381416E7 io, 270931.80530771165 network, 1237596.0246154743 memory}
         :  :                          :        +- Calc(select=[X0, X1]): rowcount = 1472.3250288462589, cumulative cost = {3188785.0631346176 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
         :  :                          :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1472.3250288462589, cumulative cost = {3187312.7381057716 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
         :  :                          :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
         :  :                          :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
         :  :                          :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
         :  :                          :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
         :  :                          :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :                          :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :                          :              :           :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                          :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X10 AS X1]): rowcount = 72210.33550611239, cumulative cost = {5.4231951094534054E7 rows, 1.3527494547912436E9 cpu, 7.75219752E8 io, 1.5909380664159703E8 network, 1.2120726880037937E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 72210.33550611239, cumulative cost = {5.415974075902794E7 rows, 1.3527494547912436E9 cpu, 7.75219752E8 io, 1.5909380664159703E8 network, 1.2120726880037937E8 memory}
         :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[x]]): rowcount = 346523.68962741666, cumulative cost = {4.104867402270184E7 rows, 7.999212476612844E8 cpu, 6.09107556E8 io, 8.894063438175705E7 network, 7.699747413765949E7 memory}
         :           +- Calc(select=[x, X10]): rowcount = 346523.68962741666, cumulative cost = {4.070215033307442E7 rows, 7.417052678038784E8 cpu, 6.09107556E8 io, 8.062406583069906E7 network, 7.699747413765949E7 memory}
         :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right]): rowcount = 346523.68962741666, cumulative cost = {4.0355626643447004E7 rows, 7.417052678038784E8 cpu, 6.09107556E8 io, 8.062406583069906E7 network, 7.699747413765949E7 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 3103.93084944476, cumulative cost = {3.770204895381959E7 rows, 7.232240043570828E8 cpu, 5.5373826E8 io, 8.062406583069906E7 network, 7.682365401009059E7 memory}
         :                    +- Calc(select=[X0, X10]): rowcount = 3103.93084944476, cumulative cost = {3.769894502297014E7 rows, 7.227273754211717E8 cpu, 5.5373826E8 io, 8.054957149031238E7 network, 7.682365401009059E7 memory}
         :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 3103.93084944476, cumulative cost = {3.769584109212069E7 rows, 7.227273754211717E8 cpu, 5.5373826E8 io, 8.054957149031238E7 network, 7.682365401009059E7 memory}
         :                          :- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
         :                          :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
         :                          :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
         :                          :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
         :                          :           +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
         :                          :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                          :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                          :              :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                          :              :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                          :              :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                          :              :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                          :              :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                          :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                          :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                          :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                          +- Calc(select=[X0, X1]): rowcount = 11213.37213732334, cumulative cost = {3.4498089248002015E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
         :                             +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11213.37213732334, cumulative cost = {3.448687587586469E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
         :                                :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :                                :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :                                :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :                                :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :                                :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :                                :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :                                :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :                                :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :                                :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :                                :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :                                :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :                                :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :                                :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :                                :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :                                :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :                                :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :                                :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :                                :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :                                :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :                                :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :                                :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :                                :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :                                :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :                                :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :                                :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                                :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                                :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :                                :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :                                :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :                                :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                                :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :                                :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :                                :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :                                :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :                                :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :                                :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                                :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                                :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :                                :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :                                :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :                                :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :                                :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :                                :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :                                :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :                                :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :                                :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :                                :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :                                :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :                                :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :                                :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :                                :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :                                :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :                                :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :                                :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :                                :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :                                :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :                                :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :                                :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :                                :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :                                :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                                :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                                :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                                :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 28063.966942963358, cumulative cost = {5.076417886410572E7 rows, 1.2956318596095805E9 cpu, 7.19846652E8 io, 1.5177022625317144E8 network, 1.1528871452952889E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[right]): rowcount = 28063.966942963358, cumulative cost = {5.073611489716275E7 rows, 1.2956318596095805E9 cpu, 7.19846652E8 io, 1.5177022625317144E8 network, 1.1528871452952889E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 52214.56587308977, cumulative cost = {3.766919452939979E7 rows, 7.451581254696562E8 cpu, 5.53734456E8 io, 8.161705399333149E7 network, 7.570810281439595E7 memory}
                  +- Calc(select=[x, X1]): rowcount = 52214.56587308977, cumulative cost = {3.76169799635267E7 rows, 7.363860784029771E8 cpu, 5.53734456E8 io, 8.036390441237734E7 network, 7.570810281439595E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 52214.56587308977, cumulative cost = {3.756476539765362E7 rows, 7.363860784029771E8 cpu, 5.53734456E8 io, 8.036390441237734E7 network, 7.570810281439595E7 memory}
                        :- Calc(select=[x, X1]): rowcount = 347740.1058205985, cumulative cost = {3.751183683178053E7 rows, 7.335441815564123E8 cpu, 5.53730172E8 io, 8.035962041237734E7 network, 7.569525081439595E7 memory}
                        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347740.1058205985, cumulative cost = {3.7164096725959934E7 rows, 7.335441815564123E8 cpu, 5.53730172E8 io, 8.035962041237734E7 network, 7.569525081439595E7 memory}
                        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :     +- Exchange(distribution=[broadcast]): rowcount = 11213.37213732334, cumulative cost = {3.450930262013934E7 rows, 7.149980425793138E8 cpu, 4.98360876E8 io, 8.035962041237734E7 network, 7.506730197470585E7 memory}
                        :        +- Calc(select=[X0, X1]): rowcount = 11213.37213732334, cumulative cost = {3.4498089248002015E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11213.37213732334, cumulative cost = {3.448687587586469E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
                        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
                        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
                        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
                        :              :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :              :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
                        :              :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :              :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :              :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :              :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :              :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :              :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :              :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :              :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :              :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :              :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :              :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :              :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :              :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :              :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :              :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :              :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :              :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :              :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :              :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :              :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
                        :              :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :              :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :              :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :              :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
                        :              :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
                        :              :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
                        :              :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
                        :              :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
                        :              :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
                        :              :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :              :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :              :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :              :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :              :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :              :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :              :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :              :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :              :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :              :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :              :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :              :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :              :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :              :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :              :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :              :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :              :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :              :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :              :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :              :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :              :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X0, X10 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, x0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:  :  :        :- [#9] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#10] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[10])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[14])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y0])(reuse_id=[19])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[6])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:     :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[2])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])(reuse_id=[13])
         :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :- Exchange(distribution=[hash[X0]])
         :                 :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :                 :           :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :              :  +- Reused(reference_id=[1])
         :                 :           :              :- Exchange(distribution=[broadcast])
         :                 :           :              :  +- Calc(select=[X1, x])
         :                 :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :                 :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :                 :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :                 :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :                 :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :                 :           :              :        :           :     :- Reused(reference_id=[1])
         :                 :           :              :        :           :     +- Reused(reference_id=[3])
         :                 :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[12])
         :                 :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[8])
         :                 :           :              :        +- Reused(reference_id=[3])
         :                 :           :              :- Reused(reference_id=[4])
         :                 :           :              +- Reused(reference_id=[2])
         :                 :           :- Exchange(distribution=[hash[y]])
         :                 :           :  +- Calc(select=[y, X1])
         :                 :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :                 :           :        :- Exchange(distribution=[hash[x]])
         :                 :           :        :  +- Reused(reference_id=[1])
         :                 :           :        +- Exchange(distribution=[hash[X0]])
         :                 :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :                    +- Union(all=[true], union=[X0, X1])
         :                 :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :                 :           :                       :  +- Reused(reference_id=[5])
         :                 :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :                 :           :                          +- Reused(reference_id=[6])
         :                 :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :  +- Reused(reference_id=[1])
         :                 :           +- Exchange(distribution=[broadcast])
         :                 :              +- Calc(select=[X0, X1])
         :                 :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :                    :- Reused(reference_id=[7])
         :                 :                    +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :                 :                       +- Reused(reference_id=[8])
         :                 +- Reused(reference_id=[9])
         :- Reused(reference_id=[10])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X10])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X10])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])
         :                 :- Exchange(distribution=[broadcast])
         :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :                 :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           +- Union(all=[true], union=[X0, X1])
         :                 :              :- Calc(select=[x0 AS X0, y AS X1])
         :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :                 :              :     :- Calc(select=[y, x0])(reuse_id=[17])
         :                 :              :     :  +- Reused(reference_id=[11])
         :                 :              :     +- Reused(reference_id=[9])
         :                 :              +- Reused(reference_id=[12])
         :                 +- Reused(reference_id=[13])
         :- Reused(reference_id=[14])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X1, x AS x0])
         :              +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X00)], select=[X1, X00, x], isBroadcast=[true], build=[right])\n:- Calc(select=[X1, X00])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :                 :- Reused(reference_id=[9])
         :                 :- Reused(reference_id=[15])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Calc(select=[X0, X1])
         :                       +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                          :- Reused(reference_id=[16])
         :                          +- Reused(reference_id=[9])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[14])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[17])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[8])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[23])
         :              :                 :                 :- Reused(reference_id=[5])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Reused(reference_id=[21])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[14])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[15])
         :- Reused(reference_id=[22])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[23])

Job has been submitted with JobID d57be2e68054ec720f4554d16b85c250
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT r_0.x AS X0, p2_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0 INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x) UNION (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0 INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x) UNION (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: a4bad95a_f6bf_48ae_8f44_bb67ecde5e78

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT r_0.x AS X0, p2_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN a AS a_3 ON r_1.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0
                      INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0
                      INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalUnion(all=[false])
   :  :  :- LogicalUnion(all=[false])
   :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :  :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :  +- LogicalUnion(all=[false])
   :  :  :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :  :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :              +- LogicalUnion(all=[false])
   :  :  :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :  :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :  :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :              :  :- LogicalUnion(all=[false])
   :  :  :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :        +- LogicalUnion(all=[false])
   :  :  :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        +- LogicalUnion(all=[false])
   :  :  :        :  :  :           :- LogicalUnion(all=[false])
   :  :  :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :  :        :  :        :     :- LogicalUnion(all=[false])
   :  :  :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     +- LogicalJoin(condition=[=($5, $9)], joinType=[inner])
   :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalUnion(all=[false])
   :  :        :  :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :  :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalUnion(all=[false])
   :  :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     +- LogicalUnion(all=[false])
   :  :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     +- LogicalUnion(all=[false])
   :  :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :              +- LogicalUnion(all=[false])
   :  :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :  :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :           :  :- LogicalUnion(all=[false])
   :  :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     +- LogicalUnion(all=[false])
   :  :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :        +- LogicalUnion(all=[false])
   :  :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$7])
   :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalUnion(all=[false])
   :        :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalUnion(all=[false])
   :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :  +- LogicalUnion(all=[false])
   :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     +- LogicalUnion(all=[false])
   :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     +- LogicalUnion(all=[false])
   :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :              +- LogicalUnion(all=[false])
   :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :           :  :- LogicalUnion(all=[false])
   :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     +- LogicalUnion(all=[false])
   :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :        +- LogicalUnion(all=[false])
   :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$7])
      +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalProject(X0=[$3], X1=[$5])
            :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     :  +- LogicalUnion(all=[false])
            :     :     :- LogicalProject(X0=[$0], X1=[$0])
            :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :     :     +- LogicalProject(X0=[$1], X1=[$2])
            :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     +- LogicalUnion(all=[false])
            :        :- LogicalProject(X0=[$0], X1=[$5])
            :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalUnion(all=[false])
            :        :        :- LogicalProject(X0=[$0], X1=[$3])
            :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :        +- LogicalProject(X0=[$0], X1=[$0])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalProject(X0=[$0], X1=[$2])
            :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :              +- LogicalUnion(all=[false])
            :                 :- LogicalProject(X0=[$0], X1=[$3])
            :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalProject(X0=[$0], X1=[$0])
            :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$2], X1=[$1])
               +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$0], X1=[$5])
                  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalUnion(all=[false])
                  :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
                  :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
                  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$0], X1=[$2])
                  :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
                  :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
                  :  :        +- LogicalUnion(all=[false])
                  :  :           :- LogicalProject(X0=[$0], X1=[$3])
                  :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           +- LogicalProject(X0=[$0], X1=[$0])
                  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 104875.54816036184, cumulative cost = {2.914570631723051E8 rows, 8.4757031575097E9 cpu, 4.042225536E9 io, 1.0298446599925916E9 network, 6.620161743883364E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 104875.54816036184, cumulative cost = {2.9135218762414473E8 rows, 8.474025148739134E9 cpu, 4.042225536E9 io, 1.0298446599925916E9 network, 6.553041393060733E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 104875.54816036184, cumulative cost = {2.9124731207598436E8 rows, 8.45556705226291E9 cpu, 4.042225536E9 io, 1.0273276468367429E9 network, 6.553041393060733E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 578562.2765094797, cumulative cost = {2.91142436527824E8 rows, 8.446310055838758E9 cpu, 4.042225536E9 io, 1.0273276468367429E9 network, 6.485921042238102E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 550498.3095665164, cumulative cost = {2.3979969538720876E8 rows, 7.150099633952668E9 cpu, 3.322378884E9 io, 8.755574205835714E8 network, 5.3330338969428134E8 memory}
         :  :- Union(all=[true], union=[X0, X1]): rowcount = 478287.97406040406, cumulative cost = {1.8501724598310816E8 rows, 5.796799680851858E9 cpu, 2.547159132E9 io, 7.164636139419744E8 network, 4.1209612089390194E8 memory}
         :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 80281.60466489474, cumulative cost = {1.3808885642927116E8 rows, 4.589059663715315E9 cpu, 1.882678248E9 io, 5.723789721970937E8 network, 3.162163056231519E8 memory}
         :  :  :  :- Calc(select=[X0, X10 AS X1]): rowcount = 66928.35524274662, cumulative cost = {8.921967721672498E7 rows, 2.899239428895385E9 cpu, 1.21820004E9 io, 3.6016401762949324E8 network, 2.0020909595669687E8 memory}
         :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 66928.35524274662, cumulative cost = {8.915274886148223E7 rows, 2.899239428895385E9 cpu, 1.21820004E9 io, 3.6016401762949324E8 network, 2.0020909595669687E8 memory}
         :  :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 88967.96281432081, cumulative cost = {4.885063897185131E7 rows, 1.7039652886655567E9 cpu, 6.644739E8 io, 2.1434887287514418E8 network, 1.1600417446645501E8 memory}
         :  :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.876167100903699E7 rows, 1.6890186709127507E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1600417446645501E8 memory}
         :  :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 88967.96281432081, cumulative cost = {4.8672703046222664E7 rows, 1.6875951835077217E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1031022484633848E8 memory}
         :  :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.858373508340834E7 rows, 1.6719368220524013E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.1031022484633848E8 memory}
         :  :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 490805.6072666023, cumulative cost = {4.849476712059402E7 rows, 1.6640839323361356E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.0461627522622195E8 memory}
         :  :  :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 92805.83747645898, cumulative cost = {3.600674510913113E7 rows, 1.1723714832640958E9 cpu, 4.98353568E8 io, 1.461328865431288E8 network, 8.39236567636666E7 memory}
         :  :  :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :  :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :  :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :  :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :  :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :  :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :  :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :  :  :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :  :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :  :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :  :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :  :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :  :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :  :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :  :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :  :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :  :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :  :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :  :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :  :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :  :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :  :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :  :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :  :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :  :  :  :     :              :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :  :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :  :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :  :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :  :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :  :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :  :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :  :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :  :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :  :  :  :     :                       +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :  :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :  :  :  :     :                                +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :  :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :  :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :  :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :  :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :  :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :  :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :  :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :  :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 357221.0721373233, cumulative cost = {4.023518153438817E7 rows, 1.1917046279502146E9 cpu, 5.5372614E8 io, 1.4581514475434905E8 network, 7.92227155726399E7 memory}
         :  :  :  :        +- Calc(select=[x, X1]): rowcount = 357221.0721373233, cumulative cost = {3.987796046225084E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 357221.0721373233, cumulative cost = {3.952073939011352E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :  :  :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 74419.81424882227, cumulative cost = {3.454941031797619E7 rows, 7.250546253171537E8 cpu, 4.98356844E8 io, 8.18725430230533E7 network, 7.505520597470585E7 memory}
         :  :  :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :  :  :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :  :  :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :  :  :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :  :  :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :  :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :  :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :  :  :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :  :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :  :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :  :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :  :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :  :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :  :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :  :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :  :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :  :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :  :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :  :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :  :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :  :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :  :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :  :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :  :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :  :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :  :  :                             :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :  :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :  :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :  :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :  :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :  :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :  :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :  :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :  :  :  :                                      +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :  :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :  :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :  :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :  :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :  :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :  :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :  :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :  :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :  :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :  :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :  :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :  :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :  :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :  :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :  :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :  :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :  :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :  :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :  :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :  :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  +- Calc(select=[X0, x0 AS X1]): rowcount = 13353.249422148121, cumulative cost = {4.8788897607881285E7 rows, 1.6897399532152653E9 cpu, 6.64478208E8 io, 2.122149545676005E8 network, 1.1600720966645502E8 memory}
         :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 13353.249422148121, cumulative cost = {4.877554435845914E7 rows, 1.6897399532152653E9 cpu, 6.64478208E8 io, 2.122149545676005E8 network, 1.1600720966645502E8 memory}
         :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.876167100903699E7 rows, 1.6890186709127507E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1600417446645501E8 memory}
         :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 88967.96281432081, cumulative cost = {4.8672703046222664E7 rows, 1.6875951835077217E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1031022484633848E8 memory}
         :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.858373508340834E7 rows, 1.6719368220524013E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.1031022484633848E8 memory}
         :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 490805.6072666023, cumulative cost = {4.849476712059402E7 rows, 1.6640839323361356E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.0461627522622195E8 memory}
         :  :  :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 92805.83747645898, cumulative cost = {3.600674510913113E7 rows, 1.1723714832640958E9 cpu, 4.98353568E8 io, 1.461328865431288E8 network, 8.39236567636666E7 memory}
         :  :  :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :  :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :  :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :  :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :  :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :  :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :  :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :  :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :  :  :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :  :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :  :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :  :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :  :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :  :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :  :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :  :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :  :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :  :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :  :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :  :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :  :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :  :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :  :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :  :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :  :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :  :  :        :           :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :  :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :  :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :  :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :  :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :  :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :  :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :  :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :  :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :  :  :        :                    +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :  :  :        :                             +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :  :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :  :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :  :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :  :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :  :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :  :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :  :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :  :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :  :           +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  +- Calc(select=[x AS X0, X1]): rowcount = 398006.3693955093, cumulative cost = {4.645010157977658E7 rows, 1.2072617291624837E9 cpu, 6.64480884E8 io, 1.4408464174488074E8 network, 9.587981527075006E7 memory}
         :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 398006.3693955093, cumulative cost = {4.605209521038107E7 rows, 1.2072617291624837E9 cpu, 6.64480884E8 io, 1.4408464174488074E8 network, 9.587981527075006E7 memory}
         :  :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346321.7959700621, cumulative cost = {4.103998084098556E7 rows, 7.984496507947232E8 cpu, 6.09111588E8 io, 8.871534574488074E7 network, 7.648579469642659E7 memory}
         :  :           +- Calc(select=[x, X1]): rowcount = 346321.7959700621, cumulative cost = {4.06936590450155E7 rows, 7.402675890717527E8 cpu, 6.09111588E8 io, 8.040362264159924E7 network, 7.648579469642659E7 memory}
         :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 346321.7959700621, cumulative cost = {4.034733724904544E7 rows, 7.402675890717527E8 cpu, 6.09111588E8 io, 8.040362264159924E7 network, 7.648579469642659E7 memory}
         :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1757.9731337475419, cumulative cost = {3.769396145307538E7 rows, 7.217970932866827E8 cpu, 5.53742292E8 io, 8.040362264159924E7 network, 7.638734820093672E7 memory}
         :  :                    +- Calc(select=[X1, x AS x0]): rowcount = 1757.9731337475419, cumulative cost = {3.769220347994163E7 rows, 7.215158175852832E8 cpu, 5.53742292E8 io, 8.036143128638929E7 network, 7.638734820093672E7 memory}
         :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X00)], select=[X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 1757.9731337475419, cumulative cost = {3.769044550680788E7 rows, 7.215158175852832E8 cpu, 5.53742292E8 io, 8.036143128638929E7 network, 7.638734820093672E7 memory}
         :  :                          :- Calc(select=[X1, X00]): rowcount = 11383.820891650279, cumulative cost = {3.768801553367413E7 rows, 7.2136829901815E8 cpu, 5.5373826E8 io, 8.035739928638929E7 network, 7.637525220093672E7 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 11383.820891650279, cumulative cost = {3.767663171278248E7 rows, 7.2136829901815E8 cpu, 5.5373826E8 io, 8.035739928638929E7 network, 7.637525220093672E7 memory}
         :  :                          :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :  :                          :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :  :                          :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :  :                          :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :  :                          :     :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                          :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                          :     :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :  :                          :     :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                          :     :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                          :     :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                          :     :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                          :     :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                          :     :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                          :     :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                          :     :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                          :     :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                          :     :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                          :     :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                          :     :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                          :     :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                          :     :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                          :     :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                          :     :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                          :     :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                          :     :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                          :     :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :                          :     :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                          :     :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                          :     :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                          :     :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :                          :     :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :                          :     :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :                          :     :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :                          :     :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                          :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                          :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :  :                          :     :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                          :     :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                          :     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                          :     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                          :     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                          :     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                          :     :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                          :     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                          :     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                          :     :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                          :     :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                          :     :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                          :     :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                          :     :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                          :     :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                          :     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                          :     :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                          :     :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                          :     :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                          :     :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                          :     :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                          :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1472.3250288462589, cumulative cost = {3190257.3881634637 rows, 8209065.380577081 cpu, 5.5381416E7 io, 270931.80530771165 network, 1237596.0246154743 memory}
         :  :                          :        +- Calc(select=[X0, X1]): rowcount = 1472.3250288462589, cumulative cost = {3188785.0631346176 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
         :  :                          :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1472.3250288462589, cumulative cost = {3187312.7381057716 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
         :  :                          :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
         :  :                          :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
         :  :                          :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
         :  :                          :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
         :  :                          :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :                          :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :                          :              :           :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                          :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X10 AS X1]): rowcount = 72210.33550611239, cumulative cost = {5.4231951094534054E7 rows, 1.3527494547912436E9 cpu, 7.75219752E8 io, 1.5909380664159703E8 network, 1.2120726880037937E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 72210.33550611239, cumulative cost = {5.415974075902794E7 rows, 1.3527494547912436E9 cpu, 7.75219752E8 io, 1.5909380664159703E8 network, 1.2120726880037937E8 memory}
         :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[x]]): rowcount = 346523.68962741666, cumulative cost = {4.104867402270184E7 rows, 7.999212476612844E8 cpu, 6.09107556E8 io, 8.894063438175705E7 network, 7.699747413765949E7 memory}
         :           +- Calc(select=[x, X10]): rowcount = 346523.68962741666, cumulative cost = {4.070215033307442E7 rows, 7.417052678038784E8 cpu, 6.09107556E8 io, 8.062406583069906E7 network, 7.699747413765949E7 memory}
         :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right]): rowcount = 346523.68962741666, cumulative cost = {4.0355626643447004E7 rows, 7.417052678038784E8 cpu, 6.09107556E8 io, 8.062406583069906E7 network, 7.699747413765949E7 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 3103.93084944476, cumulative cost = {3.770204895381959E7 rows, 7.232240043570828E8 cpu, 5.5373826E8 io, 8.062406583069906E7 network, 7.682365401009059E7 memory}
         :                    +- Calc(select=[X0, X10]): rowcount = 3103.93084944476, cumulative cost = {3.769894502297014E7 rows, 7.227273754211717E8 cpu, 5.5373826E8 io, 8.054957149031238E7 network, 7.682365401009059E7 memory}
         :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 3103.93084944476, cumulative cost = {3.769584109212069E7 rows, 7.227273754211717E8 cpu, 5.5373826E8 io, 8.054957149031238E7 network, 7.682365401009059E7 memory}
         :                          :- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
         :                          :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
         :                          :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
         :                          :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
         :                          :           +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
         :                          :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                          :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                          :              :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                          :              :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                          :              :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                          :              :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                          :              :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                          :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                          :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                          :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                          +- Calc(select=[X0, X1]): rowcount = 11213.37213732334, cumulative cost = {3.4498089248002015E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
         :                             +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11213.37213732334, cumulative cost = {3.448687587586469E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
         :                                :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :                                :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :                                :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :                                :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :                                :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :                                :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :                                :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :                                :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :                                :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :                                :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :                                :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :                                :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :                                :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :                                :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :                                :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :                                :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :                                :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :                                :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :                                :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :                                :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :                                :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :                                :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :                                :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :                                :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :                                :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                                :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                                :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :                                :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :                                :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :                                :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                                :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :                                :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :                                :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :                                :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :                                :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :                                :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                                :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                                :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :                                :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :                                :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :                                :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :                                :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :                                :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :                                :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :                                :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :                                :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :                                :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :                                :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :                                :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :                                :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :                                :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :                                :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :                                :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :                                :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :                                :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :                                :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :                                :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :                                :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :                                :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :                                :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                                :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                                :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                                :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 28063.966942963358, cumulative cost = {5.076417886410572E7 rows, 1.2956318596095805E9 cpu, 7.19846652E8 io, 1.5177022625317144E8 network, 1.1528871452952889E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[right]): rowcount = 28063.966942963358, cumulative cost = {5.073611489716275E7 rows, 1.2956318596095805E9 cpu, 7.19846652E8 io, 1.5177022625317144E8 network, 1.1528871452952889E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 52214.56587308977, cumulative cost = {3.766919452939979E7 rows, 7.451581254696562E8 cpu, 5.53734456E8 io, 8.161705399333149E7 network, 7.570810281439595E7 memory}
                  +- Calc(select=[x, X1]): rowcount = 52214.56587308977, cumulative cost = {3.76169799635267E7 rows, 7.363860784029771E8 cpu, 5.53734456E8 io, 8.036390441237734E7 network, 7.570810281439595E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 52214.56587308977, cumulative cost = {3.756476539765362E7 rows, 7.363860784029771E8 cpu, 5.53734456E8 io, 8.036390441237734E7 network, 7.570810281439595E7 memory}
                        :- Calc(select=[x, X1]): rowcount = 347740.1058205985, cumulative cost = {3.751183683178053E7 rows, 7.335441815564123E8 cpu, 5.53730172E8 io, 8.035962041237734E7 network, 7.569525081439595E7 memory}
                        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347740.1058205985, cumulative cost = {3.7164096725959934E7 rows, 7.335441815564123E8 cpu, 5.53730172E8 io, 8.035962041237734E7 network, 7.569525081439595E7 memory}
                        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :     +- Exchange(distribution=[broadcast]): rowcount = 11213.37213732334, cumulative cost = {3.450930262013934E7 rows, 7.149980425793138E8 cpu, 4.98360876E8 io, 8.035962041237734E7 network, 7.506730197470585E7 memory}
                        :        +- Calc(select=[X0, X1]): rowcount = 11213.37213732334, cumulative cost = {3.4498089248002015E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11213.37213732334, cumulative cost = {3.448687587586469E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
                        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
                        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
                        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
                        :              :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :              :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
                        :              :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :              :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :              :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :              :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :              :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :              :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :              :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :              :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :              :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :              :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :              :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :              :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :              :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :              :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :              :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :              :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :              :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :              :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :              :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :              :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
                        :              :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :              :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :              :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :              :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
                        :              :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
                        :              :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
                        :              :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
                        :              :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
                        :              :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
                        :              :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :              :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :              :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :              :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :              :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :              :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :              :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :              :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :              :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :              :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :              :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :              :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :              :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :              :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :              :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :              :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :              :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :              :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :              :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :              :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :              :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X0, X10 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, x0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:  :  :        :- [#9] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#10] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[10])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[14])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y0])(reuse_id=[19])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[6])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:     :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[2])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])(reuse_id=[13])
         :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :- Exchange(distribution=[hash[X0]])
         :                 :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :                 :           :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :              :  +- Reused(reference_id=[1])
         :                 :           :              :- Exchange(distribution=[broadcast])
         :                 :           :              :  +- Calc(select=[X1, x])
         :                 :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :                 :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :                 :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :                 :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :                 :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :                 :           :              :        :           :     :- Reused(reference_id=[1])
         :                 :           :              :        :           :     +- Reused(reference_id=[3])
         :                 :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[12])
         :                 :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[8])
         :                 :           :              :        +- Reused(reference_id=[3])
         :                 :           :              :- Reused(reference_id=[4])
         :                 :           :              +- Reused(reference_id=[2])
         :                 :           :- Exchange(distribution=[hash[y]])
         :                 :           :  +- Calc(select=[y, X1])
         :                 :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :                 :           :        :- Exchange(distribution=[hash[x]])
         :                 :           :        :  +- Reused(reference_id=[1])
         :                 :           :        +- Exchange(distribution=[hash[X0]])
         :                 :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :                    +- Union(all=[true], union=[X0, X1])
         :                 :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :                 :           :                       :  +- Reused(reference_id=[5])
         :                 :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :                 :           :                          +- Reused(reference_id=[6])
         :                 :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :  +- Reused(reference_id=[1])
         :                 :           +- Exchange(distribution=[broadcast])
         :                 :              +- Calc(select=[X0, X1])
         :                 :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :                    :- Reused(reference_id=[7])
         :                 :                    +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :                 :                       +- Reused(reference_id=[8])
         :                 +- Reused(reference_id=[9])
         :- Reused(reference_id=[10])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X10])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X10])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])
         :                 :- Exchange(distribution=[broadcast])
         :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :                 :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           +- Union(all=[true], union=[X0, X1])
         :                 :              :- Calc(select=[x0 AS X0, y AS X1])
         :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :                 :              :     :- Calc(select=[y, x0])(reuse_id=[17])
         :                 :              :     :  +- Reused(reference_id=[11])
         :                 :              :     +- Reused(reference_id=[9])
         :                 :              +- Reused(reference_id=[12])
         :                 +- Reused(reference_id=[13])
         :- Reused(reference_id=[14])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X1, x AS x0])
         :              +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X00)], select=[X1, X00, x], isBroadcast=[true], build=[right])\n:- Calc(select=[X1, X00])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :                 :- Reused(reference_id=[9])
         :                 :- Reused(reference_id=[15])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Calc(select=[X0, X1])
         :                       +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                          :- Reused(reference_id=[16])
         :                          +- Reused(reference_id=[9])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[14])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[17])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[8])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[23])
         :              :                 :                 :- Reused(reference_id=[5])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Reused(reference_id=[21])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[14])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[15])
         :- Reused(reference_id=[22])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[23])

Job has been submitted with JobID e5a94b8507c4f1b9df2d80afa01780cd
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT r_0.x AS X0, p2_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0 INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x) UNION (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0 INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x) UNION (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: d07dce21_89a5_4e1d_9937_a2950092e095

Adding statistics for table s number 5 
Adding statistics for table a number 5 
Adding statistics for table b number 5 
Adding statistics for table r number 5 
Adding statistics for table t number 5 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT r_0.x AS X0, p2_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN a AS a_3 ON r_1.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0
                      INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0
                      INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalUnion(all=[false])
   :  :  :- LogicalUnion(all=[false])
   :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :  :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :  +- LogicalUnion(all=[false])
   :  :  :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :  :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :              +- LogicalUnion(all=[false])
   :  :  :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :  :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :  :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :              :  :- LogicalUnion(all=[false])
   :  :  :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :        +- LogicalUnion(all=[false])
   :  :  :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        +- LogicalUnion(all=[false])
   :  :  :        :  :  :           :- LogicalUnion(all=[false])
   :  :  :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :  :        :  :        :     :- LogicalUnion(all=[false])
   :  :  :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     +- LogicalJoin(condition=[=($5, $9)], joinType=[inner])
   :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalUnion(all=[false])
   :  :        :  :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :  :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalUnion(all=[false])
   :  :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     +- LogicalUnion(all=[false])
   :  :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     +- LogicalUnion(all=[false])
   :  :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :              +- LogicalUnion(all=[false])
   :  :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :  :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :           :  :- LogicalUnion(all=[false])
   :  :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     +- LogicalUnion(all=[false])
   :  :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :        +- LogicalUnion(all=[false])
   :  :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$7])
   :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalUnion(all=[false])
   :        :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalUnion(all=[false])
   :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :  +- LogicalUnion(all=[false])
   :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     +- LogicalUnion(all=[false])
   :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     +- LogicalUnion(all=[false])
   :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :              +- LogicalUnion(all=[false])
   :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :           :  :- LogicalUnion(all=[false])
   :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     +- LogicalUnion(all=[false])
   :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :        +- LogicalUnion(all=[false])
   :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$7])
      +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalProject(X0=[$3], X1=[$5])
            :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     :  +- LogicalUnion(all=[false])
            :     :     :- LogicalProject(X0=[$0], X1=[$0])
            :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :     :     +- LogicalProject(X0=[$1], X1=[$2])
            :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     +- LogicalUnion(all=[false])
            :        :- LogicalProject(X0=[$0], X1=[$5])
            :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalUnion(all=[false])
            :        :        :- LogicalProject(X0=[$0], X1=[$3])
            :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :        +- LogicalProject(X0=[$0], X1=[$0])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalProject(X0=[$0], X1=[$2])
            :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :              +- LogicalUnion(all=[false])
            :                 :- LogicalProject(X0=[$0], X1=[$3])
            :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalProject(X0=[$0], X1=[$0])
            :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$2], X1=[$1])
               +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$0], X1=[$5])
                  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalUnion(all=[false])
                  :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
                  :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
                  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$0], X1=[$2])
                  :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
                  :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
                  :  :        +- LogicalUnion(all=[false])
                  :  :           :- LogicalProject(X0=[$0], X1=[$3])
                  :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           +- LogicalProject(X0=[$0], X1=[$0])
                  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 104875.54816036184, cumulative cost = {2.914570631723051E8 rows, 8.4757031575097E9 cpu, 4.042225536E9 io, 1.0298446599925916E9 network, 6.620161743883364E8 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 104875.54816036184, cumulative cost = {2.9135218762414473E8 rows, 8.474025148739134E9 cpu, 4.042225536E9 io, 1.0298446599925916E9 network, 6.553041393060733E8 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 104875.54816036184, cumulative cost = {2.9124731207598436E8 rows, 8.45556705226291E9 cpu, 4.042225536E9 io, 1.0273276468367429E9 network, 6.553041393060733E8 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 578562.2765094797, cumulative cost = {2.91142436527824E8 rows, 8.446310055838758E9 cpu, 4.042225536E9 io, 1.0273276468367429E9 network, 6.485921042238102E8 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 550498.3095665164, cumulative cost = {2.3979969538720876E8 rows, 7.150099633952668E9 cpu, 3.322378884E9 io, 8.755574205835714E8 network, 5.3330338969428134E8 memory}
         :  :- Union(all=[true], union=[X0, X1]): rowcount = 478287.97406040406, cumulative cost = {1.8501724598310816E8 rows, 5.796799680851858E9 cpu, 2.547159132E9 io, 7.164636139419744E8 network, 4.1209612089390194E8 memory}
         :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 80281.60466489474, cumulative cost = {1.3808885642927116E8 rows, 4.589059663715315E9 cpu, 1.882678248E9 io, 5.723789721970937E8 network, 3.162163056231519E8 memory}
         :  :  :  :- Calc(select=[X0, X10 AS X1]): rowcount = 66928.35524274662, cumulative cost = {8.921967721672498E7 rows, 2.899239428895385E9 cpu, 1.21820004E9 io, 3.6016401762949324E8 network, 2.0020909595669687E8 memory}
         :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 66928.35524274662, cumulative cost = {8.915274886148223E7 rows, 2.899239428895385E9 cpu, 1.21820004E9 io, 3.6016401762949324E8 network, 2.0020909595669687E8 memory}
         :  :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 88967.96281432081, cumulative cost = {4.885063897185131E7 rows, 1.7039652886655567E9 cpu, 6.644739E8 io, 2.1434887287514418E8 network, 1.1600417446645501E8 memory}
         :  :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.876167100903699E7 rows, 1.6890186709127507E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1600417446645501E8 memory}
         :  :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 88967.96281432081, cumulative cost = {4.8672703046222664E7 rows, 1.6875951835077217E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1031022484633848E8 memory}
         :  :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.858373508340834E7 rows, 1.6719368220524013E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.1031022484633848E8 memory}
         :  :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 490805.6072666023, cumulative cost = {4.849476712059402E7 rows, 1.6640839323361356E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.0461627522622195E8 memory}
         :  :  :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 92805.83747645898, cumulative cost = {3.600674510913113E7 rows, 1.1723714832640958E9 cpu, 4.98353568E8 io, 1.461328865431288E8 network, 8.39236567636666E7 memory}
         :  :  :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :  :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :  :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :  :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :  :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :  :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :  :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :  :  :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :  :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :  :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :  :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :  :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :  :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :  :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :  :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :  :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :  :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :  :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :  :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :  :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :  :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :  :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :  :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :  :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :  :  :  :     :              :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :  :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :  :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :  :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :  :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :  :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :  :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :  :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :  :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :  :  :  :     :                       +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :  :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :  :  :  :     :                                +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :  :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :  :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :  :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :  :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :  :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :  :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :  :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :  :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 357221.0721373233, cumulative cost = {4.023518153438817E7 rows, 1.1917046279502146E9 cpu, 5.5372614E8 io, 1.4581514475434905E8 network, 7.92227155726399E7 memory}
         :  :  :  :        +- Calc(select=[x, X1]): rowcount = 357221.0721373233, cumulative cost = {3.987796046225084E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 357221.0721373233, cumulative cost = {3.952073939011352E7 rows, 1.1316914878311443E9 cpu, 5.5372614E8 io, 1.372418390230533E8 network, 7.92227155726399E7 memory}
         :  :  :  :              :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 74419.81424882227, cumulative cost = {3.454941031797619E7 rows, 7.250546253171537E8 cpu, 4.98356844E8 io, 8.18725430230533E7 network, 7.505520597470585E7 memory}
         :  :  :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :  :  :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :  :  :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :  :  :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :  :  :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :  :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :  :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :  :  :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :  :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :  :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :  :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :  :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :  :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :  :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :  :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :  :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :  :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :  :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :  :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :  :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :  :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :  :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :  :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :  :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :  :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :  :  :                             :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :  :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :  :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :  :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :  :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :  :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :  :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :  :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :  :  :  :                                      +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :  :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :  :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :  :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :  :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :  :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :  :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :  :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :  :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :  :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :  :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :  :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :  :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :  :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :  :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :  :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :  :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :  :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :  :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :  :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :  :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :  +- Calc(select=[X0, x0 AS X1]): rowcount = 13353.249422148121, cumulative cost = {4.8788897607881285E7 rows, 1.6897399532152653E9 cpu, 6.64478208E8 io, 2.122149545676005E8 network, 1.1600720966645502E8 memory}
         :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 13353.249422148121, cumulative cost = {4.877554435845914E7 rows, 1.6897399532152653E9 cpu, 6.64478208E8 io, 2.122149545676005E8 network, 1.1600720966645502E8 memory}
         :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.876167100903699E7 rows, 1.6890186709127507E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1600417446645501E8 memory}
         :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 88967.96281432081, cumulative cost = {4.8672703046222664E7 rows, 1.6875951835077217E9 cpu, 6.644739E8 io, 2.1221364176760048E8 network, 1.1031022484633848E8 memory}
         :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 88967.96281432081, cumulative cost = {4.858373508340834E7 rows, 1.6719368220524013E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.1031022484633848E8 memory}
         :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 490805.6072666023, cumulative cost = {4.849476712059402E7 rows, 1.6640839323361356E9 cpu, 6.644739E8 io, 2.1007841066005677E8 network, 1.0461627522622195E8 memory}
         :  :  :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 92805.83747645898, cumulative cost = {3.600674510913113E7 rows, 1.1723714832640958E9 cpu, 4.98353568E8 io, 1.461328865431288E8 network, 8.39236567636666E7 memory}
         :  :  :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 20453.201813503878, cumulative cost = {1.6135322648430951E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :  :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20453.201813503878, cumulative cost = {1.6114869446617447E7 rows, 5.3562624728160864E8 cpu, 2.21494368E8 io, 6.718771935843153E7 network, 3.7978927764246285E7 memory}
         :  :  :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :  :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :  :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :  :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :  :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :  :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1476.1316766932337, cumulative cost = {3190438.391063945 rows, 8218016.524695228 cpu, 5.5382172E7 io, 271632.228511555 network, 1239668.3641115595 memory}
         :  :  :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 1476.1316766932337, cumulative cost = {3188962.2593872515 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :  :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1476.1316766932337, cumulative cost = {3187486.127710558 rows, 7981835.456424311 cpu, 5.5382172E7 io, 236205.0682709174 network, 1239668.3641115595 memory}
         :  :  :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3185295.9960338646 rows, 7845988.433667338 cpu, 5.5377888E7 io, 231921.0682709174 network, 1226816.3641115595 memory}
         :  :  :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9483.877844621558, cumulative cost = {3175812.118189243 rows, 7694246.388153394 cpu, 5.5377888E7 io, 231921.0682709174 network, 619848.1820557797 memory}
         :  :  :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9483.877844621558, cumulative cost = {3166328.2403446217 rows, 6025083.887499999 cpu, 5.5377888E7 io, 4308.0 network, 619848.1820557797 memory}
         :  :  :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52319.2875, cumulative cost = {3156844.3625000003 rows, 5187975.2875 cpu, 5.5377888E7 io, 4308.0 network, 12880.0 memory}
         :  :  :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51962.2875, cumulative cost = {3103811.075 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :  :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 51962.2875, cumulative cost = {3051848.7875 rows, 5135656.0 cpu, 5.5373604E7 io, 4308.0 network, 12880.0 memory}
         :  :  :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 72352.6356629551, cumulative cost = {1.977861662322372E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :  :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 72352.6356629551, cumulative cost = {1.9706263987560764E7 rows, 6.366524301450107E8 cpu, 2.768592E8 io, 7.894516718469727E7 network, 4.594472899942032E7 memory}
         :  :  :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :  :  :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :  :  :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :  :  :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :  :  :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :  :  :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :  :  :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :  :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :  :  :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :  :  :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 347472.35733970144, cumulative cost = {6595054.951077811 rows, 8.381663367335334E7 cpu, 1.10747004E8 io, 8791994.924857302 network, 1734934.3367004544 memory}
         :  :  :        :           :           +- Calc(select=[x, X0]): rowcount = 347472.35733970144, cumulative cost = {6247582.59373811 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :  :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347472.35733970144, cumulative cost = {5900110.236398408 rows, 2.54412776402835E7 cpu, 1.10747004E8 io, 452658.34870446636 network, 1734934.3367004544 memory}
         :  :  :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 9428.382264676382, cumulative cost = {3245583.8790587066 rows, 6909418.582166087 cpu, 5.5377708E7 io, 452658.34870446636 network, 1206944.929878577 memory}
         :  :  :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :  :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :  :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :  :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :  :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :  :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 397999.7697901433, cumulative cost = {1.1997216404196285E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 397999.7697901433, cumulative cost = {1.1599216634406142E7 rows, 4.9122164346477324E8 cpu, 1.66120332E8 io, 6.3945524116928E7 network, 2.069261846255535E7 memory}
         :  :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 346277.7986009552, cumulative cost = {6587108.864615999 rows, 8.24099170759656E7 cpu, 1.10751036E8 io, 8576228.116927994 network, 1301061.7409018585 memory}
         :  :  :        :                    +- Calc(select=[x, X0]): rowcount = 346277.7986009552, cumulative cost = {6240831.066015044 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 346277.7986009552, cumulative cost = {5894553.267414089 rows, 2.423524691100512E7 cpu, 1.10751036E8 io, 265560.9505050682 network, 1301061.7409018585 memory}
         :  :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 1464.6573397014572, cumulative cost = {3241221.4688131344 rows, 5767097.65228751 cpu, 5.538174E7 io, 265560.9505050682 network, 1219040.929878577 memory}
         :  :  :        :                             +- Calc(select=[X0, X1]): rowcount = 1464.6573397014572, cumulative cost = {3239756.811473433 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :  :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1464.6573397014572, cumulative cost = {3238292.1541337315 rows, 5532752.477935277 cpu, 5.538174E7 io, 230409.17435223318 network, 1219040.929878577 memory}
         :  :  :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3236155.49679403 rows, 5400877.419817866 cpu, 5.5377708E7 io, 226377.17435223318 network, 1206944.929878577 memory}
         :  :  :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9428.382264676382, cumulative cost = {3226727.1145293536 rows, 5250023.303583044 cpu, 5.5377708E7 io, 226377.17435223318 network, 603528.4649392884 memory}
         :  :  :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9428.382264676382, cumulative cost = {3217298.732264677 rows, 3590628.0250000004 cpu, 5.5377708E7 io, 96.0 network, 603528.4649392884 memory}
         :  :  :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 52013.1375, cumulative cost = {3207870.3500000006 rows, 2758417.825 cpu, 5.5377708E7 io, 96.0 network, 112.0 memory}
         :  :  :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 51959.4375, cumulative cost = {3155390.8125000005 rows, 2705887.6875 cpu, 5.53734E7 io, 72.0 network, 84.0 memory}
         :  :  :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 51908.8875, cumulative cost = {3102992.2750000004 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 51908.8875, cumulative cost = {3051083.3875 rows, 2653432.25 cpu, 5.5369344E7 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 50.55, cumulative cost = {439.1 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 50.55, cumulative cost = {388.55 rows, 496.0 cpu, 4056.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :  :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 53.699999999999996, cumulative cost = {520.1 rows, 9109.0 cpu, 4308.0 io, 1312.8 network, 28.0 memory}
         :  :  :           +- Calc(select=[x, x0]): rowcount = 53.699999999999996, cumulative cost = {466.4 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 53.699999999999996, cumulative cost = {412.7 rows, 517.0 cpu, 4308.0 io, 24.0 network, 28.0 memory}
         :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  +- Calc(select=[x AS X0, X1]): rowcount = 398006.3693955093, cumulative cost = {4.645010157977658E7 rows, 1.2072617291624837E9 cpu, 6.64480884E8 io, 1.4408464174488074E8 network, 9.587981527075006E7 memory}
         :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 398006.3693955093, cumulative cost = {4.605209521038107E7 rows, 1.2072617291624837E9 cpu, 6.64480884E8 io, 1.4408464174488074E8 network, 9.587981527075006E7 memory}
         :  :        :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :        +- Exchange(distribution=[hash[x]]): rowcount = 346321.7959700621, cumulative cost = {4.103998084098556E7 rows, 7.984496507947232E8 cpu, 6.09111588E8 io, 8.871534574488074E7 network, 7.648579469642659E7 memory}
         :  :           +- Calc(select=[x, X1]): rowcount = 346321.7959700621, cumulative cost = {4.06936590450155E7 rows, 7.402675890717527E8 cpu, 6.09111588E8 io, 8.040362264159924E7 network, 7.648579469642659E7 memory}
         :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 346321.7959700621, cumulative cost = {4.034733724904544E7 rows, 7.402675890717527E8 cpu, 6.09111588E8 io, 8.040362264159924E7 network, 7.648579469642659E7 memory}
         :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1757.9731337475419, cumulative cost = {3.769396145307538E7 rows, 7.217970932866827E8 cpu, 5.53742292E8 io, 8.040362264159924E7 network, 7.638734820093672E7 memory}
         :  :                    +- Calc(select=[X1, x AS x0]): rowcount = 1757.9731337475419, cumulative cost = {3.769220347994163E7 rows, 7.215158175852832E8 cpu, 5.53742292E8 io, 8.036143128638929E7 network, 7.638734820093672E7 memory}
         :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X00)], select=[X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 1757.9731337475419, cumulative cost = {3.769044550680788E7 rows, 7.215158175852832E8 cpu, 5.53742292E8 io, 8.036143128638929E7 network, 7.638734820093672E7 memory}
         :  :                          :- Calc(select=[X1, X00]): rowcount = 11383.820891650279, cumulative cost = {3.768801553367413E7 rows, 7.2136829901815E8 cpu, 5.5373826E8 io, 8.035739928638929E7 network, 7.637525220093672E7 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 11383.820891650279, cumulative cost = {3.767663171278248E7 rows, 7.2136829901815E8 cpu, 5.5373826E8 io, 8.035739928638929E7 network, 7.637525220093672E7 memory}
         :  :                          :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :  :                          :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :  :                          :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :  :                          :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :  :                          :     :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                          :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :  :                          :     :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :  :                          :     :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                          :     :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                          :     :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                          :     :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                          :     :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                          :     :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                          :     :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                          :     :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                          :     :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                          :     :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                          :     :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                          :     :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                          :     :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                          :     :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                          :     :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                          :     :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                          :     :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                          :     :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                          :     :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :  :                          :     :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                          :     :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :  :                          :     :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :  :                          :     :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :  :                          :     :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :  :                          :     :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :  :                          :     :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :  :                          :     :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                          :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :  :                          :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :  :                          :     :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                          :     :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :  :                          :     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :  :                          :     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :  :                          :     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :  :                          :     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :  :                          :     :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                          :     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :  :                          :     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :  :                          :     :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                          :     :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :  :                          :     :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                          :     :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                          :     :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                          :     :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                          :     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :  :                          :     :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :  :                          :     :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :  :                          :     :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :  :                          :     :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :  :                          :     :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                          :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 1472.3250288462589, cumulative cost = {3190257.3881634637 rows, 8209065.380577081 cpu, 5.5381416E7 io, 270931.80530771165 network, 1237596.0246154743 memory}
         :  :                          :        +- Calc(select=[X0, X1]): rowcount = 1472.3250288462589, cumulative cost = {3188785.0631346176 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
         :  :                          :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 1472.3250288462589, cumulative cost = {3187312.7381057716 rows, 7973493.375961679 cpu, 5.5381416E7 io, 235596.00461540144 network, 1237596.0246154743 memory}
         :  :                          :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
         :  :                          :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
         :  :                          :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
         :  :                          :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
         :  :                          :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :                          :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :  :                          :              :           :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                          :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X10 AS X1]): rowcount = 72210.33550611239, cumulative cost = {5.4231951094534054E7 rows, 1.3527494547912436E9 cpu, 7.75219752E8 io, 1.5909380664159703E8 network, 1.2120726880037937E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 72210.33550611239, cumulative cost = {5.415974075902794E7 rows, 1.3527494547912436E9 cpu, 7.75219752E8 io, 1.5909380664159703E8 network, 1.2120726880037937E8 memory}
         :        :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
         :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
         :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
         :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
         :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
         :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
         :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
         :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
         :        :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[x]]): rowcount = 346523.68962741666, cumulative cost = {4.104867402270184E7 rows, 7.999212476612844E8 cpu, 6.09107556E8 io, 8.894063438175705E7 network, 7.699747413765949E7 memory}
         :           +- Calc(select=[x, X10]): rowcount = 346523.68962741666, cumulative cost = {4.070215033307442E7 rows, 7.417052678038784E8 cpu, 6.09107556E8 io, 8.062406583069906E7 network, 7.699747413765949E7 memory}
         :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right]): rowcount = 346523.68962741666, cumulative cost = {4.0355626643447004E7 rows, 7.417052678038784E8 cpu, 6.09107556E8 io, 8.062406583069906E7 network, 7.699747413765949E7 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 3103.93084944476, cumulative cost = {3.770204895381959E7 rows, 7.232240043570828E8 cpu, 5.5373826E8 io, 8.062406583069906E7 network, 7.682365401009059E7 memory}
         :                    +- Calc(select=[X0, X10]): rowcount = 3103.93084944476, cumulative cost = {3.769894502297014E7 rows, 7.227273754211717E8 cpu, 5.5373826E8 io, 8.054957149031238E7 network, 7.682365401009059E7 memory}
         :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 3103.93084944476, cumulative cost = {3.769584109212069E7 rows, 7.227273754211717E8 cpu, 5.5373826E8 io, 8.054957149031238E7 network, 7.682365401009059E7 memory}
         :                          :- Exchange(distribution=[broadcast]): rowcount = 9479.500192308393, cumulative cost = {3194647.913269234 rows, 9357929.405192554 cpu, 5.5377384E7 io, 459072.0092308029 network, 1225500.0246154743 memory}
         :                          :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3185168.4130769256 rows, 7841209.374423211 cpu, 5.5377384E7 io, 231564.00461540144 network, 1225500.0246154743 memory}
         :                          :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 9479.500192308393, cumulative cost = {3175688.912884617 rows, 7689537.371346277 cpu, 5.5377384E7 io, 231564.00461540144 network, 618812.0123077371 memory}
         :                          :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 9479.500192308393, cumulative cost = {3166209.412692309 rows, 6021145.3375 cpu, 5.5377384E7 io, 4056.0 network, 618812.0123077371 memory}
         :                          :           +- Union(all=[true], union=[X0, X1]): rowcount = 52295.1375, cumulative cost = {3156729.9125000006 rows, 5184423.1375 cpu, 5.5377384E7 io, 4056.0 network, 12124.0 memory}
         :                          :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 51959.1375, cumulative cost = {3103762.7750000004 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                          :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 51959.1375, cumulative cost = {3051803.6375 rows, 5132128.0 cpu, 5.5373352E7 io, 4056.0 network, 12124.0 memory}
         :                          :              :     :- Calc(select=[y, x0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                          :              :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                          :              :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                          :              :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                          :              :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                          :              :     +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                          :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                          :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                          +- Calc(select=[X0, X1]): rowcount = 11213.37213732334, cumulative cost = {3.4498089248002015E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
         :                             +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11213.37213732334, cumulative cost = {3.448687587586469E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
         :                                :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
         :                                :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
         :                                :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
         :                                :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
         :                                :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :                                :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
         :                                :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
         :                                :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :                                :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :                                :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :                                :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :                                :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :                                :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :                                :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :                                :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :                                :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :                                :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :                                :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :                                :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :                                :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :                                :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :                                :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :                                :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :                                :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :                                :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                                :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                                :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
         :                                :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :                                :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
         :                                :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
         :                                :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
         :                                :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
         :                                :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
         :                                :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
         :                                :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
         :                                :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                                :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                                :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :                                :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
         :                                :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
         :                                :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :                                :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
         :                                :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
         :                                :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
         :                                :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
         :                                :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
         :                                :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :                                :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
         :                                :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
         :                                :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :                                :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
         :                                :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :                                :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :                                :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :                                :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :                                :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
         :                                :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
         :                                :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
         :                                :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
         :                                :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
         :                                :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
         :                                :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                                :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 28063.966942963358, cumulative cost = {5.076417886410572E7 rows, 1.2956318596095805E9 cpu, 7.19846652E8 io, 1.5177022625317144E8 network, 1.1528871452952889E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[right]): rowcount = 28063.966942963358, cumulative cost = {5.073611489716275E7 rows, 1.2956318596095805E9 cpu, 7.19846652E8 io, 1.5177022625317144E8 network, 1.1528871452952889E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 134878.5470799993, cumulative cost = {1.3038856400819996E7 rows, 5.489769892362998E8 cpu, 1.66112196E8 io, 7.015317225983997E7 network, 3.665659602623991E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.2903977853739997E7 rows, 5.263173933268599E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 3.665659602623991E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 134878.5470799993, cumulative cost = {1.2769099306659998E7 rows, 5.241593365735799E8 cpu, 1.66112196E8 io, 6.691608712991998E7 network, 2.8024369013119955E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 134878.5470799993, cumulative cost = {1.263422075958E7 rows, 5.004207122875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 2.8024369013119955E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 744078.4874999999, cumulative cost = {1.24993422125E7 rows, 4.885154564875E8 cpu, 1.66112196E8 io, 6.3679002E7 network, 1.9392142E7 memory}
               :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 346111.64999999997, cumulative cost = {2999991.3 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 346111.64999999997, cumulative cost = {2653879.65 rows, 1.8516408E7 cpu, 5.537358E7 io, 4284.0 network, 12852.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 397966.83749999997, cumulative cost = {8755272.425 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 397966.83749999997, cumulative cost = {8357305.5875 rows, 4.6925497E8 cpu, 1.10738616E8 io, 6.3674718E7 network, 1.937929E7 memory}
               :                    :- Exchange(distribution=[hash[y]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[x]]): rowcount = 346058.25, cumulative cost = {3345230.75 rows, 6.0445E7 cpu, 5.536932E7 io, 8305422.0 network, 28.0 memory}
               :                       +- Calc(select=[x, y0]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 52214.56587308977, cumulative cost = {3.766919452939979E7 rows, 7.451581254696562E8 cpu, 5.53734456E8 io, 8.161705399333149E7 network, 7.570810281439595E7 memory}
                  +- Calc(select=[x, X1]): rowcount = 52214.56587308977, cumulative cost = {3.76169799635267E7 rows, 7.363860784029771E8 cpu, 5.53734456E8 io, 8.036390441237734E7 network, 7.570810281439595E7 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 52214.56587308977, cumulative cost = {3.756476539765362E7 rows, 7.363860784029771E8 cpu, 5.53734456E8 io, 8.036390441237734E7 network, 7.570810281439595E7 memory}
                        :- Calc(select=[x, X1]): rowcount = 347740.1058205985, cumulative cost = {3.751183683178053E7 rows, 7.335441815564123E8 cpu, 5.53730172E8 io, 8.035962041237734E7 network, 7.569525081439595E7 memory}
                        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347740.1058205985, cumulative cost = {3.7164096725959934E7 rows, 7.335441815564123E8 cpu, 5.53730172E8 io, 8.035962041237734E7 network, 7.569525081439595E7 memory}
                        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :     +- Exchange(distribution=[broadcast]): rowcount = 11213.37213732334, cumulative cost = {3.450930262013934E7 rows, 7.149980425793138E8 cpu, 4.98360876E8 io, 8.035962041237734E7 network, 7.506730197470585E7 memory}
                        :        +- Calc(select=[X0, X1]): rowcount = 11213.37213732334, cumulative cost = {3.4498089248002015E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 11213.37213732334, cumulative cost = {3.448687587586469E7 rows, 7.132039030373421E8 cpu, 4.98360876E8 io, 8.009049948108158E7 network, 7.506730197470585E7 memory}
                        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.447499050372737E7 rows, 7.125520965233516E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.505520597470585E7 memory}
                        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 74419.81424882227, cumulative cost = {3.440057068947855E7 rows, 7.113613794953704E8 cpu, 4.98356844E8 io, 8.008646748108158E7 network, 7.029233786278123E7 memory}
                        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 74419.81424882227, cumulative cost = {3.4326150875229724E7 rows, 6.982634921875777E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 7.029233786278123E7 memory}
                        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 410548.4825059023, cumulative cost = {3.42517310609809E7 rows, 6.916947164674833E8 cpu, 4.98356844E8 io, 7.830039193910985E7 network, 6.552946975085661E7 memory}
                        :              :           :- Calc(select=[X10 AS X0, X1]): rowcount = 63027.00953233071, cumulative cost = {2.0138961130538054E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 63027.00953233071, cumulative cost = {2.007593412100572E7 rows, 5.909562535434114E8 cpu, 2.76863208E8 io, 7.326499725001092E7 network, 4.0074303984534696E7 memory}
                        :              :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 64702.79882540108, cumulative cost = {1.0734887841343772E7 rows, 9.052850452322999E7 cpu, 1.66120308E8 io, 6350090.185137104 network, 2.4896743856188547E7 memory}
                        :              :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :              :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :              :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :              :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :              :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :              :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :              :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :              :           :     :              :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :              :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :              :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :              :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :              :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :              :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :              :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :              :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :              :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :              :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :              :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :              :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :              :           :     +- Exchange(distribution=[hash[y]]): rowcount = 355477.2647234704, cumulative cost = {9278019.270129621 rows, 4.970663085117904E8 cpu, 1.107429E8 io, 6.6914907064873815E7 network, 1.1554203394123688E7 memory}
                        :              :           :        +- Calc(select=[y, X1]): rowcount = 355477.2647234704, cumulative cost = {8922542.00540615 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :              :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 355477.2647234704, cumulative cost = {8567064.74068268 rows, 4.3734612803824735E8 cpu, 1.107429E8 io, 5.8383452711510524E7 network, 1.1554203394123688E7 memory}
                        :              :           :              :- Exchange(distribution=[hash[x]]): rowcount = 2307054.0, cumulative cost = {4614108.0 rows, 3.87585072E8 cpu, 5.5369296E7 io, 5.5369296E7 network, 0.0 memory}
                        :              :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 62794.43148980266, cumulative cost = {3597479.4759592097 rows, 3.0802268586328954E7 cpu, 5.5373604E7 io, 3014156.7115105274 network, 8037715.23069474 memory}
                        :              :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3534685.0444694073 rows, 2.0252804096042108E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 8037715.23069474 memory}
                        :              :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62794.43148980266, cumulative cost = {3471890.612979605 rows, 1.9248093192205265E7 cpu, 5.5373604E7 io, 1507090.3557552637 network, 4018871.61534737 memory}
                        :              :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62794.43148980266, cumulative cost = {3409096.1814898024 rows, 8196273.25 cpu, 5.5373604E7 io, 24.0 network, 4018871.61534737 memory}
                        :              :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 346415.25, cumulative cost = {3346301.75 rows, 2653629.25 cpu, 5.5373604E7 io, 24.0 network, 28.0 memory}
                        :              :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 357.0, cumulative cost = {714.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           +- Calc(select=[x AS X0, X1]): rowcount = 347521.47297357157, cumulative cost = {1.3702221447936947E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 347521.47297357157, cumulative cost = {1.3354699974963374E7 rows, 1.0032791444156593E8 cpu, 2.21493636E8 io, 5035394.689098923 network, 2.5455165766321916E7 memory}
                        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 9755.819823810161, cumulative cost = {1.0700124501989802E7 rows, 8.179343588297544E7 cpu, 1.6612434E8 io, 5035394.689098923 network, 2.4908839856188547E7 memory}
                        :              :                    +- Calc(select=[X0, X1]): rowcount = 9755.819823810161, cumulative cost = {1.0690368682165992E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9755.819823810161, cumulative cost = {1.068061286234218E7 rows, 8.023250471116582E7 cpu, 1.6612434E8 io, 4801255.013327478 network, 2.4908839856188547E7 memory}
                        :              :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.067018504251837E7 rows, 7.96584343205626E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.4896743856188547E7 memory}
                        :              :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 64702.79882540108, cumulative cost = {1.0605482243692968E7 rows, 7.862318953935619E7 cpu, 1.66120308E8 io, 4797223.013327478 network, 2.075576473136288E7 memory}
                        :              :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 64702.79882540108, cumulative cost = {1.0540779444867566E7 rows, 6.72354969460856E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 2.075576473136288E7 memory}
                        :              :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 356943.05528414395, cumulative cost = {1.0476076646042164E7 rows, 6.152440806153929E7 cpu, 1.66120308E8 io, 3244355.8415178526 network, 1.6614785606537212E7 memory}
                        :              :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 347470.91155880137, cumulative cost = {6564864.678800482 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :              :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 347470.91155880137, cumulative cost = {6217393.767241681 rows, 4.035344778913169E7 cpu, 1.10742672E8 io, 1733072.8454630375 network, 8564705.627578199 memory}
                        :              :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 9418.743725342594, cumulative cost = {3562868.85568288 rows, 2.1821665839328952E7 cpu, 5.5373376E7 io, 1733072.8454630375 network, 8037255.978959014 memory}
                        :              :                          :           :        +- Calc(select=[X1, x]): rowcount = 9418.743725342594, cumulative cost = {3553450.1119575375 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :              :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 9418.743725342594, cumulative cost = {3544031.368232195 rows, 2.031466684327414E7 cpu, 5.5373376E7 io, 1507022.9960548151 network, 8037255.978959014 memory}
                        :              :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :              :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :              :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :              :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 9472.143725342594, cumulative cost = {3554268.9119575373 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :              :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 9472.143725342594, cumulative cost = {3544796.7682321947 rows, 2.081401721712346E7 cpu, 5.5377636E7 io, 1511282.9960548151 network, 8050079.978959014 memory}
                        :              :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3534610.624506852 rows, 2.025171621843852E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 8037227.978959014 memory}
                        :              :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 62790.624835617295, cumulative cost = {3471819.9996712347 rows, 1.9247066221068643E7 cpu, 5.5373352E7 io, 1506998.9960548151 network, 4018627.989479507 memory}
                        :              :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 62790.624835617295, cumulative cost = {3409029.3748356174 rows, 8195916.25 cpu, 5.5373352E7 io, 24.0 network, 4018627.989479507 memory}
                        :              :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 346394.25, cumulative cost = {3346238.75 rows, 2653608.25 cpu, 5.5373352E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 346058.25, cumulative cost = {2999172.5 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 346058.25, cumulative cost = {2653114.25 rows, 2307214.0 cpu, 5.536932E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 2307054.0, cumulative cost = {2307054.0 rows, 0.0 cpu, 5.5369296E7 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 336.0, cumulative cost = {672.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                        :              :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}
                        :              :                          +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        :              +- Exchange(distribution=[broadcast]): rowcount = 336.0, cumulative cost = {672.0 rows, 53760.0 cpu, 4032.0 io, 4032.0 network, 0.0 memory}
                        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 336.0, cumulative cost = {336.0 rows, 0.0 cpu, 4032.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 357.0, cumulative cost = {714.0 rows, 57120.0 cpu, 4284.0 io, 4284.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 357.0, cumulative cost = {357.0 rows, 0.0 cpu, 4284.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X0, X10 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, x0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:  :  :        :- [#9] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#10] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[10])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[14])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y0])(reuse_id=[19])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[6])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:     :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[2])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])(reuse_id=[13])
         :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :- Exchange(distribution=[hash[X0]])
         :                 :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :                 :           :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :              :  +- Reused(reference_id=[1])
         :                 :           :              :- Exchange(distribution=[broadcast])
         :                 :           :              :  +- Calc(select=[X1, x])
         :                 :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :                 :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :                 :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :                 :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :                 :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :                 :           :              :        :           :     :- Reused(reference_id=[1])
         :                 :           :              :        :           :     +- Reused(reference_id=[3])
         :                 :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[12])
         :                 :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[8])
         :                 :           :              :        +- Reused(reference_id=[3])
         :                 :           :              :- Reused(reference_id=[4])
         :                 :           :              +- Reused(reference_id=[2])
         :                 :           :- Exchange(distribution=[hash[y]])
         :                 :           :  +- Calc(select=[y, X1])
         :                 :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :                 :           :        :- Exchange(distribution=[hash[x]])
         :                 :           :        :  +- Reused(reference_id=[1])
         :                 :           :        +- Exchange(distribution=[hash[X0]])
         :                 :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :                    +- Union(all=[true], union=[X0, X1])
         :                 :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :                 :           :                       :  +- Reused(reference_id=[5])
         :                 :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :                 :           :                          +- Reused(reference_id=[6])
         :                 :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :  +- Reused(reference_id=[1])
         :                 :           +- Exchange(distribution=[broadcast])
         :                 :              +- Calc(select=[X0, X1])
         :                 :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :                    :- Reused(reference_id=[7])
         :                 :                    +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :                 :                       +- Reused(reference_id=[8])
         :                 +- Reused(reference_id=[9])
         :- Reused(reference_id=[10])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X10])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X10])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])
         :                 :- Exchange(distribution=[broadcast])
         :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :                 :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           +- Union(all=[true], union=[X0, X1])
         :                 :              :- Calc(select=[x0 AS X0, y AS X1])
         :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :                 :              :     :- Calc(select=[y, x0])(reuse_id=[17])
         :                 :              :     :  +- Reused(reference_id=[11])
         :                 :              :     +- Reused(reference_id=[9])
         :                 :              +- Reused(reference_id=[12])
         :                 +- Reused(reference_id=[13])
         :- Reused(reference_id=[14])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X1, x AS x0])
         :              +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X00)], select=[X1, X00, x], isBroadcast=[true], build=[right])\n:- Calc(select=[X1, X00])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :                 :- Reused(reference_id=[9])
         :                 :- Reused(reference_id=[15])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Calc(select=[X0, X1])
         :                       +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                          :- Reused(reference_id=[16])
         :                          +- Reused(reference_id=[9])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[14])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[17])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[8])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[23])
         :              :                 :                 :- Reused(reference_id=[5])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Reused(reference_id=[21])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[14])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[15])
         :- Reused(reference_id=[22])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[23])

Job has been submitted with JobID 858e8d96797a16e2fc2c98c5e6cd0091
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT r_0.x AS X0, p2_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0 INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x) UNION (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0 INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x) UNION (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...

------------> using sink uuid: 1d08b57a_0e14_478d_97b9_3e174e4280bb

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT r_0.x AS X0, p2_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN a AS a_3 ON r_1.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0
                      INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0
                      INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalUnion(all=[false])
   :  :  :- LogicalUnion(all=[false])
   :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :  :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :  +- LogicalUnion(all=[false])
   :  :  :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :  :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :              +- LogicalUnion(all=[false])
   :  :  :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :  :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :  :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :              :  :- LogicalUnion(all=[false])
   :  :  :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :        +- LogicalUnion(all=[false])
   :  :  :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        +- LogicalUnion(all=[false])
   :  :  :        :  :  :           :- LogicalUnion(all=[false])
   :  :  :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :  :        :  :        :     :- LogicalUnion(all=[false])
   :  :  :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     +- LogicalJoin(condition=[=($5, $9)], joinType=[inner])
   :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalUnion(all=[false])
   :  :        :  :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :  :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalUnion(all=[false])
   :  :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     +- LogicalUnion(all=[false])
   :  :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     +- LogicalUnion(all=[false])
   :  :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :              +- LogicalUnion(all=[false])
   :  :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :  :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :           :  :- LogicalUnion(all=[false])
   :  :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     +- LogicalUnion(all=[false])
   :  :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :        +- LogicalUnion(all=[false])
   :  :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$7])
   :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalUnion(all=[false])
   :        :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalUnion(all=[false])
   :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :  +- LogicalUnion(all=[false])
   :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     +- LogicalUnion(all=[false])
   :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     +- LogicalUnion(all=[false])
   :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :              +- LogicalUnion(all=[false])
   :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :           :  :- LogicalUnion(all=[false])
   :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     +- LogicalUnion(all=[false])
   :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :        +- LogicalUnion(all=[false])
   :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$7])
      +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalProject(X0=[$3], X1=[$5])
            :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     :  +- LogicalUnion(all=[false])
            :     :     :- LogicalProject(X0=[$0], X1=[$0])
            :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :     :     +- LogicalProject(X0=[$1], X1=[$2])
            :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     +- LogicalUnion(all=[false])
            :        :- LogicalProject(X0=[$0], X1=[$5])
            :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalUnion(all=[false])
            :        :        :- LogicalProject(X0=[$0], X1=[$3])
            :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :        +- LogicalProject(X0=[$0], X1=[$0])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalProject(X0=[$0], X1=[$2])
            :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :              +- LogicalUnion(all=[false])
            :                 :- LogicalProject(X0=[$0], X1=[$3])
            :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalProject(X0=[$0], X1=[$0])
            :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$2], X1=[$1])
               +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$0], X1=[$5])
                  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalUnion(all=[false])
                  :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
                  :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
                  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$0], X1=[$2])
                  :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
                  :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
                  :  :        +- LogicalUnion(all=[false])
                  :  :           :- LogicalProject(X0=[$0], X1=[$3])
                  :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           +- LogicalProject(X0=[$0], X1=[$0])
                  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 291389.6222774381, cumulative cost = {9.059207979323035E8 rows, 3.970877543908908E10 cpu, 1.123093596E10 io, 5.169551983915167E9 network, 1.8386393476939597E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 291389.6222774381, cumulative cost = {9.056294083100262E8 rows, 3.9704113205132645E10 cpu, 1.123093596E10 io, 5.169551983915167E9 network, 1.8199904118682036E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 291389.6222774381, cumulative cost = {9.053380186877488E8 rows, 3.965282863161182E10 cpu, 1.123093596E10 io, 5.162558632980509E9 network, 1.8199904118682036E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 1607496.1816484712, cumulative cost = {9.050466290654714E8 rows, 3.9627108692705444E10 cpu, 1.123093596E10 io, 5.162558632980509E9 network, 1.8013414760424476E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 1529532.6307652064, cumulative cost = {7.367642374774014E8 rows, 3.171770843517765E10 cpu, 9.230909028E9 io, 4.1255442285726457E9 network, 1.4811620463120406E9 memory}
         :  :- Union(all=[true], union=[X0, X1]): rowcount = 1328900.0675493916, cumulative cost = {5.653047043691463E8 rows, 2.4721395213981136E10 cpu, 7.077032172E9 io, 3.2212771558676715E9 network, 1.144542727004143E9 memory}
         :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 223049.93656240555, cumulative cost = {4.1569830811126935E8 rows, 1.813493657863482E10 cpu, 5.23083948E9 io, 2.359458209602763E9 network, 8.782913736742642E8 memory}
         :  :  :  :- Calc(select=[X0, X10 AS X1]): rowcount = 185958.34998545257, cumulative cost = {2.7351629604361206E8 rows, 1.2363140227748669E10 cpu, 3.384655992E9 io, 1.616016202740982E9 network, 5.560754581352928E8 memory}
         :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 185958.34998545257, cumulative cost = {2.733303376936266E8 rows, 1.2363140227748669E10 cpu, 3.384655992E9 io, 1.616016202740982E9 network, 5.560754581352928E8 memory}
         :  :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4213114960178733E8 rows, 5.811109087765004E9 cpu, 1.846176684E9 io, 7.493725615140934E8 network, 3.2221113313897145E8 memory}
         :  :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4188395725794098E8 rows, 5.7695807739988165E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.2221113313897145E8 memory}
         :  :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4163676491409463E8 rows, 5.765625696497274E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.063908231328048E8 memory}
         :  :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4138957257024828E8 rows, 5.722119843980316E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 3.063908231328048E8 memory}
         :  :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1363675.0195839624, cumulative cost = {1.4114238022640193E8 rows, 5.700301043666973E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 2.905705131266382E8 memory}
         :  :  :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 257843.26407266557, cumulative cost = {1.064468090562436E8 rows, 4.334164087639591E9 cpu, 1.384628568E9 io, 5.598423426130545E8 network, 2.330948592940027E8 memory}
         :  :  :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :  :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :  :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :  :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :  :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :  :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :  :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :  :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :  :  :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :  :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :  :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :  :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :  :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :  :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :  :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :  :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :  :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :  :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :  :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :  :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :  :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :  :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :  :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :  :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :  :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :  :  :  :     :              :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :  :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :  :  :     :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :     :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :  :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :  :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :  :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :  :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :  :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :  :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :  :  :  :     :                       +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :  :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :  :  :  :     :                                +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :  :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :  :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :  :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :  :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :  :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :  :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :  :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :  :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 992529.9893899972, cumulative cost = {1.3101322974185382E8 rows, 6.542113361317773E9 cpu, 1.538479308E9 io, 8.666436412268888E8 network, 2.2002155374092555E8 memory}
         :  :  :  :        +- Calc(select=[x, X1]): rowcount = 992529.9893899972, cumulative cost = {1.3002069975246382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 992529.9893899972, cumulative cost = {1.2902816976307382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :  :  :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 206771.5959333153, cumulative cost = {1.1521544977368382E8 rows, 5.245537430332787E9 cpu, 1.384637028E9 io, 6.889806414815289E8 network, 2.0844234436865988E8 memory}
         :  :  :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :  :  :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :  :  :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :  :  :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :  :  :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :  :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :  :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :  :  :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :  :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :  :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :  :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :  :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :  :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :  :  :                             :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :                             :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :  :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :  :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :  :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :  :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :  :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :  :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :  :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :  :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :  :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :  :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :  :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :  :  :                             :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :  :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :  :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :  :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :  :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :  :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :  :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :  :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :  :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :  :  :  :                                      +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :  :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :  :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :  :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :  :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :  :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :  :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :  :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :  :  :                                            :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :                                            :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :  :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :  :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :  :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :  :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :  :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :  :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :  :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :  :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :  :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :  :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :  :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :  :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  +- Calc(select=[X0, x0 AS X1]): rowcount = 37091.586576952985, cumulative cost = {1.4195896213109484E8 rows, 5.771573300949587E9 cpu, 1.846183488E9 io, 7.43442006861781E8 network, 3.222159155389714E8 memory}
         :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 37091.586576952985, cumulative cost = {1.419218705445179E8 rows, 5.771573300949587E9 cpu, 1.846183488E9 io, 7.43442006861781E8 network, 3.222159155389714E8 memory}
         :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4188395725794098E8 rows, 5.7695807739988165E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.2221113313897145E8 memory}
         :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4163676491409463E8 rows, 5.765625696497274E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.063908231328048E8 memory}
         :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4138957257024828E8 rows, 5.722119843980316E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 3.063908231328048E8 memory}
         :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1363675.0195839624, cumulative cost = {1.4114238022640193E8 rows, 5.700301043666973E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 2.905705131266382E8 memory}
         :  :  :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 257843.26407266557, cumulative cost = {1.064468090562436E8 rows, 4.334164087639591E9 cpu, 1.384628568E9 io, 5.598423426130545E8 network, 2.330948592940027E8 memory}
         :  :  :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :  :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :  :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :  :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :  :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :  :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :  :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :  :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :  :  :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :  :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :  :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :  :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :  :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :  :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :  :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :  :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :  :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :  :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :  :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :  :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :  :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :  :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :  :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :  :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :  :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :  :  :        :           :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :  :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :  :        :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :        :           :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :  :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :  :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :  :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :  :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :  :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :  :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :  :  :        :                    +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :  :  :        :                             +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :  :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :  :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :  :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :  :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :  :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :  :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :  :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :  :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :  :           +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  +- Calc(select=[x AS X0, X1]): rowcount = 1105850.130986986, cumulative cost = {1.4827749619032753E8 rows, 6.585129735278768E9 cpu, 1.846192692E9 io, 8.618189462649084E8 network, 2.662513533298789E8 memory}
         :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 1105850.130986986, cumulative cost = {1.4717164605934054E8 rows, 6.585129735278768E9 cpu, 1.846192692E9 io, 8.618189462649084E8 network, 2.662513533298789E8 memory}
         :  :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :        +- Exchange(distribution=[hash[x]]): rowcount = 962239.2065799073, cumulative cost = {1.3324560592835355E8 rows, 5.449255101626128E9 cpu, 1.692350412E9 io, 7.079766662649084E8 network, 2.123659577614041E8 memory}
         :  :           +- Calc(select=[x, X1]): rowcount = 962239.2065799073, cumulative cost = {1.3228336672177364E8 rows, 5.287598914920704E9 cpu, 1.692350412E9 io, 6.848829253069906E8 network, 2.123659577614041E8 memory}
         :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 962239.2065799073, cumulative cost = {1.3132112751519373E8 rows, 5.287598914920704E9 cpu, 1.692350412E9 io, 6.848829253069906E8 network, 2.123659577614041E8 memory}
         :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                 +- Exchange(distribution=[broadcast]): rowcount = 4833.043866049656, cumulative cost = {1.2394879330861382E8 rows, 5.236279490569776E9 cpu, 1.538508132E9 io, 6.848829253069906E8 network, 2.1209530730490533E8 memory}
         :  :                    +- Calc(select=[X1, x AS x0]): rowcount = 4833.043866049656, cumulative cost = {1.2394396026474777E8 rows, 5.235506203551208E9 cpu, 1.538508132E9 io, 6.847669322542055E8 network, 2.1209530730490533E8 memory}
         :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X00)], select=[X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 4833.043866049656, cumulative cost = {1.2393912722088172E8 rows, 5.235506203551208E9 cpu, 1.538508132E9 io, 6.847669322542055E8 network, 2.1209530730490533E8 memory}
         :  :                          :- Calc(select=[X1, X00]): rowcount = 31620.29244033104, cumulative cost = {1.2393309417701566E8 rows, 5.235152441211685E9 cpu, 1.538500932E9 io, 6.847597322542055E8 network, 2.1207370730490533E8 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 31620.29244033104, cumulative cost = {1.2390147388457534E8 rows, 5.235152441211685E9 cpu, 1.538500932E9 io, 6.847597322542055E8 network, 2.1207370730490533E8 memory}
         :  :                          :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :  :                          :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :  :                          :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :  :                          :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :  :                          :     :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                          :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                          :     :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :  :                          :     :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                          :     :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                          :     :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                          :     :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                          :     :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                          :     :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                          :     :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                          :     :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                          :     :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                          :     :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                          :     :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                          :     :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                          :     :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                          :     :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                          :     :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                          :     :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                          :     :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                          :     :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                          :     :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                          :     :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :                          :     :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                          :     :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                          :     :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                          :     :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :                          :     :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :                          :     :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :                          :     :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :                          :     :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                          :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                          :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                          :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :  :                          :     :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                          :     :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                          :     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                          :     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                          :     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                          :     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                          :     :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                          :     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                          :     :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                          :     :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                          :     :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                          :     :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                          :     :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                          :     :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                          :     :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                          :     :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                          :     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                          :     :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                          :     :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                          :     :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                          :     :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                          :     :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                          :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 4030.3536688916415, cumulative cost = {8861175.414384509 rows, 2.2666223398878183E7 cpu, 1.53863904E8 io, 741609.075076062 network, 3405663.130787534 memory}
         :  :                          :        +- Calc(select=[X0, X1]): rowcount = 4030.3536688916415, cumulative cost = {8857145.060715618 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
         :  :                          :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4030.3536688916415, cumulative cost = {8853114.707046727 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
         :  :                          :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
         :  :                          :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
         :  :                          :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
         :  :                          :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
         :  :                          :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :                          :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :                          :              :           :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                          :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X10 AS X1]): rowcount = 200632.5632158147, cumulative cost = {1.6993000047748986E8 rows, 6.994783688565748E9 cpu, 2.153876856E9 io, 9.04267072704974E8 network, 3.366193193078976E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 200632.5632158147, cumulative cost = {1.6972936791427404E8 rows, 6.994783688565748E9 cpu, 2.153876856E9 io, 9.04267072704974E8 network, 3.366193193078976E8 memory}
         :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[x]]): rowcount = 962805.1821866086, cumulative cost = {1.3330167796404961E8 rows, 5.458841022693461E9 cpu, 1.692343212E9 io, 7.093538716208706E8 network, 2.1380102088550088E8 memory}
         :           +- Calc(select=[x, X10]): rowcount = 962805.1821866086, cumulative cost = {1.32338872781863E8 rows, 5.297089752086111E9 cpu, 1.692343212E9 io, 6.86246547248392E8 network, 2.1380102088550088E8 memory}
         :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right]): rowcount = 962805.1821866086, cumulative cost = {1.313760675996764E8 rows, 5.297089752086111E9 cpu, 1.692343212E9 io, 6.86246547248392E8 network, 2.1380102088550088E8 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 8606.214577391234, cumulative cost = {1.240031674174898E8 rows, 5.245740142369492E9 cpu, 1.538500932E9 io, 6.86246547248392E8 network, 2.1331907286916697E8 memory}
         :                    +- Calc(select=[X0, X10]): rowcount = 8606.214577391234, cumulative cost = {1.239945612029124E8 rows, 5.244363148037109E9 cpu, 1.538500932E9 io, 6.860399980985346E8 network, 2.1331907286916697E8 memory}
         :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], build=[left]): rowcount = 8606.214577391234, cumulative cost = {1.2398595498833501E8 rows, 5.244363148037109E9 cpu, 1.538500932E9 io, 6.860399980985346E8 network, 2.1331907286916697E8 memory}
         :                          :- Exchange(distribution=[hash[X1]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
         :                          :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
         :                          :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
         :                          :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
         :                          :           +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
         :                          :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                          :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                          :              :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                          :              :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                          :              :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                          :              :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                          :              :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                          :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                          :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                          :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                          +- Exchange(distribution=[hash[X0]]): rowcount = 31105.739389997292, cumulative cost = {1.151031953959205E8 rows, 5.217780539200975E9 cpu, 1.384644228E9 io, 6.847718609244893E8 network, 2.0846394436865988E8 memory}
         :                             +- Calc(select=[X0, X1]): rowcount = 31105.739389997292, cumulative cost = {1.150720896565305E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
         :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 31105.739389997292, cumulative cost = {1.150409839171405E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
         :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :                                   :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :                                   :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :                                   :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :                                   :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :                                   :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :                                   :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :                                   :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :                                   :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :                                   :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :                                   :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                   :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :                                   :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :                                   :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :                                   :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :                                   :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :                                   :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :                                   :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :                                   :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :                                   :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :                                   :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :                                   :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :                                   :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                                   :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :                                   :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :                                   :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :                                   :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                   :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :                                   :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :                                   :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :                                   :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :                                   :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :                                   :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                   :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                   :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :                                   :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :                                   :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                   :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :                                   :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :                                   :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :                                   :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :                                   :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :                                   :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :                                   :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :                                   :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :                                   :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :                                   :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                   :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :                                   :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :                                   :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :                                   :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :                                   :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :                                   :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :                                   :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :                                   :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :                                   :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :                                   :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :                                   :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :                                   :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                                   :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                   :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                                   :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 77963.55088326467, cumulative cost = {1.6667489540642148E8 rows, 7.907792761346142E9 cpu, 2.000026932E9 io, 1.0370144044078634E9 network, 3.201794297304071E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[right]): rowcount = 77963.55088326467, cumulative cost = {1.6659693185553822E8 rows, 7.907792761346142E9 cpu, 2.000026932E9 io, 1.0370144044078634E9 network, 3.201794297304071E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 145011.7666362749, cumulative cost = {1.3029191091764633E8 rows, 6.378392442798258E9 cpu, 1.538493288E9 io, 8.421012033237599E8 network, 2.1022620577449974E8 memory}
                  +- Calc(select=[x, X1]): rowcount = 145011.7666362749, cumulative cost = {1.3014689915101005E8 rows, 6.354030466003364E9 cpu, 1.538493288E9 io, 8.386209209244893E8 network, 2.1022620577449974E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 145011.7666362749, cumulative cost = {1.3000188738437377E8 rows, 6.354030466003364E9 cpu, 1.538493288E9 io, 8.386209209244893E8 network, 2.1022620577449974E8 memory}
                        :- Calc(select=[x, X1]): rowcount = 966180.1109084995, cumulative cost = {1.2985574561773749E8 rows, 6.346206105116096E9 cpu, 1.538486508E9 io, 8.386141409244893E8 network, 2.1020586577449974E8 memory}
                        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 966180.1109084995, cumulative cost = {1.28889565506829E8 rows, 6.346206105116096E9 cpu, 1.538486508E9 io, 8.386141409244893E8 network, 2.1020586577449974E8 memory}
                        :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :     +- Exchange(distribution=[hash[X0]]): rowcount = 31105.739389997292, cumulative cost = {1.151031953959205E8 rows, 5.217780539200975E9 cpu, 1.384644228E9 io, 6.847718609244893E8 network, 2.0846394436865988E8 memory}
                        :        +- Calc(select=[X0, X1]): rowcount = 31105.739389997292, cumulative cost = {1.150720896565305E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 31105.739389997292, cumulative cost = {1.150409839171405E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
                        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
                        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
                        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
                        :              :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :              :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
                        :              :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :              :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :              :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :              :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :              :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :              :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :              :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :              :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :              :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :              :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :              :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :              :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :              :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :              :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :              :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :              :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :              :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :              :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :              :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :              :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :              :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
                        :              :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :              :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :              :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :              :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
                        :              :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
                        :              :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
                        :              :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
                        :              :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
                        :              :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
                        :              :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :              :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :              :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :              :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :              :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :              :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :              :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :              :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :              :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :              :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :              :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :              :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :              :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :              :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :              :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :              :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :              :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :              :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :              :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :              :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :              :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :              :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X0, X10 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, x0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:  :  :        :- [#9] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#10] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[11])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[3])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y0])(reuse_id=[19])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[7])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n:     :- [#2] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:     +- [#3] Exchange(distribution=[hash[X0]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[2])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])(reuse_id=[14])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :                 :           :- Exchange(distribution=[hash[X0]])
         :                 :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :                 :           :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :              :- Reused(reference_id=[3])
         :                 :           :              :- Exchange(distribution=[hash[x]])
         :                 :           :              :  +- Calc(select=[X1, x])
         :                 :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :                 :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :                 :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :                 :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :                 :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[12])
         :                 :           :              :        :           :     :- Reused(reference_id=[1])
         :                 :           :              :        :           :     +- Reused(reference_id=[4])
         :                 :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[13])
         :                 :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[9])
         :                 :           :              :        +- Reused(reference_id=[4])
         :                 :           :              :- Reused(reference_id=[5])
         :                 :           :              +- Reused(reference_id=[2])
         :                 :           :- Exchange(distribution=[hash[y]])
         :                 :           :  +- Calc(select=[y, X1])
         :                 :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :                 :           :        :- Exchange(distribution=[hash[x]])
         :                 :           :        :  +- Reused(reference_id=[1])
         :                 :           :        +- Exchange(distribution=[hash[X0]])
         :                 :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :                    +- Union(all=[true], union=[X0, X1])
         :                 :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :                 :           :                       :  +- Reused(reference_id=[6])
         :                 :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :                 :           :                          +- Reused(reference_id=[7])
         :                 :           :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :                 :           :  +- Reused(reference_id=[1])
         :                 :           +- Exchange(distribution=[hash[X0]])
         :                 :              +- Calc(select=[X0, X1])
         :                 :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :                    :- Reused(reference_id=[8])
         :                 :                    +- Exchange(distribution=[broadcast])(reuse_id=[10])
         :                 :                       +- Reused(reference_id=[9])
         :                 +- Reused(reference_id=[10])
         :- Reused(reference_id=[11])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X10])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X10])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], build=[left])
         :                 :- Exchange(distribution=[hash[X1]])
         :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :                 :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           +- Union(all=[true], union=[X0, X1])
         :                 :              :- Calc(select=[x0 AS X0, y AS X1])
         :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :                 :              :     :- Calc(select=[y, x0])(reuse_id=[17])
         :                 :              :     :  +- Reused(reference_id=[12])
         :                 :              :     +- Reused(reference_id=[10])
         :                 :              +- Reused(reference_id=[13])
         :                 +- Reused(reference_id=[14])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X1, x AS x0])
         :              +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X00)], select=[X1, X00, x], isBroadcast=[true], build=[right])\n:- Calc(select=[X1, X00])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :                 :- Reused(reference_id=[10])
         :                 :- Reused(reference_id=[15])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Calc(select=[X0, X1])
         :                       +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                          :- Reused(reference_id=[16])
         :                          +- Reused(reference_id=[10])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[3])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[17])
         :              :                 :           :  :- Reused(reference_id=[4])
         :              :                 :           :  :- Reused(reference_id=[9])
         :              :                 :           :  +- Reused(reference_id=[4])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[23])
         :              :                 :                 :- Reused(reference_id=[6])
         :              :                 :                 +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[10])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[11])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], build=[right])
         :                       :- Reused(reference_id=[3])
         :                       +- Exchange(distribution=[hash[X1]])
         :                          +- Reused(reference_id=[21])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[15])
         :- Reused(reference_id=[22])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[23])

Job has been submitted with JobID 6f045cc1a19ccb2e1d9e38b3fc41ca43
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT r_0.x AS X0, p2_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0 INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x) UNION (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0 INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x) UNION (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 4a9019fb_838e_4601_a669_20464b626c29

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT r_0.x AS X0, p2_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN a AS a_3 ON r_1.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0
                      INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0
                      INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalUnion(all=[false])
   :  :  :- LogicalUnion(all=[false])
   :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :  :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :  +- LogicalUnion(all=[false])
   :  :  :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :  :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :              +- LogicalUnion(all=[false])
   :  :  :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :  :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :  :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :              :  :- LogicalUnion(all=[false])
   :  :  :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :        +- LogicalUnion(all=[false])
   :  :  :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        +- LogicalUnion(all=[false])
   :  :  :        :  :  :           :- LogicalUnion(all=[false])
   :  :  :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :  :        :  :        :     :- LogicalUnion(all=[false])
   :  :  :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     +- LogicalJoin(condition=[=($5, $9)], joinType=[inner])
   :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalUnion(all=[false])
   :  :        :  :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :  :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalUnion(all=[false])
   :  :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     +- LogicalUnion(all=[false])
   :  :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     +- LogicalUnion(all=[false])
   :  :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :              +- LogicalUnion(all=[false])
   :  :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :  :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :           :  :- LogicalUnion(all=[false])
   :  :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     +- LogicalUnion(all=[false])
   :  :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :        +- LogicalUnion(all=[false])
   :  :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$7])
   :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalUnion(all=[false])
   :        :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalUnion(all=[false])
   :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :  +- LogicalUnion(all=[false])
   :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     +- LogicalUnion(all=[false])
   :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     +- LogicalUnion(all=[false])
   :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :              +- LogicalUnion(all=[false])
   :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :           :  :- LogicalUnion(all=[false])
   :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     +- LogicalUnion(all=[false])
   :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :        +- LogicalUnion(all=[false])
   :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$7])
      +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalProject(X0=[$3], X1=[$5])
            :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     :  +- LogicalUnion(all=[false])
            :     :     :- LogicalProject(X0=[$0], X1=[$0])
            :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :     :     +- LogicalProject(X0=[$1], X1=[$2])
            :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     +- LogicalUnion(all=[false])
            :        :- LogicalProject(X0=[$0], X1=[$5])
            :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalUnion(all=[false])
            :        :        :- LogicalProject(X0=[$0], X1=[$3])
            :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :        +- LogicalProject(X0=[$0], X1=[$0])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalProject(X0=[$0], X1=[$2])
            :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :              +- LogicalUnion(all=[false])
            :                 :- LogicalProject(X0=[$0], X1=[$3])
            :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalProject(X0=[$0], X1=[$0])
            :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$2], X1=[$1])
               +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$0], X1=[$5])
                  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalUnion(all=[false])
                  :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
                  :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
                  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$0], X1=[$2])
                  :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
                  :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
                  :  :        +- LogicalUnion(all=[false])
                  :  :           :- LogicalProject(X0=[$0], X1=[$3])
                  :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           +- LogicalProject(X0=[$0], X1=[$0])
                  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 291389.6222774381, cumulative cost = {9.059207979323035E8 rows, 3.970877543908908E10 cpu, 1.123093596E10 io, 5.169551983915167E9 network, 1.8386393476939597E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 291389.6222774381, cumulative cost = {9.056294083100262E8 rows, 3.9704113205132645E10 cpu, 1.123093596E10 io, 5.169551983915167E9 network, 1.8199904118682036E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 291389.6222774381, cumulative cost = {9.053380186877488E8 rows, 3.965282863161182E10 cpu, 1.123093596E10 io, 5.162558632980509E9 network, 1.8199904118682036E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 1607496.1816484712, cumulative cost = {9.050466290654714E8 rows, 3.9627108692705444E10 cpu, 1.123093596E10 io, 5.162558632980509E9 network, 1.8013414760424476E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 1529532.6307652064, cumulative cost = {7.367642374774014E8 rows, 3.171770843517765E10 cpu, 9.230909028E9 io, 4.1255442285726457E9 network, 1.4811620463120406E9 memory}
         :  :- Union(all=[true], union=[X0, X1]): rowcount = 1328900.0675493916, cumulative cost = {5.653047043691463E8 rows, 2.4721395213981136E10 cpu, 7.077032172E9 io, 3.2212771558676715E9 network, 1.144542727004143E9 memory}
         :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 223049.93656240555, cumulative cost = {4.1569830811126935E8 rows, 1.813493657863482E10 cpu, 5.23083948E9 io, 2.359458209602763E9 network, 8.782913736742642E8 memory}
         :  :  :  :- Calc(select=[X0, X10 AS X1]): rowcount = 185958.34998545257, cumulative cost = {2.7351629604361206E8 rows, 1.2363140227748669E10 cpu, 3.384655992E9 io, 1.616016202740982E9 network, 5.560754581352928E8 memory}
         :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 185958.34998545257, cumulative cost = {2.733303376936266E8 rows, 1.2363140227748669E10 cpu, 3.384655992E9 io, 1.616016202740982E9 network, 5.560754581352928E8 memory}
         :  :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4213114960178733E8 rows, 5.811109087765004E9 cpu, 1.846176684E9 io, 7.493725615140934E8 network, 3.2221113313897145E8 memory}
         :  :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4188395725794098E8 rows, 5.7695807739988165E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.2221113313897145E8 memory}
         :  :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4163676491409463E8 rows, 5.765625696497274E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.063908231328048E8 memory}
         :  :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4138957257024828E8 rows, 5.722119843980316E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 3.063908231328048E8 memory}
         :  :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1363675.0195839624, cumulative cost = {1.4114238022640193E8 rows, 5.700301043666973E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 2.905705131266382E8 memory}
         :  :  :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 257843.26407266557, cumulative cost = {1.064468090562436E8 rows, 4.334164087639591E9 cpu, 1.384628568E9 io, 5.598423426130545E8 network, 2.330948592940027E8 memory}
         :  :  :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :  :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :  :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :  :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :  :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :  :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :  :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :  :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :  :  :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :  :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :  :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :  :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :  :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :  :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :  :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :  :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :  :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :  :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :  :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :  :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :  :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :  :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :  :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :  :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :  :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :  :  :  :     :              :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :  :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :  :  :     :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :     :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :  :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :  :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :  :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :  :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :  :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :  :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :  :  :  :     :                       +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :  :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :  :  :  :     :                                +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :  :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :  :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :  :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :  :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :  :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :  :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :  :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :  :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 992529.9893899972, cumulative cost = {1.3101322974185382E8 rows, 6.542113361317773E9 cpu, 1.538479308E9 io, 8.666436412268888E8 network, 2.2002155374092555E8 memory}
         :  :  :  :        +- Calc(select=[x, X1]): rowcount = 992529.9893899972, cumulative cost = {1.3002069975246382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 992529.9893899972, cumulative cost = {1.2902816976307382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :  :  :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 206771.5959333153, cumulative cost = {1.1521544977368382E8 rows, 5.245537430332787E9 cpu, 1.384637028E9 io, 6.889806414815289E8 network, 2.0844234436865988E8 memory}
         :  :  :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :  :  :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :  :  :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :  :  :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :  :  :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :  :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :  :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :  :  :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :  :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :  :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :  :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :  :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :  :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :  :  :                             :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :                             :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :  :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :  :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :  :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :  :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :  :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :  :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :  :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :  :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :  :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :  :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :  :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :  :  :                             :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :  :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :  :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :  :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :  :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :  :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :  :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :  :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :  :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :  :  :  :                                      +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :  :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :  :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :  :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :  :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :  :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :  :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :  :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :  :  :                                            :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :                                            :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :  :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :  :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :  :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :  :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :  :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :  :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :  :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :  :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :  :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :  :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :  :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :  :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  +- Calc(select=[X0, x0 AS X1]): rowcount = 37091.586576952985, cumulative cost = {1.4195896213109484E8 rows, 5.771573300949587E9 cpu, 1.846183488E9 io, 7.43442006861781E8 network, 3.222159155389714E8 memory}
         :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 37091.586576952985, cumulative cost = {1.419218705445179E8 rows, 5.771573300949587E9 cpu, 1.846183488E9 io, 7.43442006861781E8 network, 3.222159155389714E8 memory}
         :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4188395725794098E8 rows, 5.7695807739988165E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.2221113313897145E8 memory}
         :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4163676491409463E8 rows, 5.765625696497274E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.063908231328048E8 memory}
         :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4138957257024828E8 rows, 5.722119843980316E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 3.063908231328048E8 memory}
         :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1363675.0195839624, cumulative cost = {1.4114238022640193E8 rows, 5.700301043666973E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 2.905705131266382E8 memory}
         :  :  :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 257843.26407266557, cumulative cost = {1.064468090562436E8 rows, 4.334164087639591E9 cpu, 1.384628568E9 io, 5.598423426130545E8 network, 2.330948592940027E8 memory}
         :  :  :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :  :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :  :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :  :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :  :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :  :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :  :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :  :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :  :  :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :  :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :  :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :  :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :  :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :  :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :  :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :  :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :  :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :  :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :  :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :  :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :  :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :  :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :  :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :  :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :  :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :  :  :        :           :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :  :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :  :        :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :        :           :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :  :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :  :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :  :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :  :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :  :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :  :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :  :  :        :                    +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :  :  :        :                             +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :  :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :  :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :  :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :  :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :  :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :  :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :  :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :  :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :  :           +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  +- Calc(select=[x AS X0, X1]): rowcount = 1105850.130986986, cumulative cost = {1.4827749619032753E8 rows, 6.585129735278768E9 cpu, 1.846192692E9 io, 8.618189462649084E8 network, 2.662513533298789E8 memory}
         :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 1105850.130986986, cumulative cost = {1.4717164605934054E8 rows, 6.585129735278768E9 cpu, 1.846192692E9 io, 8.618189462649084E8 network, 2.662513533298789E8 memory}
         :  :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :        +- Exchange(distribution=[hash[x]]): rowcount = 962239.2065799073, cumulative cost = {1.3324560592835355E8 rows, 5.449255101626128E9 cpu, 1.692350412E9 io, 7.079766662649084E8 network, 2.123659577614041E8 memory}
         :  :           +- Calc(select=[x, X1]): rowcount = 962239.2065799073, cumulative cost = {1.3228336672177364E8 rows, 5.287598914920704E9 cpu, 1.692350412E9 io, 6.848829253069906E8 network, 2.123659577614041E8 memory}
         :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 962239.2065799073, cumulative cost = {1.3132112751519373E8 rows, 5.287598914920704E9 cpu, 1.692350412E9 io, 6.848829253069906E8 network, 2.123659577614041E8 memory}
         :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                 +- Exchange(distribution=[broadcast]): rowcount = 4833.043866049656, cumulative cost = {1.2394879330861382E8 rows, 5.236279490569776E9 cpu, 1.538508132E9 io, 6.848829253069906E8 network, 2.1209530730490533E8 memory}
         :  :                    +- Calc(select=[X1, x AS x0]): rowcount = 4833.043866049656, cumulative cost = {1.2394396026474777E8 rows, 5.235506203551208E9 cpu, 1.538508132E9 io, 6.847669322542055E8 network, 2.1209530730490533E8 memory}
         :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X00)], select=[X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 4833.043866049656, cumulative cost = {1.2393912722088172E8 rows, 5.235506203551208E9 cpu, 1.538508132E9 io, 6.847669322542055E8 network, 2.1209530730490533E8 memory}
         :  :                          :- Calc(select=[X1, X00]): rowcount = 31620.29244033104, cumulative cost = {1.2393309417701566E8 rows, 5.235152441211685E9 cpu, 1.538500932E9 io, 6.847597322542055E8 network, 2.1207370730490533E8 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 31620.29244033104, cumulative cost = {1.2390147388457534E8 rows, 5.235152441211685E9 cpu, 1.538500932E9 io, 6.847597322542055E8 network, 2.1207370730490533E8 memory}
         :  :                          :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :  :                          :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :  :                          :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :  :                          :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :  :                          :     :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                          :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                          :     :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :  :                          :     :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                          :     :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                          :     :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                          :     :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                          :     :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                          :     :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                          :     :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                          :     :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                          :     :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                          :     :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                          :     :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                          :     :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                          :     :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                          :     :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                          :     :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                          :     :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                          :     :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                          :     :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                          :     :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                          :     :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :                          :     :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                          :     :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                          :     :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                          :     :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :                          :     :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :                          :     :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :                          :     :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :                          :     :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                          :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                          :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                          :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :  :                          :     :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                          :     :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                          :     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                          :     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                          :     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                          :     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                          :     :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                          :     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                          :     :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                          :     :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                          :     :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                          :     :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                          :     :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                          :     :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                          :     :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                          :     :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                          :     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                          :     :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                          :     :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                          :     :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                          :     :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                          :     :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                          :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 4030.3536688916415, cumulative cost = {8861175.414384509 rows, 2.2666223398878183E7 cpu, 1.53863904E8 io, 741609.075076062 network, 3405663.130787534 memory}
         :  :                          :        +- Calc(select=[X0, X1]): rowcount = 4030.3536688916415, cumulative cost = {8857145.060715618 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
         :  :                          :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4030.3536688916415, cumulative cost = {8853114.707046727 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
         :  :                          :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
         :  :                          :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
         :  :                          :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
         :  :                          :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
         :  :                          :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :                          :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :                          :              :           :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                          :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X10 AS X1]): rowcount = 200632.5632158147, cumulative cost = {1.6993000047748986E8 rows, 6.994783688565748E9 cpu, 2.153876856E9 io, 9.04267072704974E8 network, 3.366193193078976E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 200632.5632158147, cumulative cost = {1.6972936791427404E8 rows, 6.994783688565748E9 cpu, 2.153876856E9 io, 9.04267072704974E8 network, 3.366193193078976E8 memory}
         :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[x]]): rowcount = 962805.1821866086, cumulative cost = {1.3330167796404961E8 rows, 5.458841022693461E9 cpu, 1.692343212E9 io, 7.093538716208706E8 network, 2.1380102088550088E8 memory}
         :           +- Calc(select=[x, X10]): rowcount = 962805.1821866086, cumulative cost = {1.32338872781863E8 rows, 5.297089752086111E9 cpu, 1.692343212E9 io, 6.86246547248392E8 network, 2.1380102088550088E8 memory}
         :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right]): rowcount = 962805.1821866086, cumulative cost = {1.313760675996764E8 rows, 5.297089752086111E9 cpu, 1.692343212E9 io, 6.86246547248392E8 network, 2.1380102088550088E8 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 8606.214577391234, cumulative cost = {1.240031674174898E8 rows, 5.245740142369492E9 cpu, 1.538500932E9 io, 6.86246547248392E8 network, 2.1331907286916697E8 memory}
         :                    +- Calc(select=[X0, X10]): rowcount = 8606.214577391234, cumulative cost = {1.239945612029124E8 rows, 5.244363148037109E9 cpu, 1.538500932E9 io, 6.860399980985346E8 network, 2.1331907286916697E8 memory}
         :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], build=[left]): rowcount = 8606.214577391234, cumulative cost = {1.2398595498833501E8 rows, 5.244363148037109E9 cpu, 1.538500932E9 io, 6.860399980985346E8 network, 2.1331907286916697E8 memory}
         :                          :- Exchange(distribution=[hash[X1]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
         :                          :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
         :                          :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
         :                          :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
         :                          :           +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
         :                          :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                          :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                          :              :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                          :              :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                          :              :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                          :              :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                          :              :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                          :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                          :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                          :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                          +- Exchange(distribution=[hash[X0]]): rowcount = 31105.739389997292, cumulative cost = {1.151031953959205E8 rows, 5.217780539200975E9 cpu, 1.384644228E9 io, 6.847718609244893E8 network, 2.0846394436865988E8 memory}
         :                             +- Calc(select=[X0, X1]): rowcount = 31105.739389997292, cumulative cost = {1.150720896565305E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
         :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 31105.739389997292, cumulative cost = {1.150409839171405E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
         :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :                                   :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :                                   :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :                                   :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :                                   :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :                                   :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :                                   :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :                                   :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :                                   :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :                                   :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :                                   :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                   :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :                                   :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :                                   :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :                                   :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :                                   :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :                                   :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :                                   :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :                                   :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :                                   :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :                                   :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :                                   :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :                                   :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                                   :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :                                   :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :                                   :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :                                   :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                   :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :                                   :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :                                   :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :                                   :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :                                   :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :                                   :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                   :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                   :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :                                   :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :                                   :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                   :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :                                   :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :                                   :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :                                   :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :                                   :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :                                   :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :                                   :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :                                   :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :                                   :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :                                   :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                   :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :                                   :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :                                   :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :                                   :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :                                   :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :                                   :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :                                   :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :                                   :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :                                   :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :                                   :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :                                   :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :                                   :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                                   :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                   :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                                   :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 77963.55088326467, cumulative cost = {1.6667489540642148E8 rows, 7.907792761346142E9 cpu, 2.000026932E9 io, 1.0370144044078634E9 network, 3.201794297304071E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[right]): rowcount = 77963.55088326467, cumulative cost = {1.6659693185553822E8 rows, 7.907792761346142E9 cpu, 2.000026932E9 io, 1.0370144044078634E9 network, 3.201794297304071E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 145011.7666362749, cumulative cost = {1.3029191091764633E8 rows, 6.378392442798258E9 cpu, 1.538493288E9 io, 8.421012033237599E8 network, 2.1022620577449974E8 memory}
                  +- Calc(select=[x, X1]): rowcount = 145011.7666362749, cumulative cost = {1.3014689915101005E8 rows, 6.354030466003364E9 cpu, 1.538493288E9 io, 8.386209209244893E8 network, 2.1022620577449974E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 145011.7666362749, cumulative cost = {1.3000188738437377E8 rows, 6.354030466003364E9 cpu, 1.538493288E9 io, 8.386209209244893E8 network, 2.1022620577449974E8 memory}
                        :- Calc(select=[x, X1]): rowcount = 966180.1109084995, cumulative cost = {1.2985574561773749E8 rows, 6.346206105116096E9 cpu, 1.538486508E9 io, 8.386141409244893E8 network, 2.1020586577449974E8 memory}
                        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 966180.1109084995, cumulative cost = {1.28889565506829E8 rows, 6.346206105116096E9 cpu, 1.538486508E9 io, 8.386141409244893E8 network, 2.1020586577449974E8 memory}
                        :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :     +- Exchange(distribution=[hash[X0]]): rowcount = 31105.739389997292, cumulative cost = {1.151031953959205E8 rows, 5.217780539200975E9 cpu, 1.384644228E9 io, 6.847718609244893E8 network, 2.0846394436865988E8 memory}
                        :        +- Calc(select=[X0, X1]): rowcount = 31105.739389997292, cumulative cost = {1.150720896565305E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 31105.739389997292, cumulative cost = {1.150409839171405E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
                        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
                        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
                        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
                        :              :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :              :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
                        :              :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :              :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :              :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :              :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :              :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :              :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :              :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :              :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :              :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :              :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :              :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :              :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :              :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :              :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :              :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :              :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :              :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :              :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :              :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :              :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :              :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
                        :              :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :              :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :              :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :              :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
                        :              :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
                        :              :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
                        :              :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
                        :              :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
                        :              :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
                        :              :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :              :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :              :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :              :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :              :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :              :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :              :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :              :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :              :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :              :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :              :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :              :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :              :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :              :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :              :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :              :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :              :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :              :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :              :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :              :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :              :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :              :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X0, X10 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, x0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:  :  :        :- [#9] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#10] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[11])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[3])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y0])(reuse_id=[19])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[7])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n:     :- [#2] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:     +- [#3] Exchange(distribution=[hash[X0]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[2])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])(reuse_id=[14])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :                 :           :- Exchange(distribution=[hash[X0]])
         :                 :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :                 :           :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :              :- Reused(reference_id=[3])
         :                 :           :              :- Exchange(distribution=[hash[x]])
         :                 :           :              :  +- Calc(select=[X1, x])
         :                 :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :                 :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :                 :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :                 :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :                 :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[12])
         :                 :           :              :        :           :     :- Reused(reference_id=[1])
         :                 :           :              :        :           :     +- Reused(reference_id=[4])
         :                 :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[13])
         :                 :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[9])
         :                 :           :              :        +- Reused(reference_id=[4])
         :                 :           :              :- Reused(reference_id=[5])
         :                 :           :              +- Reused(reference_id=[2])
         :                 :           :- Exchange(distribution=[hash[y]])
         :                 :           :  +- Calc(select=[y, X1])
         :                 :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :                 :           :        :- Exchange(distribution=[hash[x]])
         :                 :           :        :  +- Reused(reference_id=[1])
         :                 :           :        +- Exchange(distribution=[hash[X0]])
         :                 :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :                    +- Union(all=[true], union=[X0, X1])
         :                 :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :                 :           :                       :  +- Reused(reference_id=[6])
         :                 :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :                 :           :                          +- Reused(reference_id=[7])
         :                 :           :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :                 :           :  +- Reused(reference_id=[1])
         :                 :           +- Exchange(distribution=[hash[X0]])
         :                 :              +- Calc(select=[X0, X1])
         :                 :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :                    :- Reused(reference_id=[8])
         :                 :                    +- Exchange(distribution=[broadcast])(reuse_id=[10])
         :                 :                       +- Reused(reference_id=[9])
         :                 +- Reused(reference_id=[10])
         :- Reused(reference_id=[11])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X10])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X10])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], build=[left])
         :                 :- Exchange(distribution=[hash[X1]])
         :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :                 :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           +- Union(all=[true], union=[X0, X1])
         :                 :              :- Calc(select=[x0 AS X0, y AS X1])
         :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :                 :              :     :- Calc(select=[y, x0])(reuse_id=[17])
         :                 :              :     :  +- Reused(reference_id=[12])
         :                 :              :     +- Reused(reference_id=[10])
         :                 :              +- Reused(reference_id=[13])
         :                 +- Reused(reference_id=[14])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X1, x AS x0])
         :              +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X00)], select=[X1, X00, x], isBroadcast=[true], build=[right])\n:- Calc(select=[X1, X00])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :                 :- Reused(reference_id=[10])
         :                 :- Reused(reference_id=[15])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Calc(select=[X0, X1])
         :                       +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                          :- Reused(reference_id=[16])
         :                          +- Reused(reference_id=[10])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[3])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[17])
         :              :                 :           :  :- Reused(reference_id=[4])
         :              :                 :           :  :- Reused(reference_id=[9])
         :              :                 :           :  +- Reused(reference_id=[4])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[23])
         :              :                 :                 :- Reused(reference_id=[6])
         :              :                 :                 +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[10])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[11])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], build=[right])
         :                       :- Reused(reference_id=[3])
         :                       +- Exchange(distribution=[hash[X1]])
         :                          +- Reused(reference_id=[21])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[15])
         :- Reused(reference_id=[22])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[23])

Job has been submitted with JobID dad92981bb1df109821167896465836f
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT r_0.x AS X0, p2_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0 INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x) UNION (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0 INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x) UNION (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 5ea0e81b_06d1_4a1e_bd9a_29b5c478c4bd

Adding statistics for table s number 7 
Adding statistics for table a number 7 
Adding statistics for table b number 7 
Adding statistics for table r number 7 
Adding statistics for table t number 7 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT r_0.x AS X0, p2_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN a AS a_3 ON r_1.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0
                      INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0
                      INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalUnion(all=[false])
   :  :  :- LogicalUnion(all=[false])
   :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :  :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :  +- LogicalUnion(all=[false])
   :  :  :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :  :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :              +- LogicalUnion(all=[false])
   :  :  :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :  :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :  :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :              :  :- LogicalUnion(all=[false])
   :  :  :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :        +- LogicalUnion(all=[false])
   :  :  :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        +- LogicalUnion(all=[false])
   :  :  :        :  :  :           :- LogicalUnion(all=[false])
   :  :  :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :  :        :  :        :     :- LogicalUnion(all=[false])
   :  :  :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     +- LogicalJoin(condition=[=($5, $9)], joinType=[inner])
   :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalUnion(all=[false])
   :  :        :  :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :  :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalUnion(all=[false])
   :  :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     +- LogicalUnion(all=[false])
   :  :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     +- LogicalUnion(all=[false])
   :  :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :              +- LogicalUnion(all=[false])
   :  :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :  :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :           :  :- LogicalUnion(all=[false])
   :  :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     +- LogicalUnion(all=[false])
   :  :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :        +- LogicalUnion(all=[false])
   :  :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$7])
   :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalUnion(all=[false])
   :        :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalUnion(all=[false])
   :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :  +- LogicalUnion(all=[false])
   :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     +- LogicalUnion(all=[false])
   :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     +- LogicalUnion(all=[false])
   :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :              +- LogicalUnion(all=[false])
   :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :           :  :- LogicalUnion(all=[false])
   :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     +- LogicalUnion(all=[false])
   :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :        +- LogicalUnion(all=[false])
   :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$7])
      +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalProject(X0=[$3], X1=[$5])
            :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     :  +- LogicalUnion(all=[false])
            :     :     :- LogicalProject(X0=[$0], X1=[$0])
            :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :     :     +- LogicalProject(X0=[$1], X1=[$2])
            :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     +- LogicalUnion(all=[false])
            :        :- LogicalProject(X0=[$0], X1=[$5])
            :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalUnion(all=[false])
            :        :        :- LogicalProject(X0=[$0], X1=[$3])
            :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :        +- LogicalProject(X0=[$0], X1=[$0])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalProject(X0=[$0], X1=[$2])
            :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :              +- LogicalUnion(all=[false])
            :                 :- LogicalProject(X0=[$0], X1=[$3])
            :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalProject(X0=[$0], X1=[$0])
            :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$2], X1=[$1])
               +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$0], X1=[$5])
                  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalUnion(all=[false])
                  :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
                  :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
                  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$0], X1=[$2])
                  :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
                  :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
                  :  :        +- LogicalUnion(all=[false])
                  :  :           :- LogicalProject(X0=[$0], X1=[$3])
                  :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           +- LogicalProject(X0=[$0], X1=[$0])
                  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 291389.6222774381, cumulative cost = {9.059207979323035E8 rows, 3.970877543908908E10 cpu, 1.123093596E10 io, 5.169551983915167E9 network, 1.8386393476939597E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 291389.6222774381, cumulative cost = {9.056294083100262E8 rows, 3.9704113205132645E10 cpu, 1.123093596E10 io, 5.169551983915167E9 network, 1.8199904118682036E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 291389.6222774381, cumulative cost = {9.053380186877488E8 rows, 3.965282863161182E10 cpu, 1.123093596E10 io, 5.162558632980509E9 network, 1.8199904118682036E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 1607496.1816484712, cumulative cost = {9.050466290654714E8 rows, 3.9627108692705444E10 cpu, 1.123093596E10 io, 5.162558632980509E9 network, 1.8013414760424476E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 1529532.6307652064, cumulative cost = {7.367642374774014E8 rows, 3.171770843517765E10 cpu, 9.230909028E9 io, 4.1255442285726457E9 network, 1.4811620463120406E9 memory}
         :  :- Union(all=[true], union=[X0, X1]): rowcount = 1328900.0675493916, cumulative cost = {5.653047043691463E8 rows, 2.4721395213981136E10 cpu, 7.077032172E9 io, 3.2212771558676715E9 network, 1.144542727004143E9 memory}
         :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 223049.93656240555, cumulative cost = {4.1569830811126935E8 rows, 1.813493657863482E10 cpu, 5.23083948E9 io, 2.359458209602763E9 network, 8.782913736742642E8 memory}
         :  :  :  :- Calc(select=[X0, X10 AS X1]): rowcount = 185958.34998545257, cumulative cost = {2.7351629604361206E8 rows, 1.2363140227748669E10 cpu, 3.384655992E9 io, 1.616016202740982E9 network, 5.560754581352928E8 memory}
         :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 185958.34998545257, cumulative cost = {2.733303376936266E8 rows, 1.2363140227748669E10 cpu, 3.384655992E9 io, 1.616016202740982E9 network, 5.560754581352928E8 memory}
         :  :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4213114960178733E8 rows, 5.811109087765004E9 cpu, 1.846176684E9 io, 7.493725615140934E8 network, 3.2221113313897145E8 memory}
         :  :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4188395725794098E8 rows, 5.7695807739988165E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.2221113313897145E8 memory}
         :  :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4163676491409463E8 rows, 5.765625696497274E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.063908231328048E8 memory}
         :  :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4138957257024828E8 rows, 5.722119843980316E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 3.063908231328048E8 memory}
         :  :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 1363675.0195839624, cumulative cost = {1.4114238022640193E8 rows, 5.700301043666973E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 2.905705131266382E8 memory}
         :  :  :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 257843.26407266557, cumulative cost = {1.064468090562436E8 rows, 4.334164087639591E9 cpu, 1.384628568E9 io, 5.598423426130545E8 network, 2.330948592940027E8 memory}
         :  :  :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :  :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :  :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :  :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :  :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :  :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :  :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :  :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :  :  :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :  :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :  :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :  :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :  :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :  :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :  :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :  :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :  :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :  :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :  :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :  :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :  :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :  :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :  :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :  :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :  :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :  :  :  :     :              :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :  :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :  :  :     :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :     :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :  :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :  :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :  :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :  :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :  :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :  :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :  :  :  :     :                       +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :  :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :  :  :  :     :                                +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :  :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :  :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :  :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :  :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :  :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :  :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :  :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :  :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 992529.9893899972, cumulative cost = {1.3101322974185382E8 rows, 6.542113361317773E9 cpu, 1.538479308E9 io, 8.666436412268888E8 network, 2.2002155374092555E8 memory}
         :  :  :  :        +- Calc(select=[x, X1]): rowcount = 992529.9893899972, cumulative cost = {1.3002069975246382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 992529.9893899972, cumulative cost = {1.2902816976307382E8 rows, 6.375368323100253E9 cpu, 1.538479308E9 io, 8.428229214815289E8 network, 2.2002155374092555E8 memory}
         :  :  :  :              :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 206771.5959333153, cumulative cost = {1.1521544977368382E8 rows, 5.245537430332787E9 cpu, 1.384637028E9 io, 6.889806414815289E8 network, 2.0844234436865988E8 memory}
         :  :  :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :  :  :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :  :  :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :  :  :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :  :  :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :  :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :  :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :  :  :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :  :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :  :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :  :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :  :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :  :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :  :  :                             :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :                             :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :  :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :  :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :  :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :  :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :  :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :  :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :  :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :  :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :  :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :  :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :  :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :  :  :                             :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :  :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :  :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :  :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :  :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :  :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :  :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :  :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :  :  :                                   :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :                                   :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                                   +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :  :  :  :                                      +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :  :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :  :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :  :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :  :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :  :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :  :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :  :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :  :  :                                            :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :  :                                            :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :  :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :  :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :  :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :  :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :  :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :  :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :  :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :  :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :  :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :  :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :  :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :  :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :  +- Calc(select=[X0, x0 AS X1]): rowcount = 37091.586576952985, cumulative cost = {1.4195896213109484E8 rows, 5.771573300949587E9 cpu, 1.846183488E9 io, 7.43442006861781E8 network, 3.222159155389714E8 memory}
         :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 37091.586576952985, cumulative cost = {1.419218705445179E8 rows, 5.771573300949587E9 cpu, 1.846183488E9 io, 7.43442006861781E8 network, 3.222159155389714E8 memory}
         :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4188395725794098E8 rows, 5.7695807739988165E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.2221113313897145E8 memory}
         :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 247192.34384635327, cumulative cost = {1.4163676491409463E8 rows, 5.765625696497274E9 cpu, 1.846176684E9 io, 7.43439945261781E8 network, 3.063908231328048E8 memory}
         :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 247192.34384635327, cumulative cost = {1.4138957257024828E8 rows, 5.722119843980316E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 3.063908231328048E8 memory}
         :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 1363675.0195839624, cumulative cost = {1.4114238022640193E8 rows, 5.700301043666973E9 cpu, 1.846176684E9 io, 7.375073290094686E8 network, 2.905705131266382E8 memory}
         :  :  :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 257843.26407266557, cumulative cost = {1.064468090562436E8 rows, 4.334164087639591E9 cpu, 1.384628568E9 io, 5.598423426130545E8 network, 2.330948592940027E8 memory}
         :  :  :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 56815.38727619545, cumulative cost = {4.4826816665192574E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :  :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 56815.38727619545, cumulative cost = {4.477000127791638E7 rows, 1.4879665211198258E9 cpu, 6.15396288E8 io, 1.866597570451214E8 network, 1.0546011877422895E8 memory}
         :  :  :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :  :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :  :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :  :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :  :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :  :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 4024.00925581335, cumulative cost = {8860873.74288371 rows, 2.2651304825347934E7 cpu, 1.53862644E8 io, 740441.7030696564 network, 3402209.231627392 memory}
         :  :  :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 4024.00925581335, cumulative cost = {8856849.733627897 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :  :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4024.00925581335, cumulative cost = {8852825.724372083 rows, 2.20074633444178E7 cpu, 1.53862644E8 io, 643865.480930136 network, 3402209.231627392 memory}
         :  :  :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8847671.71511627 rows, 2.1702449517441086E7 cpu, 1.53855864E8 io, 637085.480930136 network, 3381869.231627392 memory}
         :  :  :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26261.728372089, cumulative cost = {8821409.98674418 rows, 2.128226186348766E7 cpu, 1.53855864E8 io, 637085.480930136 network, 1701118.615813696 memory}
         :  :  :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26261.728372089, cumulative cost = {8795148.25837209 rows, 1.6660197669999998E7 cpu, 1.53855864E8 io, 6804.0 network, 1701118.615813696 memory}
         :  :  :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144876.90999999997, cumulative cost = {8768886.530000001 rows, 1.434216711E7 cpu, 1.53855864E8 io, 6804.0 network, 20368.0 memory}
         :  :  :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144311.90999999997, cumulative cost = {8622879.620000001 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :  :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 144311.90999999997, cumulative cost = {8478567.71 rows, 1.41972902E7 cpu, 1.53849084E8 io, 6804.0 network, 20368.0 memory}
         :  :  :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 201027.8767964701, cumulative cost = {6.136214912697835E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :  :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 201027.8767964701, cumulative cost = {6.116112125018188E7 rows, 2.8459397232556925E9 cpu, 7.6923228E8 io, 3.7318258556793314E8 network, 1.2763474051977378E8 memory}
         :  :  :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :  :  :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :  :  :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :  :  :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :  :  :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :  :  :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :  :  :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :  :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :  :  :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :  :  :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 965440.6060576444, cumulative cost = {2.4733035986376785E7 rows, 1.309975973992438E9 cpu, 3.07698636E8 io, 1.7826938448382965E8 network, 4816442.097377036 memory}
         :  :  :        :           :           +- Calc(select=[x, X0]): rowcount = 965440.6060576444, cumulative cost = {2.376759538031914E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :  :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], build=[right]): rowcount = 965440.6060576444, cumulative cost = {2.2802154774261497E7 rows, 1.147781952174754E9 cpu, 3.07698636E8 io, 1.550988099384462E8 network, 4816442.097377036 memory}
         :  :  :        :           :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :        :           :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                 +- Exchange(distribution=[hash[X1]]): rowcount = 26175.70705096215, cumulative cost = {9016524.168203853 rows, 1.9395826518346377E7 cpu, 1.53856356E8 io, 1256529.9384461832 network, 3350602.5025231554 memory}
         :  :  :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :  :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :  :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :  :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :  :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :  :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 1105831.755511297, cumulative cost = {3.3331896150574356E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 1105831.755511297, cumulative cost = {3.2226064395063058E7 rows, 1.3647732810077987E9 cpu, 4.61548116E8 io, 1.7766498639641407E8 network, 5.747565383263544E7 memory}
         :  :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 962116.7034086465, cumulative cost = {1.8300042639551762E7 rows, 2.2889962738052928E8 cpu, 3.07705836E8 io, 2.382270639641407E7 network, 3597118.4417512375 memory}
         :  :  :        :                    +- Calc(select=[x, X0]): rowcount = 962116.7034086465, cumulative cost = {1.7337925936143115E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 962116.7034086465, cumulative cost = {1.6375809232734468E7 rows, 6.726402120787667E7 cpu, 3.07705836E8 io, 731905.5146065553 network, 3597118.4417512375 memory}
         :  :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 4016.3560576443224, cumulative cost = {9003597.529325822 rows, 1.5951130359415522E7 cpu, 1.53863556E8 io, 731905.5146065553 network, 3372202.5025231554 memory}
         :  :  :        :                             +- Calc(select=[X0, X1]): rowcount = 4016.3560576443224, cumulative cost = {8999581.173268178 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :  :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4016.3560576443224, cumulative cost = {8995564.817210535 rows, 1.530851339019243E7 cpu, 1.53863556E8 io, 635512.9692230916 network, 3372202.5025231554 memory}
         :  :  :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8990348.46115289 rows, 1.4998307733784733E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 3350602.5025231554 memory}
         :  :  :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26175.70705096215, cumulative cost = {8964172.754101928 rows, 1.457949642096934E7 cpu, 1.53856356E8 io, 628312.9692230916 network, 1675357.2512615777 memory}
         :  :  :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26175.70705096215, cumulative cost = {8937997.047050966 rows, 9972571.98 cpu, 1.53856356E8 io, 96.0 network, 1675357.2512615777 memory}
         :  :  :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 144402.35999999996, cumulative cost = {8911821.340000004 rows, 7662134.220000001 cpu, 1.53856356E8 io, 96.0 network, 112.0 memory}
         :  :  :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 144317.45999999996, cumulative cost = {8766682.180000003 rows, 7517006.86 cpu, 1.53849552E8 io, 72.0 network, 84.0 memory}
         :  :  :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 144227.30999999997, cumulative cost = {8621582.420000002 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 144227.30999999997, cumulative cost = {8477355.110000001 rows, 7371929.4 cpu, 1.53842328E8 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 90.14999999999999, cumulative cost = {782.3 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 90.14999999999999, cumulative cost = {692.15 rows, 760.0 cpu, 7224.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :  :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 84.89999999999999, cumulative cost = {821.6999999999999 rows, 14308.999999999998 cpu, 6804.0 io, 2061.6 network, 28.0 memory}
         :  :  :           +- Calc(select=[x, x0]): rowcount = 84.89999999999999, cumulative cost = {736.8 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 84.89999999999999, cumulative cost = {651.9 rows, 725.0 cpu, 6804.0 io, 24.0 network, 28.0 memory}
         :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  +- Calc(select=[x AS X0, X1]): rowcount = 1105850.130986986, cumulative cost = {1.4827749619032753E8 rows, 6.585129735278768E9 cpu, 1.846192692E9 io, 8.618189462649084E8 network, 2.662513533298789E8 memory}
         :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 1105850.130986986, cumulative cost = {1.4717164605934054E8 rows, 6.585129735278768E9 cpu, 1.846192692E9 io, 8.618189462649084E8 network, 2.662513533298789E8 memory}
         :  :        :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :        +- Exchange(distribution=[hash[x]]): rowcount = 962239.2065799073, cumulative cost = {1.3324560592835355E8 rows, 5.449255101626128E9 cpu, 1.692350412E9 io, 7.079766662649084E8 network, 2.123659577614041E8 memory}
         :  :           +- Calc(select=[x, X1]): rowcount = 962239.2065799073, cumulative cost = {1.3228336672177364E8 rows, 5.287598914920704E9 cpu, 1.692350412E9 io, 6.848829253069906E8 network, 2.123659577614041E8 memory}
         :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 962239.2065799073, cumulative cost = {1.3132112751519373E8 rows, 5.287598914920704E9 cpu, 1.692350412E9 io, 6.848829253069906E8 network, 2.123659577614041E8 memory}
         :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                 +- Exchange(distribution=[broadcast]): rowcount = 4833.043866049656, cumulative cost = {1.2394879330861382E8 rows, 5.236279490569776E9 cpu, 1.538508132E9 io, 6.848829253069906E8 network, 2.1209530730490533E8 memory}
         :  :                    +- Calc(select=[X1, x AS x0]): rowcount = 4833.043866049656, cumulative cost = {1.2394396026474777E8 rows, 5.235506203551208E9 cpu, 1.538508132E9 io, 6.847669322542055E8 network, 2.1209530730490533E8 memory}
         :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X00)], select=[X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 4833.043866049656, cumulative cost = {1.2393912722088172E8 rows, 5.235506203551208E9 cpu, 1.538508132E9 io, 6.847669322542055E8 network, 2.1209530730490533E8 memory}
         :  :                          :- Calc(select=[X1, X00]): rowcount = 31620.29244033104, cumulative cost = {1.2393309417701566E8 rows, 5.235152441211685E9 cpu, 1.538500932E9 io, 6.847597322542055E8 network, 2.1207370730490533E8 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 31620.29244033104, cumulative cost = {1.2390147388457534E8 rows, 5.235152441211685E9 cpu, 1.538500932E9 io, 6.847597322542055E8 network, 2.1207370730490533E8 memory}
         :  :                          :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :  :                          :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :  :                          :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :  :                          :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :  :                          :     :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                          :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :  :                          :     :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :  :                          :     :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                          :     :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                          :     :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                          :     :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                          :     :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                          :     :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                          :     :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                          :     :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                          :     :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                          :     :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                          :     :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                          :     :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                          :     :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                          :     :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                          :     :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                          :     :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                          :     :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                          :     :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                          :     :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                          :     :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :  :                          :     :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                          :     :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :  :                          :     :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                          :     :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :  :                          :     :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :  :                          :     :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :  :                          :     :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :  :                          :     :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                          :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :  :                          :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                          :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :  :                          :     :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                          :     :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :  :                          :     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :  :                          :     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :  :                          :     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :  :                          :     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :  :                          :     :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                          :     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :  :                          :     :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :  :                          :     :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :  :                          :     :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                          :     :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :  :                          :     :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                          :     :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                          :     :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                          :     :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                          :     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :  :                          :     :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :  :                          :     :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :  :                          :     :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :  :                          :     :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :  :                          :     :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                          :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 4030.3536688916415, cumulative cost = {8861175.414384509 rows, 2.2666223398878183E7 cpu, 1.53863904E8 io, 741609.075076062 network, 3405663.130787534 memory}
         :  :                          :        +- Calc(select=[X0, X1]): rowcount = 4030.3536688916415, cumulative cost = {8857145.060715618 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
         :  :                          :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 4030.3536688916415, cumulative cost = {8853114.707046727 rows, 2.202136681185552E7 cpu, 1.53863904E8 io, 644880.5870226626 network, 3405663.130787534 memory}
         :  :                          :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
         :  :                          :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
         :  :                          :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
         :  :                          :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
         :  :                          :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :                          :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :  :                          :              :           :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                          :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X10 AS X1]): rowcount = 200632.5632158147, cumulative cost = {1.6993000047748986E8 rows, 6.994783688565748E9 cpu, 2.153876856E9 io, 9.04267072704974E8 network, 3.366193193078976E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 200632.5632158147, cumulative cost = {1.6972936791427404E8 rows, 6.994783688565748E9 cpu, 2.153876856E9 io, 9.04267072704974E8 network, 3.366193193078976E8 memory}
         :        :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
         :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
         :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
         :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
         :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
         :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
         :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
         :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
         :        :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[x]]): rowcount = 962805.1821866086, cumulative cost = {1.3330167796404961E8 rows, 5.458841022693461E9 cpu, 1.692343212E9 io, 7.093538716208706E8 network, 2.1380102088550088E8 memory}
         :           +- Calc(select=[x, X10]): rowcount = 962805.1821866086, cumulative cost = {1.32338872781863E8 rows, 5.297089752086111E9 cpu, 1.692343212E9 io, 6.86246547248392E8 network, 2.1380102088550088E8 memory}
         :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right]): rowcount = 962805.1821866086, cumulative cost = {1.313760675996764E8 rows, 5.297089752086111E9 cpu, 1.692343212E9 io, 6.86246547248392E8 network, 2.1380102088550088E8 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 8606.214577391234, cumulative cost = {1.240031674174898E8 rows, 5.245740142369492E9 cpu, 1.538500932E9 io, 6.86246547248392E8 network, 2.1331907286916697E8 memory}
         :                    +- Calc(select=[X0, X10]): rowcount = 8606.214577391234, cumulative cost = {1.239945612029124E8 rows, 5.244363148037109E9 cpu, 1.538500932E9 io, 6.860399980985346E8 network, 2.1331907286916697E8 memory}
         :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], build=[left]): rowcount = 8606.214577391234, cumulative cost = {1.2398595498833501E8 rows, 5.244363148037109E9 cpu, 1.538500932E9 io, 6.860399980985346E8 network, 2.1331907286916697E8 memory}
         :                          :- Exchange(distribution=[hash[X1]]): rowcount = 26269.02445927761, cumulative cost = {8874153.377837114 rows, 2.6123610725339938E7 cpu, 1.53856704E8 io, 1268137.1740453253 network, 3384063.130787534 memory}
         :                          :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8847884.353377836 rows, 2.17104146161813E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 3384063.130787534 memory}
         :                          :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 26269.02445927761, cumulative cost = {8821615.328918558 rows, 2.129011022483286E7 cpu, 1.53856704E8 io, 637680.5870226626 network, 1702845.565393767 memory}
         :                          :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 26269.02445927761, cumulative cost = {8795346.30445928 rows, 1.6666761919999998E7 cpu, 1.53856704E8 io, 7224.0 network, 1702845.565393767 memory}
         :                          :           +- Union(all=[true], union=[X0, X1]): rowcount = 144917.15999999997, cumulative cost = {8769077.280000001 rows, 1.434808736E7 cpu, 1.53856704E8 io, 7224.0 network, 21628.0 memory}
         :                          :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 144317.15999999997, cumulative cost = {8622960.120000001 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                          :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 144317.15999999997, cumulative cost = {8478642.96 rows, 1.42031702E7 cpu, 1.53849504E8 io, 7224.0 network, 21628.0 memory}
         :                          :              :     :- Calc(select=[y, x0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                          :              :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                          :              :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                          :              :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                          :              :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                          :              :     +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                          :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                          :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                          +- Exchange(distribution=[hash[X0]]): rowcount = 31105.739389997292, cumulative cost = {1.151031953959205E8 rows, 5.217780539200975E9 cpu, 1.384644228E9 io, 6.847718609244893E8 network, 2.0846394436865988E8 memory}
         :                             +- Calc(select=[X0, X1]): rowcount = 31105.739389997292, cumulative cost = {1.150720896565305E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
         :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 31105.739389997292, cumulative cost = {1.150409839171405E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
         :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
         :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
         :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
         :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
         :                                   :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :                                   :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
         :                                   :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
         :                                   :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :                                   :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :                                   :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :                                   :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :                                   :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :                                   :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :                                   :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                   :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :                                   :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :                                   :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :                                   :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :                                   :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :                                   :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :                                   :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :                                   :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :                                   :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :                                   :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :                                   :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :                                   :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                                   :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                   :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
         :                                   :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :                                   :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
         :                                   :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                   :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
         :                                   :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
         :                                   :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
         :                                   :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
         :                                   :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
         :                                   :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                   :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                   :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :                                   :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
         :                                   :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                   :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
         :                                   :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :                                   :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
         :                                   :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
         :                                   :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
         :                                   :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
         :                                   :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
         :                                   :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :                                   :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
         :                                   :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
         :                                   :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
         :                                   :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :                                   :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
         :                                   :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :                                   :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :                                   :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :                                   :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :                                   :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
         :                                   :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
         :                                   :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
         :                                   :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
         :                                   :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
         :                                   :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
         :                                   :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                   :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
         :                                   :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
         :                                   :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                                   :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         :                                   +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
         :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 77963.55088326467, cumulative cost = {1.6667489540642148E8 rows, 7.907792761346142E9 cpu, 2.000026932E9 io, 1.0370144044078634E9 network, 3.201794297304071E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[right]): rowcount = 77963.55088326467, cumulative cost = {1.6659693185553822E8 rows, 7.907792761346142E9 cpu, 2.000026932E9 io, 1.0370144044078634E9 network, 3.201794297304071E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 374745.2392521563, cumulative cost = {3.622705738700863E7 rows, 1.5252422625007763E9 cpu, 4.61533644E8 io, 1.949132010841035E8 network, 1.01832565024276E8 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.585231214775647E7 rows, 1.4622850623064141E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 1.01832565024276E8 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 374745.2392521563, cumulative cost = {3.5477566908504315E7 rows, 1.4562891384783797E9 cpu, 4.61533644E8 io, 1.8591931534205174E8 network, 7.7848869712138E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 374745.2392521563, cumulative cost = {3.510282166925216E7 rows, 1.3903339763700001E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 7.7848869712138E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 2067340.41, cumulative cost = {3.472807643E7 rows, 1.3572565298100002E9 cpu, 4.61533644E8 io, 1.769254296E8 network, 5.38651744E7 memory}
               :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 961599.0, cumulative cost = {8334423.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 961599.0, cumulative cost = {7372824.0 rows, 5.137568E7 cpu, 1.5384906E8 io, 6780.0 network, 20340.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 1105741.41, cumulative cost = {2.432631302E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 1105741.41, cumulative cost = {2.322057161E7 rows, 1.3038135094E9 cpu, 3.07684584E8 io, 1.769186496E8 network, 5.38448344E7 memory}
               :                    :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[x]]): rowcount = 961514.3999999999, cumulative cost = {9294640.200000001 rows, 1.679446742E8 cpu, 1.53842304E8 io, 2.3076369599999998E7 network, 28.0 memory}
               :                       +- Calc(select=[x, y0]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 145011.7666362749, cumulative cost = {1.3029191091764633E8 rows, 6.378392442798258E9 cpu, 1.538493288E9 io, 8.421012033237599E8 network, 2.1022620577449974E8 memory}
                  +- Calc(select=[x, X1]): rowcount = 145011.7666362749, cumulative cost = {1.3014689915101005E8 rows, 6.354030466003364E9 cpu, 1.538493288E9 io, 8.386209209244893E8 network, 2.1022620577449974E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 145011.7666362749, cumulative cost = {1.3000188738437377E8 rows, 6.354030466003364E9 cpu, 1.538493288E9 io, 8.386209209244893E8 network, 2.1022620577449974E8 memory}
                        :- Calc(select=[x, X1]): rowcount = 966180.1109084995, cumulative cost = {1.2985574561773749E8 rows, 6.346206105116096E9 cpu, 1.538486508E9 io, 8.386141409244893E8 network, 2.1020586577449974E8 memory}
                        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 966180.1109084995, cumulative cost = {1.28889565506829E8 rows, 6.346206105116096E9 cpu, 1.538486508E9 io, 8.386141409244893E8 network, 2.1020586577449974E8 memory}
                        :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :     +- Exchange(distribution=[hash[X0]]): rowcount = 31105.739389997292, cumulative cost = {1.151031953959205E8 rows, 5.217780539200975E9 cpu, 1.384644228E9 io, 6.847718609244893E8 network, 2.0846394436865988E8 memory}
                        :        +- Calc(select=[X0, X1]): rowcount = 31105.739389997292, cumulative cost = {1.150720896565305E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 31105.739389997292, cumulative cost = {1.150409839171405E8 rows, 5.212554774983456E9 cpu, 1.384644228E9 io, 6.840253231791294E8 network, 2.0846394436865988E8 memory}
                        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.150086781777505E8 rows, 5.210799802215989E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 2.0844234436865988E8 memory}
                        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 206771.5959333153, cumulative cost = {1.1480190658181718E8 rows, 5.207491456681056E9 cpu, 1.384637028E9 io, 6.840181231791294E8 network, 1.952089622289277E8 memory}
                        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 206771.5959333153, cumulative cost = {1.1459513498588386E8 rows, 5.171099655796793E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.952089622289277E8 memory}
                        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 1140687.6756224853, cumulative cost = {1.1438836338995054E8 rows, 5.152848652986834E9 cpu, 1.384637028E9 io, 6.790556048767298E8 network, 1.8197558008919552E8 memory}
                        :              :           :- Calc(select=[X10 AS X0, X1]): rowcount = 175115.28760917907, cumulative cost = {6.2360548979872726E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 175115.28760917907, cumulative cost = {6.218543369226354E7 rows, 2.718909621190959E9 cpu, 7.69239456E8 io, 3.5739427620564723E8 network, 1.112971898194097E8 memory}
                        :              :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 179761.68948028254, cumulative cost = {3.623319088764287E7 rows, 1.328521145834818E9 cpu, 4.61548092E8 io, 1.7147682713648033E8 network, 6.914175207815145E7 memory}
                        :              :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :              :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :              :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :              :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :              :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :              :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :              :           :     :              :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :              :           :     :              :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :              :           :     :              :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :              :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :              :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :              :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :              :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :              :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :              :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :              :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :              :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :              :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :              :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :              :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :              :           :     +- Exchange(distribution=[hash[y]]): rowcount = 987673.561247578, cumulative cost = {2.577712751701149E7 rows, 1.381048993350318E9 cpu, 3.07691364E8 io, 1.8591744906916687E8 network, 3.208878313036242E7 memory}
                        :              :           :        +- Calc(select=[y, X1]): rowcount = 987673.561247578, cumulative cost = {2.478945395576391E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :              :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 987673.561247578, cumulative cost = {2.380178039451633E7 rows, 1.2151198350607247E9 cpu, 3.07691364E8 io, 1.6221328359922498E8 network, 3.208878313036242E7 memory}
                        :              :           :              :- Exchange(distribution=[hash[x]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :              :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 174395.40831718707, cumulative cost = {9993916.833268752 rows, 8.554795179418734E7 cpu, 1.53849084E8 io, 8371003.599224979 network, 2.2322640264599945E7 memory}
                        :              :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9819521.424951565 rows, 5.624952319689991E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 2.2322640264599945E7 memory}
                        :              :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174395.40831718707, cumulative cost = {9645126.016634377 rows, 5.345919666382492E7 cpu, 1.53849084E8 io, 4185513.7996124895 network, 1.1161334132299973E7 memory}
                        :              :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174395.40831718707, cumulative cost = {9470730.608317189 rows, 2.2765604799999997E7 cpu, 1.53849084E8 io, 24.0 network, 1.1161334132299973E7 memory}
                        :              :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 962079.3999999999, cumulative cost = {9296335.200000001 rows, 7372334.4 cpu, 1.53849084E8 io, 24.0 network, 28.0 memory}
                        :              :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 565.0, cumulative cost = {1130.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           +- Calc(select=[x AS X0, X1]): rowcount = 965572.3880133063, cumulative cost = {5.088712673445533E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 965572.3880133063, cumulative cost = {4.992155434644203E7 rows, 2.432798344120252E9 cpu, 6.15397572E8 io, 3.216613286710826E8 network, 7.067839026978582E7 memory}
                        :              :                 :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :              :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :                 +- Exchange(distribution=[hash[X0]]): rowcount = 27054.25342204238, cumulative cost = {3.613579195842872E7 rows, 1.3044051900928757E9 cpu, 4.61555292E8 io, 1.678190486710826E8 network, 6.916335207815145E7 memory}
                        :              :                    +- Calc(select=[X0, X1]): rowcount = 27054.25342204238, cumulative cost = {3.6108737705006674E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 27054.25342204238, cumulative cost = {3.608168345158463E7 rows, 1.2998600755179727E9 cpu, 4.61555292E8 io, 1.6716974658895355E8 network, 6.916335207815145E7 memory}
                        :              :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.6053429198162585E7 rows, 1.2983211820021305E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 6.914175207815145E7 memory}
                        :              :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 179761.68948028254, cumulative cost = {3.58736675086823E7 rows, 1.2954449949704459E9 cpu, 4.61548092E8 io, 1.6716254658895355E8 network, 5.763700395141336E7 memory}
                        :              :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 179761.68948028254, cumulative cost = {3.569390581920202E7 rows, 1.263806937621916E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 5.763700395141336E7 memory}
                        :              :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 991683.324847793, cumulative cost = {3.551414412972174E7 rows, 1.2479400044243515E9 cpu, 4.61548092E8 io, 1.6284826604142678E8 network, 4.613225582467528E7 memory}
                        :              :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 965438.3119366686, cumulative cost = {2.4649195320829205E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :              :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], build=[right]): rowcount = 965438.3119366686, cumulative cost = {2.3683757008892536E7 rows, 1.189206850751338E9 cpu, 3.07691808E8 io, 1.5865581997564688E8 network, 2.378846347384912E7 memory}
                        :              :                          :           :     :- Exchange(distribution=[hash[y]]): rowcount = 6410095.0, cumulative cost = {1.282019E7 rows, 1.07689596E9 cpu, 1.5384228E8 io, 1.5384228E8 network, 0.0 memory}
                        :              :                          :           :     :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :                          :           :     +- Exchange(distribution=[hash[x]]): rowcount = 26160.4129111244, cumulative cost = {9898128.696955865 rows, 6.082084744804896E7 cpu, 1.53849528E8 io, 4813539.97564689 network, 2.2323480350826155E7 memory}
                        :              :                          :           :        +- Calc(select=[X1, x]): rowcount = 26160.4129111244, cumulative cost = {9871968.28404474 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :              :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 26160.4129111244, cumulative cost = {9845807.871133616 rows, 5.642589807898006E7 cpu, 1.53849528E8 io, 4185690.065779904 network, 2.2323480350826155E7 memory}
                        :              :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :              :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :              :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :              :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 26245.0129111244, cumulative cost = {9873265.48404474 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :              :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 26245.0129111244, cumulative cost = {9847020.471133616 rows, 5.774147034816586E7 cpu, 1.53856284E8 io, 4192446.065779904 network, 2.2343792350826155E7 memory}
                        :              :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9819645.458222492 rows, 5.625133632623923E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 2.2323452350826155E7 memory}
                        :              :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 174401.75274082934, cumulative cost = {9645243.705481661 rows, 5.346090828238596E7 cpu, 1.53849504E8 io, 4185666.065779904 network, 1.1161740175413078E7 memory}
                        :              :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 174401.75274082934, cumulative cost = {9470841.952740831 rows, 2.2766199799999997E7 cpu, 1.53849504E8 io, 24.0 network, 1.1161740175413078E7 memory}
                        :              :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 962114.3999999999, cumulative cost = {9296440.200000001 rows, 7372369.4 cpu, 1.53849504E8 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 961514.3999999999, cumulative cost = {8333125.800000001 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 961514.3999999999, cumulative cost = {7371611.4 rows, 6410255.0 cpu, 1.53842304E8 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 6410095.0, cumulative cost = {6410095.0 rows, 0.0 cpu, 1.5384228E8 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 600.0, cumulative cost = {1200.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                        :              :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}
                        :              :                          +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        :              +- Exchange(distribution=[broadcast]): rowcount = 600.0, cumulative cost = {1200.0 rows, 96000.0 cpu, 7200.0 io, 7200.0 network, 0.0 memory}
                        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 600.0, cumulative cost = {600.0 rows, 0.0 cpu, 7200.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 565.0, cumulative cost = {1130.0 rows, 90400.0 cpu, 6780.0 io, 6780.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 565.0, cumulative cost = {565.0 rows, 0.0 cpu, 6780.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X0, X10 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, x0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:  :  :        :- [#9] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#10] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[11])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[6])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[3])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y0])(reuse_id=[19])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[7])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[4])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n:     :- [#2] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n:     +- [#3] Exchange(distribution=[hash[X0]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[2])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])(reuse_id=[14])
         :           +- Calc(select=[X0, X1])
         :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[hash[X0]])\n])
         :                 :           :- Exchange(distribution=[hash[X0]])
         :                 :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[8])
         :                 :           :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], build=[right])\n:     :- [#1] Exchange(distribution=[hash[y]])\n:     +- [#2] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :              :- Reused(reference_id=[3])
         :                 :           :              :- Exchange(distribution=[hash[x]])
         :                 :           :              :  +- Calc(select=[X1, x])
         :                 :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :                 :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[5])
         :                 :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :                 :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :                 :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[12])
         :                 :           :              :        :           :     :- Reused(reference_id=[1])
         :                 :           :              :        :           :     +- Reused(reference_id=[4])
         :                 :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[13])
         :                 :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[9])
         :                 :           :              :        +- Reused(reference_id=[4])
         :                 :           :              :- Reused(reference_id=[5])
         :                 :           :              +- Reused(reference_id=[2])
         :                 :           :- Exchange(distribution=[hash[y]])
         :                 :           :  +- Calc(select=[y, X1])
         :                 :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :                 :           :        :- Exchange(distribution=[hash[x]])
         :                 :           :        :  +- Reused(reference_id=[1])
         :                 :           :        +- Exchange(distribution=[hash[X0]])
         :                 :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :                    +- Union(all=[true], union=[X0, X1])
         :                 :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :                 :           :                       :  +- Reused(reference_id=[6])
         :                 :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :                 :           :                          +- Reused(reference_id=[7])
         :                 :           :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :                 :           :  +- Reused(reference_id=[1])
         :                 :           +- Exchange(distribution=[hash[X0]])
         :                 :              +- Calc(select=[X0, X1])
         :                 :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :                    :- Reused(reference_id=[8])
         :                 :                    +- Exchange(distribution=[broadcast])(reuse_id=[10])
         :                 :                       +- Reused(reference_id=[9])
         :                 +- Reused(reference_id=[10])
         :- Reused(reference_id=[11])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X10])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X10])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], build=[left])
         :                 :- Exchange(distribution=[hash[X1]])
         :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :                 :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           +- Union(all=[true], union=[X0, X1])
         :                 :              :- Calc(select=[x0 AS X0, y AS X1])
         :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :                 :              :     :- Calc(select=[y, x0])(reuse_id=[17])
         :                 :              :     :  +- Reused(reference_id=[12])
         :                 :              :     +- Reused(reference_id=[10])
         :                 :              +- Reused(reference_id=[13])
         :                 +- Reused(reference_id=[14])
         :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :  +- Reused(reference_id=[1])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X1, x AS x0])
         :              +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X00)], select=[X1, X00, x], isBroadcast=[true], build=[right])\n:- Calc(select=[X1, X00])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :                 :- Reused(reference_id=[10])
         :                 :- Reused(reference_id=[15])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Calc(select=[X0, X1])
         :                       +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                          :- Reused(reference_id=[16])
         :                          +- Reused(reference_id=[10])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[3])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[17])
         :              :                 :           :  :- Reused(reference_id=[4])
         :              :                 :           :  :- Reused(reference_id=[9])
         :              :                 :           :  +- Reused(reference_id=[4])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[23])
         :              :                 :                 :- Reused(reference_id=[6])
         :              :                 :                 +- Reused(reference_id=[4])
         :              :                 +- Reused(reference_id=[10])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[11])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], build=[right])
         :                       :- Reused(reference_id=[3])
         :                       +- Exchange(distribution=[hash[X1]])
         :                          +- Reused(reference_id=[21])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Exchange(distribution=[hash[y]], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[15])
         :- Reused(reference_id=[22])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[23])

Job has been submitted with JobID 228b9c5c6db3fefce03a6699cde48300
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT r_0.x AS X0, p2_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0 INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x) UNION (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0 INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x) UNION (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: ebc847a0_b8ba_4d05_95b6_5dbb5f9c4dab

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT r_0.x AS X0, p2_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN a AS a_3 ON r_1.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0
                      INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0
                      INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalUnion(all=[false])
   :  :  :- LogicalUnion(all=[false])
   :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :  :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :  +- LogicalUnion(all=[false])
   :  :  :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :  :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :              +- LogicalUnion(all=[false])
   :  :  :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :  :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :  :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :              :  :- LogicalUnion(all=[false])
   :  :  :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :        +- LogicalUnion(all=[false])
   :  :  :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        +- LogicalUnion(all=[false])
   :  :  :        :  :  :           :- LogicalUnion(all=[false])
   :  :  :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :  :        :  :        :     :- LogicalUnion(all=[false])
   :  :  :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     +- LogicalJoin(condition=[=($5, $9)], joinType=[inner])
   :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalUnion(all=[false])
   :  :        :  :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :  :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalUnion(all=[false])
   :  :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     +- LogicalUnion(all=[false])
   :  :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     +- LogicalUnion(all=[false])
   :  :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :              +- LogicalUnion(all=[false])
   :  :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :  :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :           :  :- LogicalUnion(all=[false])
   :  :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     +- LogicalUnion(all=[false])
   :  :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :        +- LogicalUnion(all=[false])
   :  :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$7])
   :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalUnion(all=[false])
   :        :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalUnion(all=[false])
   :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :  +- LogicalUnion(all=[false])
   :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     +- LogicalUnion(all=[false])
   :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     +- LogicalUnion(all=[false])
   :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :              +- LogicalUnion(all=[false])
   :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :           :  :- LogicalUnion(all=[false])
   :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     +- LogicalUnion(all=[false])
   :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :        +- LogicalUnion(all=[false])
   :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$7])
      +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalProject(X0=[$3], X1=[$5])
            :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     :  +- LogicalUnion(all=[false])
            :     :     :- LogicalProject(X0=[$0], X1=[$0])
            :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :     :     +- LogicalProject(X0=[$1], X1=[$2])
            :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     +- LogicalUnion(all=[false])
            :        :- LogicalProject(X0=[$0], X1=[$5])
            :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalUnion(all=[false])
            :        :        :- LogicalProject(X0=[$0], X1=[$3])
            :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :        +- LogicalProject(X0=[$0], X1=[$0])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalProject(X0=[$0], X1=[$2])
            :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :              +- LogicalUnion(all=[false])
            :                 :- LogicalProject(X0=[$0], X1=[$3])
            :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalProject(X0=[$0], X1=[$0])
            :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$2], X1=[$1])
               +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$0], X1=[$5])
                  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalUnion(all=[false])
                  :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
                  :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
                  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$0], X1=[$2])
                  :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
                  :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
                  :  :        +- LogicalUnion(all=[false])
                  :  :           :- LogicalProject(X0=[$0], X1=[$3])
                  :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           +- LogicalProject(X0=[$0], X1=[$0])
                  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 186453.26127817223, cumulative cost = {5.1814824227953863E8 rows, 1.5067649173452831E10 cpu, 7.18644552E9 io, 1.83084615307195E9 network, 1.176702703621838E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 186453.26127817223, cumulative cost = {5.179617890182605E8 rows, 1.506466592127238E10 cpu, 7.18644552E9 io, 1.83084615307195E9 network, 1.1647696949000351E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 186453.26127817223, cumulative cost = {5.177753357569823E8 rows, 1.5031850147287422E10 cpu, 7.18644552E9 io, 1.8263712748012738E9 network, 1.1647696949000351E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 1028598.4216527595, cumulative cost = {5.175888824957042E8 rows, 1.5015392572540977E10 cpu, 7.18644552E9 io, 1.8263712748012738E9 network, 1.1528366861782322E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 978708.9556082261, cumulative cost = {4.263126618006592E8 rows, 1.2711105649856869E10 cpu, 5.90666982E9 io, 1.5565600851660419E9 network, 9.479223076546025E8 memory}
         :  :- Union(all=[true], union=[X0, X1]): rowcount = 850329.19800326, cumulative cost = {3.289213160457102E8 rows, 1.030531385308638E10 cpu, 4.528448436E9 io, 1.2737279472506974E9 network, 7.324854113656306E8 memory}
         :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 142725.99607080535, cumulative cost = {2.454932809323575E8 rows, 8.158296891185533E9 cpu, 3.347105544E9 io, 1.0175793338458989E9 network, 5.620747256135461E8 memory}
         :  :  :  :- Calc(select=[X0, X10 AS X1]): rowcount = 118989.71587917917, cumulative cost = {1.5861406448875377E8 rows, 5.154184797582242E9 cpu, 2.1657702E9 io, 6.403021112967027E8 network, 3.558706321430149E8 memory}
         :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 118989.71587917917, cumulative cost = {1.584950747728746E8 rows, 5.154184797582242E9 cpu, 2.1657702E9 io, 6.403021112967027E8 network, 3.558706321430149E8 memory}
         :  :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 158172.26794417453, cumulative cost = {8.684651635509382E7 rows, 3.0292646146782875E9 cpu, 1.181329764E9 io, 3.810716625798564E8 network, 2.0620016787053126E8 memory}
         :  :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.668834408714965E7 rows, 3.0026916736636662E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 2.0620016787053126E8 memory}
         :  :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 158172.26794417453, cumulative cost = {8.653017181920548E7 rows, 3.0001609173765593E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 1.960771427221041E8 memory}
         :  :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.63719995512613E7 rows, 2.9723225982183847E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.960771427221041E8 memory}
         :  :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 872581.9223611606, cumulative cost = {8.621382728331713E7 rows, 2.958361287460606E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.8595411757367694E8 memory}
         :  :  :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 164990.46928463125, cumulative cost = {6.401247283393105E7 rows, 2.0841845215939853E9 cpu, 8.8599408E8 io, 2.597945565115611E8 network, 1.4917127712477264E8 memory}
         :  :  :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :  :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :  :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :  :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :  :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :  :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :  :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :  :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :  :  :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :  :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :  :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :  :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :  :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :  :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :  :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :  :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :  :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :  :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :  :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :  :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :  :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :  :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :  :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :  :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :  :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :  :  :  :     :              :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :  :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :  :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :  :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :  :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :  :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :  :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :  :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :  :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :  :  :  :     :                       +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :  :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :  :  :  :     :                                +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :  :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :  :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :  :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :  :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :  :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :  :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :  :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :  :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 635092.5045836867, cumulative cost = {7.152956870190158E7 rows, 2.1185740647237313E9 cpu, 9.84440436E8 io, 2.5923044871684632E8 network, 1.4081281726760986E8 memory}
         :  :  :  :        +- Calc(select=[x, X1]): rowcount = 635092.5045836867, cumulative cost = {7.08944761973179E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 635092.5045836867, cumulative cost = {7.025938369273421E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :  :  :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 132308.0305579119, cumulative cost = {6.1421007188150525E7 rows, 1.2889310677092087E9 cpu, 8.86001028E8 io, 1.4554882060683784E8 network, 1.334035675563668E8 memory}
         :  :  :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :  :  :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :  :  :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :  :  :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :  :  :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :  :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :  :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :  :  :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :  :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :  :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :  :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :  :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :  :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :  :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :  :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :  :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :  :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :  :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :  :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :  :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :  :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :  :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :  :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :  :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :  :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :  :  :                             :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :  :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :  :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :  :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :  :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :  :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :  :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :  :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :  :  :  :                                      +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :  :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :  :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :  :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :  :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :  :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :  :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :  :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :  :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :  :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :  :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :  :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :  :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :  :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :  :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :  :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :  :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :  :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :  :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :  :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :  :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  +- Calc(select=[X0, x0 AS X1]): rowcount = 23736.280191626178, cumulative cost = {8.67364904475329E7 rows, 3.0039693676072197E9 cpu, 1.181335344E9 io, 3.772772225491962E8 network, 2.0620409347053126E8 memory}
         :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 23736.280191626178, cumulative cost = {8.671275416734128E7 rows, 3.0039693676072197E9 cpu, 1.181335344E9 io, 3.772772225491962E8 network, 2.0620409347053126E8 memory}
         :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.668834408714965E7 rows, 3.0026916736636662E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 2.0620016787053126E8 memory}
         :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 158172.26794417453, cumulative cost = {8.653017181920548E7 rows, 3.0001609173765593E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 1.960771427221041E8 memory}
         :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.63719995512613E7 rows, 2.9723225982183847E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.960771427221041E8 memory}
         :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 872581.9223611606, cumulative cost = {8.621382728331713E7 rows, 2.958361287460606E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.8595411757367694E8 memory}
         :  :  :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 164990.46928463125, cumulative cost = {6.401247283393105E7 rows, 2.0841845215939853E9 cpu, 8.8599408E8 io, 2.597945565115611E8 network, 1.4917127712477264E8 memory}
         :  :  :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :  :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :  :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :  :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :  :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :  :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :  :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :  :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :  :  :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :  :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :  :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :  :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :  :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :  :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :  :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :  :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :  :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :  :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :  :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :  :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :  :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :  :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :  :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :  :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :  :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :  :  :        :           :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :  :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :  :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :  :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :  :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :  :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :  :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :  :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :  :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :  :  :        :                    +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :  :  :        :                             +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :  :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :  :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :  :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :  :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :  :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :  :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :  :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :  :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :  :           +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  +- Calc(select=[x AS X0, X1]): rowcount = 707603.2019324546, cumulative cost = {8.257770591534947E7 rows, 2.1461666327028456E9 cpu, 1.181342892E9 io, 2.5614861340479842E8 network, 1.7041068575208446E8 memory}
         :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 707603.2019324546, cumulative cost = {8.187010271341701E7 rows, 2.1461666327028456E9 cpu, 1.181342892E9 io, 2.5614861340479842E8 network, 1.7041068575208446E8 memory}
         :  :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615712.6795496978, cumulative cost = {7.295921551148455E7 rows, 1.419351939266448E9 cpu, 1.082903484E9 io, 1.5770920540479842E8 network, 1.359307756973014E8 memory}
         :  :           +- Calc(select=[x, X1]): rowcount = 615712.6795496978, cumulative cost = {7.234350283193485E7 rows, 1.3159122091020987E9 cpu, 1.082903484E9 io, 1.4293210109560567E8 network, 1.359307756973014E8 memory}
         :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 615712.6795496978, cumulative cost = {7.172779015238516E7 rows, 1.3159122091020987E9 cpu, 1.082903484E9 io, 1.4293210109560567E8 network, 1.359307756973014E8 memory}
         :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                 +- Exchange(distribution=[broadcast]): rowcount = 3109.196997985824, cumulative cost = {6.7010435472835466E7 rows, 1.2830741995261147E9 cpu, 9.84464076E8 io, 1.4293210109560567E8 network, 1.3575666066541418E8 memory}
         :  :                    +- Calc(select=[X1, x AS x0]): rowcount = 3109.196997985824, cumulative cost = {6.700732627583748E7 rows, 1.282576728006437E9 cpu, 9.84464076E8 io, 1.4285748036765403E8 network, 1.3575666066541418E8 memory}
         :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X00)], select=[X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 3109.196997985824, cumulative cost = {6.7004217078839496E7 rows, 1.282576728006437E9 cpu, 9.84464076E8 io, 1.4285748036765403E8 network, 1.3575666066541418E8 memory}
         :  :                          :- Calc(select=[X1, X00]): rowcount = 20235.97998657216, cumulative cost = {6.700012388184151E7 rows, 1.2823321841665444E9 cpu, 9.84458172E8 io, 1.4285157636765403E8 network, 1.3573894866541418E8 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20235.97998657216, cumulative cost = {6.697988790185494E7 rows, 1.2823321841665444E9 cpu, 9.84458172E8 io, 1.4285157636765403E8 network, 1.3573894866541418E8 memory}
         :  :                          :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :  :                          :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :  :                          :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :  :                          :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :  :                          :     :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                          :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                          :     :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :  :                          :     :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                          :     :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                          :     :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                          :     :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                          :     :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                          :     :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                          :     :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                          :     :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                          :     :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                          :     :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                          :     :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                          :     :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                          :     :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                          :     :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                          :     :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                          :     :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                          :     :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                          :     :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                          :     :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :                          :     :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                          :     :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                          :     :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                          :     :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :                          :     :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :                          :     :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :                          :     :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :                          :     :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                          :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                          :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :  :                          :     :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                          :     :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                          :     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                          :     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                          :     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                          :     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                          :     :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                          :     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                          :     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                          :     :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                          :     :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                          :     :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                          :     :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                          :     :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                          :     :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                          :     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                          :     :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                          :     :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                          :     :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                          :     :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                          :     :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                          :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 2598.502685902536, cumulative cost = {5670952.76427576 rows, 1.4549613325114453E7 cpu, 9.8457144E7 io, 478148.49420606665 network, 2189864.958636831 memory}
         :  :                          :        +- Calc(select=[X0, X1]): rowcount = 2598.502685902536, cumulative cost = {5668354.261589858 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
         :  :                          :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2598.502685902536, cumulative cost = {5665755.758903955 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
         :  :                          :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
         :  :                          :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
         :  :                          :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
         :  :                          :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
         :  :                          :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :                          :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :                          :              :           :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                          :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X10 AS X1]): rowcount = 128379.75760496623, cumulative cost = {9.641263679934074E7 rows, 2.4048130878148804E9 cpu, 1.378221384E9 io, 2.828321379153445E8 network, 2.1543689628897196E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 128379.75760496623, cumulative cost = {9.628425704173577E7 rows, 2.4048130878148804E9 cpu, 1.378221384E9 io, 2.828321379153445E8 network, 2.1543689628897196E8 memory}
         :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[x]]): rowcount = 616073.2055060182, cumulative cost = {7.297492750085579E7 rows, 1.42198758064203E9 cpu, 1.08289758E9 io, 1.5811122654604414E8 network, 1.3684469957332075E8 memory}
         :           +- Calc(select=[x, X10]): rowcount = 616073.2055060182, cumulative cost = {7.235885429534978E7 rows, 1.318487282117019E9 cpu, 1.08289758E9 io, 1.433254696138997E8 network, 1.3684469957332075E8 memory}
         :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right]): rowcount = 616073.2055060182, cumulative cost = {7.174278108984376E7 rows, 1.318487282117019E9 cpu, 1.08289758E9 io, 1.433254696138997E8 network, 1.3684469957332075E8 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 5512.703373455553, cumulative cost = {6.702506588433775E7 rows, 1.2856300444900312E9 cpu, 9.84458172E8 io, 1.433254696138997E8 network, 1.3653598818440723E8 memory}
         :                    +- Calc(select=[X0, X10]): rowcount = 5512.703373455553, cumulative cost = {6.70195531809643E7 rows, 1.2847480119502783E9 cpu, 9.84458172E8 io, 1.4319316473293677E8 network, 1.3653598818440723E8 memory}
         :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 5512.703373455553, cumulative cost = {6.7014040477590844E7 rows, 1.2847480119502783E9 cpu, 9.84458172E8 io, 1.4319316473293677E8 network, 1.3653598818440723E8 memory}
         :                          :- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
         :                          :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
         :                          :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
         :                          :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
         :                          :           +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
         :                          :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                          :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                          :              :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                          :              :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                          :              :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                          :              :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                          :              :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                          :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                          :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                          :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                          +- Calc(select=[X0, X1]): rowcount = 19920.004583686783, cumulative cost = {6.132952316675998E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
         :                             +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19920.004583686783, cumulative cost = {6.1309603162176296E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
         :                                :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :                                :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :                                :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :                                :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :                                :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :                                :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :                                :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :                                :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :                                :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :                                :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :                                :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :                                :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :                                :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :                                :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :                                :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :                                :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :                                :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :                                :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :                                :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :                                :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :                                :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :                                :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :                                :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :                                :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :                                :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                                :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :                                :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :                                :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :                                :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                                :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :                                :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :                                :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :                                :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :                                :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :                                :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :                                :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :                                :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :                                :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :                                :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :                                :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :                                :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :                                :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :                                :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :                                :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :                                :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :                                :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :                                :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :                                :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :                                :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :                                :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :                                :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :                                :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :                                :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :                                :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :                                :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :                                :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :                                :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                                :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                                :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 49889.466044533445, cumulative cost = {9.024762227339225E7 rows, 2.3032583242624564E9 cpu, 1.2797757E9 io, 2.69811189635232E8 network, 2.0491437852362955E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[right]): rowcount = 49889.466044533445, cumulative cost = {9.019773280734771E7 rows, 2.3032583242624564E9 cpu, 1.2797757E9 io, 2.69811189635232E8 network, 2.0491437852362955E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 92804.59510313295, cumulative cost = {6.696689355802816E7 rows, 1.3246189659728289E9 cpu, 9.84451896E8 io, 1.4509027826593164E8 network, 1.3455346781305325E8 memory}
                  +- Calc(select=[x, X1]): rowcount = 92804.59510313295, cumulative cost = {6.687408896292503E7 rows, 1.3090277939955025E9 cpu, 9.84451896E8 io, 1.4286296798345643E8 network, 1.3455346781305325E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 92804.59510313295, cumulative cost = {6.67812843678219E7 rows, 1.3090277939955025E9 cpu, 9.84451896E8 io, 1.4286296798345643E8 network, 1.3455346781305325E8 memory}
                        :- Calc(select=[x, X1]): rowcount = 618234.300687553, cumulative cost = {6.668755377271877E7 rows, 1.304004135590002E9 cpu, 9.8444634E8 io, 1.4285741198345643E8 network, 1.3453679981305325E8 memory}
                        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 618234.300687553, cumulative cost = {6.606931947203122E7 rows, 1.304004135590002E9 cpu, 9.8444634E8 io, 1.4285741198345643E8 network, 1.3453679981305325E8 memory}
                        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :     +- Exchange(distribution=[broadcast]): rowcount = 19920.004583686783, cumulative cost = {6.134944317134367E7 rows, 1.2710316395533326E9 cpu, 8.86006932E8 io, 1.4285741198345643E8 network, 1.334212795563668E8 memory}
                        :        +- Calc(select=[X0, X1]): rowcount = 19920.004583686783, cumulative cost = {6.132952316675998E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19920.004583686783, cumulative cost = {6.1309603162176296E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
                        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
                        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
                        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
                        :              :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :              :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
                        :              :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :              :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :              :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :              :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :              :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :              :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :              :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :              :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :              :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :              :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :              :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :              :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :              :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :              :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :              :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :              :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :              :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :              :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :              :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :              :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
                        :              :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :              :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :              :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :              :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
                        :              :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
                        :              :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
                        :              :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
                        :              :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
                        :              :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
                        :              :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :              :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :              :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :              :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :              :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :              :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :              :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :              :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :              :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :              :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :              :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :              :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :              :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :              :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :              :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :              :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :              :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :              :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :              :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :              :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :              :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X0, X10 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, x0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:  :  :        :- [#9] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#10] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[10])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[14])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y0])(reuse_id=[19])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[6])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:     :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[2])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])(reuse_id=[13])
         :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :- Exchange(distribution=[hash[X0]])
         :                 :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :                 :           :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :              :  +- Reused(reference_id=[1])
         :                 :           :              :- Exchange(distribution=[broadcast])
         :                 :           :              :  +- Calc(select=[X1, x])
         :                 :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :                 :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :                 :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :                 :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :                 :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :                 :           :              :        :           :     :- Reused(reference_id=[1])
         :                 :           :              :        :           :     +- Reused(reference_id=[3])
         :                 :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[12])
         :                 :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[8])
         :                 :           :              :        +- Reused(reference_id=[3])
         :                 :           :              :- Reused(reference_id=[4])
         :                 :           :              +- Reused(reference_id=[2])
         :                 :           :- Exchange(distribution=[hash[y]])
         :                 :           :  +- Calc(select=[y, X1])
         :                 :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :                 :           :        :- Exchange(distribution=[hash[x]])
         :                 :           :        :  +- Reused(reference_id=[1])
         :                 :           :        +- Exchange(distribution=[hash[X0]])
         :                 :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :                    +- Union(all=[true], union=[X0, X1])
         :                 :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :                 :           :                       :  +- Reused(reference_id=[5])
         :                 :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :                 :           :                          +- Reused(reference_id=[6])
         :                 :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :  +- Reused(reference_id=[1])
         :                 :           +- Exchange(distribution=[broadcast])
         :                 :              +- Calc(select=[X0, X1])
         :                 :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :                    :- Reused(reference_id=[7])
         :                 :                    +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :                 :                       +- Reused(reference_id=[8])
         :                 +- Reused(reference_id=[9])
         :- Reused(reference_id=[10])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X10])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X10])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])
         :                 :- Exchange(distribution=[broadcast])
         :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :                 :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           +- Union(all=[true], union=[X0, X1])
         :                 :              :- Calc(select=[x0 AS X0, y AS X1])
         :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :                 :              :     :- Calc(select=[y, x0])(reuse_id=[17])
         :                 :              :     :  +- Reused(reference_id=[11])
         :                 :              :     +- Reused(reference_id=[9])
         :                 :              +- Reused(reference_id=[12])
         :                 +- Reused(reference_id=[13])
         :- Reused(reference_id=[14])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X1, x AS x0])
         :              +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X00)], select=[X1, X00, x], isBroadcast=[true], build=[right])\n:- Calc(select=[X1, X00])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :                 :- Reused(reference_id=[9])
         :                 :- Reused(reference_id=[15])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Calc(select=[X0, X1])
         :                       +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                          :- Reused(reference_id=[16])
         :                          +- Reused(reference_id=[9])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[14])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[17])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[8])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[23])
         :              :                 :                 :- Reused(reference_id=[5])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Reused(reference_id=[21])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[14])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[15])
         :- Reused(reference_id=[22])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[23])

Job has been submitted with JobID e63c9c6c956ca8358478ce01f2938a20
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT r_0.x AS X0, p2_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0 INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x) UNION (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0 INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x) UNION (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 76582b9e_260f_44d6_8387_73856547f14e

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT r_0.x AS X0, p2_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN a AS a_3 ON r_1.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0
                      INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0
                      INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalUnion(all=[false])
   :  :  :- LogicalUnion(all=[false])
   :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :  :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :  +- LogicalUnion(all=[false])
   :  :  :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :  :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :              +- LogicalUnion(all=[false])
   :  :  :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :  :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :  :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :              :  :- LogicalUnion(all=[false])
   :  :  :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :        +- LogicalUnion(all=[false])
   :  :  :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        +- LogicalUnion(all=[false])
   :  :  :        :  :  :           :- LogicalUnion(all=[false])
   :  :  :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :  :        :  :        :     :- LogicalUnion(all=[false])
   :  :  :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     +- LogicalJoin(condition=[=($5, $9)], joinType=[inner])
   :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalUnion(all=[false])
   :  :        :  :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :  :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalUnion(all=[false])
   :  :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     +- LogicalUnion(all=[false])
   :  :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     +- LogicalUnion(all=[false])
   :  :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :              +- LogicalUnion(all=[false])
   :  :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :  :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :           :  :- LogicalUnion(all=[false])
   :  :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     +- LogicalUnion(all=[false])
   :  :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :        +- LogicalUnion(all=[false])
   :  :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$7])
   :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalUnion(all=[false])
   :        :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalUnion(all=[false])
   :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :  +- LogicalUnion(all=[false])
   :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     +- LogicalUnion(all=[false])
   :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     +- LogicalUnion(all=[false])
   :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :              +- LogicalUnion(all=[false])
   :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :           :  :- LogicalUnion(all=[false])
   :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     +- LogicalUnion(all=[false])
   :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :        +- LogicalUnion(all=[false])
   :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$7])
      +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalProject(X0=[$3], X1=[$5])
            :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     :  +- LogicalUnion(all=[false])
            :     :     :- LogicalProject(X0=[$0], X1=[$0])
            :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :     :     +- LogicalProject(X0=[$1], X1=[$2])
            :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     +- LogicalUnion(all=[false])
            :        :- LogicalProject(X0=[$0], X1=[$5])
            :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalUnion(all=[false])
            :        :        :- LogicalProject(X0=[$0], X1=[$3])
            :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :        +- LogicalProject(X0=[$0], X1=[$0])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalProject(X0=[$0], X1=[$2])
            :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :              +- LogicalUnion(all=[false])
            :                 :- LogicalProject(X0=[$0], X1=[$3])
            :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalProject(X0=[$0], X1=[$0])
            :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$2], X1=[$1])
               +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$0], X1=[$5])
                  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalUnion(all=[false])
                  :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
                  :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
                  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$0], X1=[$2])
                  :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
                  :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
                  :  :        +- LogicalUnion(all=[false])
                  :  :           :- LogicalProject(X0=[$0], X1=[$3])
                  :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           +- LogicalProject(X0=[$0], X1=[$0])
                  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 186453.26127817223, cumulative cost = {5.1814824227953863E8 rows, 1.5067649173452831E10 cpu, 7.18644552E9 io, 1.83084615307195E9 network, 1.176702703621838E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 186453.26127817223, cumulative cost = {5.179617890182605E8 rows, 1.506466592127238E10 cpu, 7.18644552E9 io, 1.83084615307195E9 network, 1.1647696949000351E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 186453.26127817223, cumulative cost = {5.177753357569823E8 rows, 1.5031850147287422E10 cpu, 7.18644552E9 io, 1.8263712748012738E9 network, 1.1647696949000351E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 1028598.4216527595, cumulative cost = {5.175888824957042E8 rows, 1.5015392572540977E10 cpu, 7.18644552E9 io, 1.8263712748012738E9 network, 1.1528366861782322E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 978708.9556082261, cumulative cost = {4.263126618006592E8 rows, 1.2711105649856869E10 cpu, 5.90666982E9 io, 1.5565600851660419E9 network, 9.479223076546025E8 memory}
         :  :- Union(all=[true], union=[X0, X1]): rowcount = 850329.19800326, cumulative cost = {3.289213160457102E8 rows, 1.030531385308638E10 cpu, 4.528448436E9 io, 1.2737279472506974E9 network, 7.324854113656306E8 memory}
         :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 142725.99607080535, cumulative cost = {2.454932809323575E8 rows, 8.158296891185533E9 cpu, 3.347105544E9 io, 1.0175793338458989E9 network, 5.620747256135461E8 memory}
         :  :  :  :- Calc(select=[X0, X10 AS X1]): rowcount = 118989.71587917917, cumulative cost = {1.5861406448875377E8 rows, 5.154184797582242E9 cpu, 2.1657702E9 io, 6.403021112967027E8 network, 3.558706321430149E8 memory}
         :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 118989.71587917917, cumulative cost = {1.584950747728746E8 rows, 5.154184797582242E9 cpu, 2.1657702E9 io, 6.403021112967027E8 network, 3.558706321430149E8 memory}
         :  :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 158172.26794417453, cumulative cost = {8.684651635509382E7 rows, 3.0292646146782875E9 cpu, 1.181329764E9 io, 3.810716625798564E8 network, 2.0620016787053126E8 memory}
         :  :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.668834408714965E7 rows, 3.0026916736636662E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 2.0620016787053126E8 memory}
         :  :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 158172.26794417453, cumulative cost = {8.653017181920548E7 rows, 3.0001609173765593E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 1.960771427221041E8 memory}
         :  :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.63719995512613E7 rows, 2.9723225982183847E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.960771427221041E8 memory}
         :  :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 872581.9223611606, cumulative cost = {8.621382728331713E7 rows, 2.958361287460606E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.8595411757367694E8 memory}
         :  :  :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 164990.46928463125, cumulative cost = {6.401247283393105E7 rows, 2.0841845215939853E9 cpu, 8.8599408E8 io, 2.597945565115611E8 network, 1.4917127712477264E8 memory}
         :  :  :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :  :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :  :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :  :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :  :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :  :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :  :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :  :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :  :  :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :  :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :  :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :  :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :  :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :  :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :  :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :  :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :  :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :  :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :  :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :  :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :  :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :  :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :  :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :  :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :  :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :  :  :  :     :              :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :  :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :  :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :  :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :  :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :  :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :  :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :  :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :  :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :  :  :  :     :                       +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :  :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :  :  :  :     :                                +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :  :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :  :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :  :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :  :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :  :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :  :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :  :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :  :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 635092.5045836867, cumulative cost = {7.152956870190158E7 rows, 2.1185740647237313E9 cpu, 9.84440436E8 io, 2.5923044871684632E8 network, 1.4081281726760986E8 memory}
         :  :  :  :        +- Calc(select=[x, X1]): rowcount = 635092.5045836867, cumulative cost = {7.08944761973179E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 635092.5045836867, cumulative cost = {7.025938369273421E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :  :  :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 132308.0305579119, cumulative cost = {6.1421007188150525E7 rows, 1.2889310677092087E9 cpu, 8.86001028E8 io, 1.4554882060683784E8 network, 1.334035675563668E8 memory}
         :  :  :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :  :  :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :  :  :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :  :  :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :  :  :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :  :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :  :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :  :  :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :  :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :  :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :  :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :  :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :  :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :  :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :  :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :  :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :  :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :  :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :  :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :  :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :  :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :  :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :  :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :  :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :  :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :  :  :                             :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :  :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :  :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :  :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :  :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :  :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :  :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :  :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :  :  :  :                                      +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :  :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :  :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :  :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :  :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :  :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :  :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :  :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :  :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :  :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :  :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :  :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :  :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :  :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :  :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :  :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :  :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :  :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :  :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :  :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :  :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  +- Calc(select=[X0, x0 AS X1]): rowcount = 23736.280191626178, cumulative cost = {8.67364904475329E7 rows, 3.0039693676072197E9 cpu, 1.181335344E9 io, 3.772772225491962E8 network, 2.0620409347053126E8 memory}
         :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 23736.280191626178, cumulative cost = {8.671275416734128E7 rows, 3.0039693676072197E9 cpu, 1.181335344E9 io, 3.772772225491962E8 network, 2.0620409347053126E8 memory}
         :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.668834408714965E7 rows, 3.0026916736636662E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 2.0620016787053126E8 memory}
         :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 158172.26794417453, cumulative cost = {8.653017181920548E7 rows, 3.0001609173765593E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 1.960771427221041E8 memory}
         :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.63719995512613E7 rows, 2.9723225982183847E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.960771427221041E8 memory}
         :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 872581.9223611606, cumulative cost = {8.621382728331713E7 rows, 2.958361287460606E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.8595411757367694E8 memory}
         :  :  :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 164990.46928463125, cumulative cost = {6.401247283393105E7 rows, 2.0841845215939853E9 cpu, 8.8599408E8 io, 2.597945565115611E8 network, 1.4917127712477264E8 memory}
         :  :  :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :  :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :  :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :  :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :  :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :  :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :  :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :  :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :  :  :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :  :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :  :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :  :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :  :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :  :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :  :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :  :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :  :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :  :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :  :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :  :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :  :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :  :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :  :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :  :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :  :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :  :  :        :           :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :  :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :  :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :  :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :  :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :  :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :  :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :  :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :  :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :  :  :        :                    +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :  :  :        :                             +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :  :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :  :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :  :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :  :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :  :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :  :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :  :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :  :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :  :           +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  +- Calc(select=[x AS X0, X1]): rowcount = 707603.2019324546, cumulative cost = {8.257770591534947E7 rows, 2.1461666327028456E9 cpu, 1.181342892E9 io, 2.5614861340479842E8 network, 1.7041068575208446E8 memory}
         :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 707603.2019324546, cumulative cost = {8.187010271341701E7 rows, 2.1461666327028456E9 cpu, 1.181342892E9 io, 2.5614861340479842E8 network, 1.7041068575208446E8 memory}
         :  :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615712.6795496978, cumulative cost = {7.295921551148455E7 rows, 1.419351939266448E9 cpu, 1.082903484E9 io, 1.5770920540479842E8 network, 1.359307756973014E8 memory}
         :  :           +- Calc(select=[x, X1]): rowcount = 615712.6795496978, cumulative cost = {7.234350283193485E7 rows, 1.3159122091020987E9 cpu, 1.082903484E9 io, 1.4293210109560567E8 network, 1.359307756973014E8 memory}
         :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 615712.6795496978, cumulative cost = {7.172779015238516E7 rows, 1.3159122091020987E9 cpu, 1.082903484E9 io, 1.4293210109560567E8 network, 1.359307756973014E8 memory}
         :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                 +- Exchange(distribution=[broadcast]): rowcount = 3109.196997985824, cumulative cost = {6.7010435472835466E7 rows, 1.2830741995261147E9 cpu, 9.84464076E8 io, 1.4293210109560567E8 network, 1.3575666066541418E8 memory}
         :  :                    +- Calc(select=[X1, x AS x0]): rowcount = 3109.196997985824, cumulative cost = {6.700732627583748E7 rows, 1.282576728006437E9 cpu, 9.84464076E8 io, 1.4285748036765403E8 network, 1.3575666066541418E8 memory}
         :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X00)], select=[X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 3109.196997985824, cumulative cost = {6.7004217078839496E7 rows, 1.282576728006437E9 cpu, 9.84464076E8 io, 1.4285748036765403E8 network, 1.3575666066541418E8 memory}
         :  :                          :- Calc(select=[X1, X00]): rowcount = 20235.97998657216, cumulative cost = {6.700012388184151E7 rows, 1.2823321841665444E9 cpu, 9.84458172E8 io, 1.4285157636765403E8 network, 1.3573894866541418E8 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20235.97998657216, cumulative cost = {6.697988790185494E7 rows, 1.2823321841665444E9 cpu, 9.84458172E8 io, 1.4285157636765403E8 network, 1.3573894866541418E8 memory}
         :  :                          :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :  :                          :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :  :                          :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :  :                          :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :  :                          :     :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                          :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                          :     :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :  :                          :     :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                          :     :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                          :     :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                          :     :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                          :     :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                          :     :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                          :     :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                          :     :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                          :     :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                          :     :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                          :     :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                          :     :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                          :     :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                          :     :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                          :     :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                          :     :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                          :     :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                          :     :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                          :     :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :                          :     :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                          :     :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                          :     :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                          :     :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :                          :     :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :                          :     :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :                          :     :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :                          :     :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                          :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                          :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :  :                          :     :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                          :     :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                          :     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                          :     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                          :     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                          :     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                          :     :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                          :     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                          :     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                          :     :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                          :     :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                          :     :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                          :     :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                          :     :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                          :     :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                          :     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                          :     :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                          :     :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                          :     :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                          :     :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                          :     :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                          :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 2598.502685902536, cumulative cost = {5670952.76427576 rows, 1.4549613325114453E7 cpu, 9.8457144E7 io, 478148.49420606665 network, 2189864.958636831 memory}
         :  :                          :        +- Calc(select=[X0, X1]): rowcount = 2598.502685902536, cumulative cost = {5668354.261589858 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
         :  :                          :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2598.502685902536, cumulative cost = {5665755.758903955 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
         :  :                          :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
         :  :                          :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
         :  :                          :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
         :  :                          :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
         :  :                          :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :                          :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :                          :              :           :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                          :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X10 AS X1]): rowcount = 128379.75760496623, cumulative cost = {9.641263679934074E7 rows, 2.4048130878148804E9 cpu, 1.378221384E9 io, 2.828321379153445E8 network, 2.1543689628897196E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 128379.75760496623, cumulative cost = {9.628425704173577E7 rows, 2.4048130878148804E9 cpu, 1.378221384E9 io, 2.828321379153445E8 network, 2.1543689628897196E8 memory}
         :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[x]]): rowcount = 616073.2055060182, cumulative cost = {7.297492750085579E7 rows, 1.42198758064203E9 cpu, 1.08289758E9 io, 1.5811122654604414E8 network, 1.3684469957332075E8 memory}
         :           +- Calc(select=[x, X10]): rowcount = 616073.2055060182, cumulative cost = {7.235885429534978E7 rows, 1.318487282117019E9 cpu, 1.08289758E9 io, 1.433254696138997E8 network, 1.3684469957332075E8 memory}
         :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right]): rowcount = 616073.2055060182, cumulative cost = {7.174278108984376E7 rows, 1.318487282117019E9 cpu, 1.08289758E9 io, 1.433254696138997E8 network, 1.3684469957332075E8 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 5512.703373455553, cumulative cost = {6.702506588433775E7 rows, 1.2856300444900312E9 cpu, 9.84458172E8 io, 1.433254696138997E8 network, 1.3653598818440723E8 memory}
         :                    +- Calc(select=[X0, X10]): rowcount = 5512.703373455553, cumulative cost = {6.70195531809643E7 rows, 1.2847480119502783E9 cpu, 9.84458172E8 io, 1.4319316473293677E8 network, 1.3653598818440723E8 memory}
         :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 5512.703373455553, cumulative cost = {6.7014040477590844E7 rows, 1.2847480119502783E9 cpu, 9.84458172E8 io, 1.4319316473293677E8 network, 1.3653598818440723E8 memory}
         :                          :- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
         :                          :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
         :                          :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
         :                          :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
         :                          :           +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
         :                          :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                          :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                          :              :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                          :              :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                          :              :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                          :              :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                          :              :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                          :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                          :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                          :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                          +- Calc(select=[X0, X1]): rowcount = 19920.004583686783, cumulative cost = {6.132952316675998E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
         :                             +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19920.004583686783, cumulative cost = {6.1309603162176296E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
         :                                :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :                                :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :                                :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :                                :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :                                :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :                                :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :                                :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :                                :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :                                :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :                                :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :                                :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :                                :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :                                :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :                                :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :                                :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :                                :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :                                :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :                                :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :                                :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :                                :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :                                :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :                                :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :                                :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :                                :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :                                :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                                :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :                                :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :                                :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :                                :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                                :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :                                :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :                                :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :                                :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :                                :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :                                :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :                                :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :                                :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :                                :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :                                :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :                                :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :                                :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :                                :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :                                :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :                                :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :                                :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :                                :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :                                :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :                                :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :                                :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :                                :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :                                :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :                                :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :                                :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :                                :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :                                :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :                                :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :                                :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                                :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                                :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 49889.466044533445, cumulative cost = {9.024762227339225E7 rows, 2.3032583242624564E9 cpu, 1.2797757E9 io, 2.69811189635232E8 network, 2.0491437852362955E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[right]): rowcount = 49889.466044533445, cumulative cost = {9.019773280734771E7 rows, 2.3032583242624564E9 cpu, 1.2797757E9 io, 2.69811189635232E8 network, 2.0491437852362955E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 92804.59510313295, cumulative cost = {6.696689355802816E7 rows, 1.3246189659728289E9 cpu, 9.84451896E8 io, 1.4509027826593164E8 network, 1.3455346781305325E8 memory}
                  +- Calc(select=[x, X1]): rowcount = 92804.59510313295, cumulative cost = {6.687408896292503E7 rows, 1.3090277939955025E9 cpu, 9.84451896E8 io, 1.4286296798345643E8 network, 1.3455346781305325E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 92804.59510313295, cumulative cost = {6.67812843678219E7 rows, 1.3090277939955025E9 cpu, 9.84451896E8 io, 1.4286296798345643E8 network, 1.3455346781305325E8 memory}
                        :- Calc(select=[x, X1]): rowcount = 618234.300687553, cumulative cost = {6.668755377271877E7 rows, 1.304004135590002E9 cpu, 9.8444634E8 io, 1.4285741198345643E8 network, 1.3453679981305325E8 memory}
                        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 618234.300687553, cumulative cost = {6.606931947203122E7 rows, 1.304004135590002E9 cpu, 9.8444634E8 io, 1.4285741198345643E8 network, 1.3453679981305325E8 memory}
                        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :     +- Exchange(distribution=[broadcast]): rowcount = 19920.004583686783, cumulative cost = {6.134944317134367E7 rows, 1.2710316395533326E9 cpu, 8.86006932E8 io, 1.4285741198345643E8 network, 1.334212795563668E8 memory}
                        :        +- Calc(select=[X0, X1]): rowcount = 19920.004583686783, cumulative cost = {6.132952316675998E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19920.004583686783, cumulative cost = {6.1309603162176296E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
                        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
                        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
                        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
                        :              :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :              :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
                        :              :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :              :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :              :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :              :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :              :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :              :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :              :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :              :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :              :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :              :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :              :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :              :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :              :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :              :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :              :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :              :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :              :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :              :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :              :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :              :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
                        :              :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :              :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :              :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :              :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
                        :              :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
                        :              :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
                        :              :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
                        :              :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
                        :              :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
                        :              :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :              :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :              :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :              :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :              :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :              :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :              :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :              :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :              :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :              :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :              :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :              :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :              :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :              :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :              :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :              :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :              :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :              :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :              :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :              :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :              :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X0, X10 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, x0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:  :  :        :- [#9] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#10] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[10])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[14])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y0])(reuse_id=[19])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[6])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:     :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[2])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])(reuse_id=[13])
         :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :- Exchange(distribution=[hash[X0]])
         :                 :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :                 :           :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :              :  +- Reused(reference_id=[1])
         :                 :           :              :- Exchange(distribution=[broadcast])
         :                 :           :              :  +- Calc(select=[X1, x])
         :                 :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :                 :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :                 :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :                 :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :                 :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :                 :           :              :        :           :     :- Reused(reference_id=[1])
         :                 :           :              :        :           :     +- Reused(reference_id=[3])
         :                 :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[12])
         :                 :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[8])
         :                 :           :              :        +- Reused(reference_id=[3])
         :                 :           :              :- Reused(reference_id=[4])
         :                 :           :              +- Reused(reference_id=[2])
         :                 :           :- Exchange(distribution=[hash[y]])
         :                 :           :  +- Calc(select=[y, X1])
         :                 :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :                 :           :        :- Exchange(distribution=[hash[x]])
         :                 :           :        :  +- Reused(reference_id=[1])
         :                 :           :        +- Exchange(distribution=[hash[X0]])
         :                 :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :                    +- Union(all=[true], union=[X0, X1])
         :                 :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :                 :           :                       :  +- Reused(reference_id=[5])
         :                 :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :                 :           :                          +- Reused(reference_id=[6])
         :                 :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :  +- Reused(reference_id=[1])
         :                 :           +- Exchange(distribution=[broadcast])
         :                 :              +- Calc(select=[X0, X1])
         :                 :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :                    :- Reused(reference_id=[7])
         :                 :                    +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :                 :                       +- Reused(reference_id=[8])
         :                 +- Reused(reference_id=[9])
         :- Reused(reference_id=[10])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X10])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X10])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])
         :                 :- Exchange(distribution=[broadcast])
         :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :                 :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           +- Union(all=[true], union=[X0, X1])
         :                 :              :- Calc(select=[x0 AS X0, y AS X1])
         :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :                 :              :     :- Calc(select=[y, x0])(reuse_id=[17])
         :                 :              :     :  +- Reused(reference_id=[11])
         :                 :              :     +- Reused(reference_id=[9])
         :                 :              +- Reused(reference_id=[12])
         :                 +- Reused(reference_id=[13])
         :- Reused(reference_id=[14])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X1, x AS x0])
         :              +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X00)], select=[X1, X00, x], isBroadcast=[true], build=[right])\n:- Calc(select=[X1, X00])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :                 :- Reused(reference_id=[9])
         :                 :- Reused(reference_id=[15])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Calc(select=[X0, X1])
         :                       +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                          :- Reused(reference_id=[16])
         :                          +- Reused(reference_id=[9])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[14])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[17])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[8])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[23])
         :              :                 :                 :- Reused(reference_id=[5])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Reused(reference_id=[21])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[14])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[15])
         :- Reused(reference_id=[22])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[23])

Job has been submitted with JobID 8457ed3afd18ce6db2e62d15454872cb
WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN a AS a_2 ON r_1.y = a_2.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p7 AS (SELECT s_0.x AS X0, r_1.y AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x UNION (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)), p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1 FROM r AS r_0 INNER JOIN s AS s_1 ON r_0.y = s_1.x INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0 UNION (SELECT b_0.x AS X0, p7_1.X1 AS X1 FROM b AS b_0 INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)), p5 AS (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0 UNION (SELECT s_0.y AS X0, r_1.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.x = r_1.y)), p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1 FROM r AS r_0 INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0 INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0 UNION (SELECT r_1.x AS X0, p14_0.X1 AS X1 FROM p14 AS p14_0 INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)), p43 AS (SELECT s_2.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN r AS r_1 ON s_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT s_1.y AS X0, a_0.x AS X1 FROM a AS a_0 INNER JOIN s AS s_1 ON a_0.x = s_1.x) UNION (SELECT s_0.y AS X0, s_0.x AS X1 FROM s AS s_0 INNER JOIN b AS b_1 ON s_0.y = b_1.x)), p40 AS (SELECT s_2.y AS X0, b_0.x AS X1 FROM b AS b_0 INNER JOIN r AS r_1 ON b_0.x = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x UNION (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)), p19 AS (SELECT r_0.x AS X0, r_0.y AS X1 FROM r AS r_0 INNER JOIN b AS b_1 ON r_0.y = b_1.x UNION (SELECT r_0.x AS X0, s_2.y AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN s AS s_2 ON r_1.y = s_2.x)), p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1 FROM p19 AS p19_0 INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1 INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x UNION (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1) UNION (SELECT r_0.x AS X0, p43_2.X0 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1 INNER JOIN a AS a_3 ON r_1.y = a_3.x)), p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1 FROM p35 AS p35_0 INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0 UNION (SELECT p35_0.X0 AS X0, s_1.x AS X1 FROM p35 AS p35_0 INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x) UNION (SELECT r_0.x AS X0, p2_4.X1 AS X1 FROM r AS r_0 INNER JOIN r AS r_1 ON r_0.y = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN a AS a_3 ON r_1.y = a_3.x INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0 INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x) UNION (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1 FROM p19 AS p19_0 INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0 INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0 INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x) UNION (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1 FROM p19 AS p19_0 INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x INNER JOIN a AS a_3 ON r_2.y = a_3.x INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0)) SELECT p1.X0 AS x, p1.X1 AS y FROM p1
waiting...
waiting...
waiting...
waiting...

------------> using sink uuid: 0f142240_58f6_446b_8a43_dcfcf9b937dc

Adding statistics for table s number 9 
Adding statistics for table a number 9 
Adding statistics for table b number 9 
Adding statistics for table r number 9 
Adding statistics for table t number 9 
sql argument: WITH p28 AS (SELECT s_0.x AS X0, r_1.y AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN a AS a_2 ON r_1.y = a_2.x
             UNION
             (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p7 AS (SELECT s_0.x AS X0, r_1.y AS X1
            FROM s AS s_0
                     INNER JOIN r AS r_1 ON s_0.y = r_1.x
            UNION
            (SELECT a_0.x AS X0, a_0.x AS X1 FROM a AS a_0)),
     p14 AS (SELECT r_0.x AS X0, p7_2.X1 AS X1
             FROM r AS r_0
                      INNER JOIN s AS s_1 ON r_0.y = s_1.x
                      INNER JOIN p7 AS p7_2 ON s_1.y = p7_2.X0
             UNION
             (SELECT b_0.x AS X0, p7_1.X1 AS X1
              FROM b AS b_0
                       INNER JOIN p7 AS p7_1 ON b_0.x = p7_1.X0)),
     p5 AS (SELECT b_0.x AS X0, b_0.x AS X1
            FROM b AS b_0
            UNION
            (SELECT s_0.y AS X0, r_1.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.x = r_1.y)),
     p2 AS (SELECT p5_1.X1 AS X0, p14_2.X1 AS X1
            FROM r AS r_0
                     INNER JOIN p5 AS p5_1 ON r_0.x = p5_1.X0
                     INNER JOIN p14 AS p14_2 ON r_0.y = p14_2.X0
            UNION
            (SELECT r_1.x AS X0, p14_0.X1 AS X1
             FROM p14 AS p14_0
                      INNER JOIN r AS r_1 ON p14_0.X0 = r_1.y
                      INNER JOIN a AS a_2 ON p14_0.X0 = a_2.x)),
     p43 AS (SELECT s_2.y AS X0, s_0.x AS X1
             FROM s AS s_0
                      INNER JOIN r AS r_1 ON s_0.y = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT s_1.y AS X0, a_0.x AS X1
              FROM a AS a_0
                       INNER JOIN s AS s_1 ON a_0.x = s_1.x)
             UNION
             (SELECT s_0.y AS X0, s_0.x AS X1
              FROM s AS s_0
                       INNER JOIN b AS b_1 ON s_0.y = b_1.x)),
     p40 AS (SELECT s_2.y AS X0, b_0.x AS X1
             FROM b AS b_0
                      INNER JOIN r AS r_1 ON b_0.x = r_1.x
                      INNER JOIN s AS s_2 ON r_1.y = s_2.x
             UNION
             (SELECT b_0.x AS X0, b_0.x AS X1 FROM b AS b_0)),
     p19 AS (SELECT r_0.x AS X0, r_0.y AS X1
             FROM r AS r_0
                      INNER JOIN b AS b_1 ON r_0.y = b_1.x
             UNION
             (SELECT r_0.x AS X0, s_2.y AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN s AS s_2 ON r_1.y = s_2.x)),
     p35 AS (SELECT p19_0.X0 AS X0, p40_1.X0 AS X1
             FROM p19 AS p19_0
                      INNER JOIN p40 AS p40_1 ON p19_0.X1 = p40_1.X1
                      INNER JOIN b AS b_2 ON p19_0.X1 = b_2.x
             UNION
             (SELECT p19_0.X0 AS X0, p43_2.X0 AS X1
              FROM p19 AS p19_0
                       INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1)
             UNION
             (SELECT r_0.x AS X0, p43_2.X0 AS X1
              FROM r AS r_0
                       INNER JOIN r AS r_1 ON r_0.y = r_1.x
                       INNER JOIN p43 AS p43_2 ON r_1.y = p43_2.X1
                       INNER JOIN a AS a_3 ON r_1.y = a_3.x)),
     p1 AS (SELECT p35_0.X0 AS X0, p2_2.X1 AS X1
            FROM p35 AS p35_0
                     INNER JOIN r AS r_1 ON p35_0.X1 = r_1.x
                     INNER JOIN p2 AS p2_2 ON r_1.y = p2_2.X0
            UNION
            (SELECT p35_0.X0 AS X0, s_1.x AS X1
             FROM p35 AS p35_0
                      INNER JOIN s AS s_1 ON p35_0.X1 = s_1.y
                      INNER JOIN b AS b_2 ON p35_0.X1 = b_2.x)
            UNION
            (SELECT r_0.x AS X0, p2_4.X1 AS X1
             FROM r AS r_0
                      INNER JOIN r AS r_1 ON r_0.y = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN a AS a_3 ON r_1.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON p28_2.X1 = p2_4.X0
                      INNER JOIN a AS a_5 ON p28_2.X1 = a_5.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_3.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN r AS r_1 ON p19_0.X1 = r_1.x
                      INNER JOIN p28 AS p28_2 ON r_1.y = p28_2.X0
                      INNER JOIN p2 AS p2_3 ON p28_2.X1 = p2_3.X0
                      INNER JOIN a AS a_4 ON p28_2.X1 = a_4.x)
            UNION
            (SELECT p19_0.X0 AS X0, p2_4.X1 AS X1
             FROM p19 AS p19_0
                      INNER JOIN b AS b_1 ON p19_0.X1 = b_1.x
                      INNER JOIN r AS r_2 ON p19_0.X1 = r_2.x
                      INNER JOIN a AS a_3 ON r_2.y = a_3.x
                      INNER JOIN p2 AS p2_4 ON r_2.y = p2_4.X0))
SELECT p1.X0 AS x, p1.X1 AS y
FROM p1
== Abstract Syntax Tree ==
LogicalProject(x=[$0], y=[$1])
+- LogicalUnion(all=[false])
   :- LogicalUnion(all=[false])
   :  :- LogicalUnion(all=[false])
   :  :  :- LogicalUnion(all=[false])
   :  :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :     :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :  :     :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :     :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :  :     :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :     :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :        +- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :- LogicalUnion(all=[false])
   :  :  :  :     :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :  :     :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :  :     :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :  +- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :- LogicalUnion(all=[false])
   :  :  :  :     :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :  :     :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :  :     :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :     :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :  :     :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :     :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :        :- LogicalProject(X0=[$3], X1=[$5])
   :  :  :  :        :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :  :        :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :  :  :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :  +- LogicalUnion(all=[false])
   :  :  :  :        :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :  :  :        :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :        :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :        :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :        :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :     +- LogicalUnion(all=[false])
   :  :  :  :        :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :        :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :        :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        :              +- LogicalUnion(all=[false])
   :  :  :  :        :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :        :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :        :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :        :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :        :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :        +- LogicalProject(X0=[$2], X1=[$1])
   :  :  :  :           +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :  :  :              :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :  :              :  :- LogicalUnion(all=[false])
   :  :  :  :              :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :  :  :              :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :  :              :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :     +- LogicalUnion(all=[false])
   :  :  :  :              :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :  :              :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :  :              :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  :        +- LogicalUnion(all=[false])
   :  :  :  :              :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :  :  :              :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :  :              :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :  :              :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  :              :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :  :     +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :- LogicalProject(X0=[$0], X1=[$2])
   :  :  :        :  :  :  :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :  :     :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :  :     :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :  :     :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :  +- LogicalUnion(all=[false])
   :  :  :        :  :  :  :     :     :- LogicalProject(X0=[$4], X1=[$0])
   :  :  :        :  :  :  :     :     :  +- LogicalJoin(condition=[=($2, $3)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :  :     :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :  :     :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :  :        :  :  :  :     :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :  :     +- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :- LogicalUnion(all=[false])
   :  :  :        :  :  :        :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :  :  :        :  :  :        :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :  :  :        :  :  :        :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :        :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :        :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :        +- LogicalUnion(all=[false])
   :  :  :        :  :  :           :- LogicalUnion(all=[false])
   :  :  :        :  :  :           :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :  :           :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :  :           :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :           :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :  :           :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :  :           :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  :           :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :           +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :  :              +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :  :                 :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :  :                 +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :  +- LogicalProject(X0=[$0], X1=[$4])
   :  :  :        :  :     +- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :  :        :  :        :- LogicalJoin(condition=[=($3, $5)], joinType=[inner])
   :  :  :        :  :        :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :  +- LogicalUnion(all=[false])
   :  :  :        :  :        :     :- LogicalUnion(all=[false])
   :  :  :        :  :        :     :  :- LogicalProject(X0=[$5], X1=[$0])
   :  :  :        :  :        :     :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :  :        :  :        :     :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :     :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  :     +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     :  +- LogicalProject(X0=[$2], X1=[$0])
   :  :  :        :  :        :     :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :  :        :  :        :     :        :- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        :     :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :     +- LogicalProject(X0=[$1], X1=[$0])
   :  :  :        :  :        :        +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :  :        :  :        :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :  +- LogicalProject(X0=[$0], X1=[$8])
   :  :     +- LogicalJoin(condition=[=($5, $9)], joinType=[inner])
   :  :        :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
   :  :        :  :- LogicalJoin(condition=[=($3, $6)], joinType=[inner])
   :  :        :  :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :  :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :  +- LogicalUnion(all=[false])
   :  :        :  :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :  :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :  :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :  :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :  :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :  +- LogicalUnion(all=[false])
   :  :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :  :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :  :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :  +- LogicalUnion(all=[false])
   :  :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :  :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :     +- LogicalUnion(all=[false])
   :  :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :     +- LogicalUnion(all=[false])
   :  :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :     :              +- LogicalUnion(all=[false])
   :  :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :  :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :  :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :        :           :  :- LogicalUnion(all=[false])
   :  :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :  :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :  :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :     +- LogicalUnion(all=[false])
   :  :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :  :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :  :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  :        +- LogicalUnion(all=[false])
   :  :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :  :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :  :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :  :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :  :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :  +- LogicalProject(X0=[$0], X1=[$7])
   :     +- LogicalJoin(condition=[=($5, $8)], joinType=[inner])
   :        :- LogicalJoin(condition=[=($5, $6)], joinType=[inner])
   :        :  :- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :- LogicalUnion(all=[false])
   :        :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
   :        :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
   :        :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :  +- LogicalUnion(all=[false])
   :        :  :     :- LogicalProject(X0=[$0], X1=[$3])
   :        :  :     :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :  :     :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :  :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :  :     :     +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  :     +- LogicalProject(X0=[$0], X1=[$0])
   :        :  :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :  +- LogicalUnion(all=[false])
   :        :     :- LogicalProject(X0=[$3], X1=[$5])
   :        :     :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :        :     :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :        :     :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :  +- LogicalUnion(all=[false])
   :        :     :     :     :- LogicalProject(X0=[$0], X1=[$0])
   :        :     :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :     :     +- LogicalProject(X0=[$1], X1=[$2])
   :        :     :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :     :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :     +- LogicalUnion(all=[false])
   :        :     :        :- LogicalProject(X0=[$0], X1=[$5])
   :        :     :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :     :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :     +- LogicalUnion(all=[false])
   :        :     :        :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :        :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     :        +- LogicalProject(X0=[$0], X1=[$2])
   :        :     :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :     :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :     :              +- LogicalUnion(all=[false])
   :        :     :                 :- LogicalProject(X0=[$0], X1=[$3])
   :        :     :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :     :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :     :                 +- LogicalProject(X0=[$0], X1=[$0])
   :        :     :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :     +- LogicalProject(X0=[$2], X1=[$1])
   :        :        +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
   :        :           :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :        :           :  :- LogicalUnion(all=[false])
   :        :           :  :  :- LogicalProject(X0=[$0], X1=[$5])
   :        :           :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
   :        :           :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :     +- LogicalUnion(all=[false])
   :        :           :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :  +- LogicalProject(X0=[$0], X1=[$2])
   :        :           :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
   :        :           :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
   :        :           :  :        +- LogicalUnion(all=[false])
   :        :           :  :           :- LogicalProject(X0=[$0], X1=[$3])
   :        :           :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
   :        :           :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           :  :           +- LogicalProject(X0=[$0], X1=[$0])
   :        :           :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        :           :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
   :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   :        +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
   +- LogicalProject(X0=[$0], X1=[$7])
      +- LogicalJoin(condition=[=($4, $6)], joinType=[inner])
         :- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
         :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
         :  :  :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :- LogicalUnion(all=[false])
         :  :  :  :  :- LogicalProject(X0=[$0], X1=[$1])
         :  :  :  :  :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :  :     :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :  :     +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  :  :  +- LogicalProject(X0=[$0], X1=[$5])
         :  :  :  :     +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
         :  :  :  :        :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
         :  :  :  :        :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  :        +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
         :  :  :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
         :  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
         :  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
         +- LogicalUnion(all=[false])
            :- LogicalProject(X0=[$3], X1=[$5])
            :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
            :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
            :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     :  +- LogicalUnion(all=[false])
            :     :     :- LogicalProject(X0=[$0], X1=[$0])
            :     :     :  +- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :     :     +- LogicalProject(X0=[$1], X1=[$2])
            :     :        +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :     :           :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :     :           +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :     +- LogicalUnion(all=[false])
            :        :- LogicalProject(X0=[$0], X1=[$5])
            :        :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
            :        :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :     +- LogicalUnion(all=[false])
            :        :        :- LogicalProject(X0=[$0], X1=[$3])
            :        :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :        :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :        :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :        :        +- LogicalProject(X0=[$0], X1=[$0])
            :        :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            :        +- LogicalProject(X0=[$0], X1=[$2])
            :           +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
            :              :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
            :              +- LogicalUnion(all=[false])
            :                 :- LogicalProject(X0=[$0], X1=[$3])
            :                 :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
            :                 :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
            :                 :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
            :                 +- LogicalProject(X0=[$0], X1=[$0])
            :                    +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
            +- LogicalProject(X0=[$2], X1=[$1])
               +- LogicalJoin(condition=[=($0, $4)], joinType=[inner])
                  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
                  :  :- LogicalUnion(all=[false])
                  :  :  :- LogicalProject(X0=[$0], X1=[$5])
                  :  :  :  +- LogicalJoin(condition=[=($3, $4)], joinType=[inner])
                  :  :  :     :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :     :  :- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     :  +- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :     +- LogicalUnion(all=[false])
                  :  :  :        :- LogicalProject(X0=[$0], X1=[$3])
                  :  :  :        :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :  :        :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :  :        +- LogicalProject(X0=[$0], X1=[$0])
                  :  :  :           +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  :  +- LogicalProject(X0=[$0], X1=[$2])
                  :  :     +- LogicalJoin(condition=[=($0, $1)], joinType=[inner])
                  :  :        :- LogicalTableScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]])
                  :  :        +- LogicalUnion(all=[false])
                  :  :           :- LogicalProject(X0=[$0], X1=[$3])
                  :  :           :  +- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
                  :  :           :     :- LogicalTableScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           :     +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  :  :           +- LogicalProject(X0=[$0], X1=[$0])
                  :  :              +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])
                  :  +- LogicalTableScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]])
                  +- LogicalTableScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]])

== Optimized Physical Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 186453.26127817223, cumulative cost = {5.1814824227953863E8 rows, 1.5067649173452831E10 cpu, 7.18644552E9 io, 1.83084615307195E9 network, 1.176702703621838E9 memory}
+- Exchange(distribution=[hash[X0, X1]]): rowcount = 186453.26127817223, cumulative cost = {5.179617890182605E8 rows, 1.506466592127238E10 cpu, 7.18644552E9 io, 1.83084615307195E9 network, 1.1647696949000351E9 memory}
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 186453.26127817223, cumulative cost = {5.177753357569823E8 rows, 1.5031850147287422E10 cpu, 7.18644552E9 io, 1.8263712748012738E9 network, 1.1647696949000351E9 memory}
      +- Union(all=[true], union=[X0, X1]): rowcount = 1028598.4216527595, cumulative cost = {5.175888824957042E8 rows, 1.5015392572540977E10 cpu, 7.18644552E9 io, 1.8263712748012738E9 network, 1.1528366861782322E9 memory}
         :- Union(all=[true], union=[X0, X1]): rowcount = 978708.9556082261, cumulative cost = {4.263126618006592E8 rows, 1.2711105649856869E10 cpu, 5.90666982E9 io, 1.5565600851660419E9 network, 9.479223076546025E8 memory}
         :  :- Union(all=[true], union=[X0, X1]): rowcount = 850329.19800326, cumulative cost = {3.289213160457102E8 rows, 1.030531385308638E10 cpu, 4.528448436E9 io, 1.2737279472506974E9 network, 7.324854113656306E8 memory}
         :  :  :- Union(all=[true], union=[X0, X1]): rowcount = 142725.99607080535, cumulative cost = {2.454932809323575E8 rows, 8.158296891185533E9 cpu, 3.347105544E9 io, 1.0175793338458989E9 network, 5.620747256135461E8 memory}
         :  :  :  :- Calc(select=[X0, X10 AS X1]): rowcount = 118989.71587917917, cumulative cost = {1.5861406448875377E8 rows, 5.154184797582242E9 cpu, 2.1657702E9 io, 6.403021112967027E8 network, 3.558706321430149E8 memory}
         :  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 118989.71587917917, cumulative cost = {1.584950747728746E8 rows, 5.154184797582242E9 cpu, 2.1657702E9 io, 6.403021112967027E8 network, 3.558706321430149E8 memory}
         :  :  :  :     :- Exchange(distribution=[hash[X1]]): rowcount = 158172.26794417453, cumulative cost = {8.684651635509382E7 rows, 3.0292646146782875E9 cpu, 1.181329764E9 io, 3.810716625798564E8 network, 2.0620016787053126E8 memory}
         :  :  :  :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.668834408714965E7 rows, 3.0026916736636662E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 2.0620016787053126E8 memory}
         :  :  :  :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 158172.26794417453, cumulative cost = {8.653017181920548E7 rows, 3.0001609173765593E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 1.960771427221041E8 memory}
         :  :  :  :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.63719995512613E7 rows, 2.9723225982183847E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.960771427221041E8 memory}
         :  :  :  :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 872581.9223611606, cumulative cost = {8.621382728331713E7 rows, 2.958361287460606E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.8595411757367694E8 memory}
         :  :  :  :     :              :- Union(all=[true], union=[X0, X1]): rowcount = 164990.46928463125, cumulative cost = {6.401247283393105E7 rows, 2.0841845215939853E9 cpu, 8.8599408E8 io, 2.597945565115611E8 network, 1.4917127712477264E8 memory}
         :  :  :  :     :              :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :  :  :     :              :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :  :  :     :              :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :  :  :     :              :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :  :  :     :              :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :  :  :     :              :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :  :  :     :              :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :  :     :              :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :  :     :              :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :  :     :              :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :  :     :              :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :  :  :     :              :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :  :  :  :     :              :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :  :  :     :              :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :  :  :     :              :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :  :  :     :              :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :  :  :     :              :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :  :  :     :              :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :  :  :     :              :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :  :  :     :              :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :  :  :     :              :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :     :              :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :  :  :     :              :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :  :  :     :              :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :  :  :     :              :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :  :  :     :              :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :  :  :     :              :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :  :  :     :              :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :  :  :     :              :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :  :     :              :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :  :     :              :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :     :              :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :  :     :              :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :  :     :              :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :  :     :              :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :  :  :     :              :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :  :  :  :     :              :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :  :  :     :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :  :  :     :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :  :  :     :              :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :  :  :     :              :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :  :  :     :              :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :  :  :     :              :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :  :  :     :              :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :  :  :     :              :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :              :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :              :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :              :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :              +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :  :  :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :  :  :     :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :  :     :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                    +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :  :  :  :     :                       +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :  :  :     :                          +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :  :  :     :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                             +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :  :  :  :     :                                +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :  :  :     :                                   +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :  :  :     :                                      :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :  :  :     :                                      :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :  :  :     :                                      :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :  :  :     :                                      :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :  :  :     :                                      :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :  :  :     :                                      :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :  :     :                                      :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :  :     :                                      :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :     :                                      :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     :                                      +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :  :  :     :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :     +- Exchange(distribution=[hash[x]]): rowcount = 635092.5045836867, cumulative cost = {7.152956870190158E7 rows, 2.1185740647237313E9 cpu, 9.84440436E8 io, 2.5923044871684632E8 network, 1.4081281726760986E8 memory}
         :  :  :  :        +- Calc(select=[x, X1]): rowcount = 635092.5045836867, cumulative cost = {7.08944761973179E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :  :  :           +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 635092.5045836867, cumulative cost = {7.025938369273421E7 rows, 2.011878523953672E9 cpu, 9.84440436E8 io, 2.4398822860683784E8 network, 1.4081281726760986E8 memory}
         :  :  :  :              :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :  :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :              +- Exchange(distribution=[hash[X0]]): rowcount = 132308.0305579119, cumulative cost = {6.1421007188150525E7 rows, 1.2889310677092087E9 cpu, 8.86001028E8 io, 1.4554882060683784E8 network, 1.334035675563668E8 memory}
         :  :  :  :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :  :  :  :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :  :  :  :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :  :  :  :                          +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :  :  :  :                             :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :  :  :                             :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :  :  :                             :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :  :  :  :                             :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :  :  :                             :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :  :  :                             :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :  :  :                             :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :  :  :                             :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :  :  :                             :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :  :  :                             :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :  :  :                             :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :  :  :                             :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :  :  :                             :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :  :  :                             :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :  :  :                             :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :  :  :                             :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :  :  :                             :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :  :  :                             :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :  :  :                             :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :  :  :                             :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :  :  :                             :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :                             :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :  :  :                             :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :  :  :                             :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :  :  :                             :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :  :                             :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :  :  :                             :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :  :  :                             :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :  :  :                             :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :  :  :                             :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                             :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                             :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                             :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                             +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :  :  :                                +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :  :  :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                   +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :  :  :  :                                      +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :  :  :                                         +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :  :  :                                            :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :  :  :                                            :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :  :  :                                            :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :  :  :                                            :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :  :  :                                            :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :  :  :                                            :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :  :  :                                            :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :  :  :                                            :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :  :  :                                            :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :  :  :                                            :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :  :  :                                            :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :  :  :                                            :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :  :  :                                            :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :  :  :                                            :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :  :  :                                            :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :  :  :                                            :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :  :  :                                            :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :  :  :                                            :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :  :                                            :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :  :                                            :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :  :                                            +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :  :  :                                               +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :  +- Calc(select=[X0, x0 AS X1]): rowcount = 23736.280191626178, cumulative cost = {8.67364904475329E7 rows, 3.0039693676072197E9 cpu, 1.181335344E9 io, 3.772772225491962E8 network, 2.0620409347053126E8 memory}
         :  :  :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right]): rowcount = 23736.280191626178, cumulative cost = {8.671275416734128E7 rows, 3.0039693676072197E9 cpu, 1.181335344E9 io, 3.772772225491962E8 network, 2.0620409347053126E8 memory}
         :  :  :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.668834408714965E7 rows, 3.0026916736636662E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 2.0620016787053126E8 memory}
         :  :  :        :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 158172.26794417453, cumulative cost = {8.653017181920548E7 rows, 3.0001609173765593E9 cpu, 1.181329764E9 io, 3.772755281491962E8 network, 1.960771427221041E8 memory}
         :  :  :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 158172.26794417453, cumulative cost = {8.63719995512613E7 rows, 2.9723225982183847E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.960771427221041E8 memory}
         :  :  :        :        +- Union(all=[true], union=[X0, X1]): rowcount = 872581.9223611606, cumulative cost = {8.621382728331713E7 rows, 2.958361287460606E9 cpu, 1.181329764E9 io, 3.73479393718536E8 network, 1.8595411757367694E8 memory}
         :  :  :        :           :- Union(all=[true], union=[X0, X1]): rowcount = 164990.46928463125, cumulative cost = {6.401247283393105E7 rows, 2.0841845215939853E9 cpu, 8.8599408E8 io, 2.597945565115611E8 network, 1.4917127712477264E8 memory}
         :  :  :        :           :  :- Calc(select=[X0, X00 AS X1]): rowcount = 36357.763662037716, cumulative cost = {2.8684576273294717E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :  :        :           :  :  +- HashJoin(joinType=[InnerJoin], where=[=(X1, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 36357.763662037716, cumulative cost = {2.864821850963268E7 rows, 9.521698897246755E8 cpu, 3.93779904E8 io, 1.194430883277652E8 network, 6.749607831092012E7 memory}
         :  :  :        :           :  :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :  :        :           :  :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :  :        :           :  :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :  :        :           :  :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :  :        :           :  :     :           :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :        :           :  :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :        :           :  :     :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :        :           :  :     :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :           +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :        :           :  :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :        :           :  :     :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :        :           :  :     :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                 +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :  :        :           :  :     :                    +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                       +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :     :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     :                          +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 2593.245886494809, cumulative cost = {5670702.8078893805 rows, 1.4537252221332248E7 cpu, 9.84561E7 io, 477181.2431150449 network, 2187003.1564755705 memory}
         :  :  :        :           :  :        +- Calc(select=[X0, X1]): rowcount = 2593.245886494809, cumulative cost = {5668109.562002886 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :  :        :           :  :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2593.245886494809, cumulative cost = {5665516.316116392 rows, 1.4122332879493078E7 cpu, 9.84561E7 io, 414943.3418391695 network, 2187003.1564755705 memory}
         :  :  :        :           :  :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5661997.070229897 rows, 1.3909946432213355E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 2170335.1564755705 memory}
         :  :  :        :           :  :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16825.305909965395, cumulative cost = {5645171.764319932 rows, 1.3640741537653908E7 cpu, 9.8450544E7 io, 409387.3418391695 network, 1093515.5782377853 memory}
         :  :  :        :           :  :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16825.305909965395, cumulative cost = {5628346.458409967 rows, 1.06794876975E7 cpu, 9.8450544E7 io, 5580.0 network, 1093515.5782377853 memory}
         :  :  :        :           :  :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92819.4175, cumulative cost = {5611521.152500002 rows, 9194377.0175 cpu, 9.8450544E7 io, 5580.0 network, 16696.0 memory}
         :  :  :        :           :  :              :           :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92356.4175, cumulative cost = {5517775.735000001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :  :        :           :  :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(x0, x)], select=[x, y0, x0], isBroadcast=[true], build=[right]): rowcount = 92356.4175, cumulative cost = {5425419.317500001 rows, 9101557.6 cpu, 9.8444988E7 io, 5580.0 network, 16696.0 memory}
         :  :  :        :           :  :              :           :     :- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :  :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :        :           :  :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  :              +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :        :           :  :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :  +- Calc(select=[X0, X00 AS X1]): rowcount = 128632.70562259354, cumulative cost = {3.51629060913517E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :  :        :           :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X00], build=[left]): rowcount = 128632.70562259354, cumulative cost = {3.503427338572911E7 rows, 1.1318496414000251E9 cpu, 4.92214176E8 io, 1.403514681837959E8 network, 8.167519881385252E7 memory}
         :  :  :        :           :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :  :  :        :           :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :  :  :        :           :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :  :  :        :           :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :  :  :        :           :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :  :  :        :           :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :        :           :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :  :  :        :           :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :  :        :           :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :        :           :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :  :  :        :           :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :        :           :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :  :  :        :           :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :        +- Exchange(distribution=[hash[x]]): rowcount = 617759.5256235336, cumulative cost = {1.17246908968315E7 rows, 1.4901064366623443E8 cpu, 1.96890372E8 io, 1.5630556814495582E7 network, 3083002.098201301 memory}
         :  :  :        :           :           +- Calc(select=[x, X0]): rowcount = 617759.5256235336, cumulative cost = {1.1106931371207966E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :  :        :           :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617759.5256235336, cumulative cost = {1.0489171845584432E7 rows, 4.52270433614808E7 cpu, 1.96890372E8 io, 804328.1995307741 network, 3083002.098201301 memory}
         :  :  :        :           :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                 +- Exchange(distribution=[broadcast]): rowcount = 16754.83749022446, cumulative cost = {5769770.319960898 rows, 1.2279868661559012E7 cpu, 9.8450964E7 io, 804328.1995307741 network, 2144731.198748731 memory}
         :  :  :        :           :                    +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :  :        :           :                       +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :  :        :           :                          +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :  :        :           :                             +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :  :        :           :                                :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :  :        :           :                                :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :        :           :                                :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                   +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :        :           :                                      :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           :                                      +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :           :                                         +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :           +- Calc(select=[x AS X0, X0 AS X1]): rowcount = 707591.4530765294, cumulative cost = {2.132877252702493E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :  :        :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X0], build=[right]): rowcount = 707591.4530765294, cumulative cost = {2.06211810739484E7 rows, 8.733041839442598E8 cpu, 2.95335684E8 io, 1.1368483720697492E8 network, 3.6782840448904306E7 memory}
         :  :  :        :                 :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :  :        :                 :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                 +- Exchange(distribution=[hash[x]]): rowcount = 615634.35384353, cumulative cost = {1.1710305620871866E7 rows, 1.464901171135116E8 cpu, 1.96896276E8 io, 1.5245429206974916E7 network, 2307316.6336666164 memory}
         :  :  :        :                    +- Calc(select=[x, X0]): rowcount = 615634.35384353, cumulative cost = {1.1094671267028335E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :  :        :                       +- HashJoin(joinType=[InnerJoin], where=[=(y, X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 615634.35384353, cumulative cost = {1.0479036913184805E7 rows, 4.306354566779855E7 cpu, 1.96896276E8 io, 470204.7147301951 network, 2307316.6336666164 memory}
         :  :  :        :                          :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                          +- Exchange(distribution=[broadcast]): rowcount = 2587.025623533669, cumulative cost = {5761760.559341275 rows, 1.022971346281028E7 cpu, 9.8456868E7 io, 470204.7147301951 network, 2162443.198748731 memory}
         :  :  :        :                             +- Calc(select=[X0, X1]): rowcount = 2587.025623533669, cumulative cost = {5759173.533717741 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :  :        :                                +- HashJoin(joinType=[InnerJoin], where=[=(x, X1)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2587.025623533669, cumulative cost = {5756586.508094207 rows, 9815789.363044893 cpu, 9.8456868E7 io, 408116.0997653871 network, 2162443.198748731 memory}
         :  :  :        :                                   :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5753015.4824706735 rows, 9599094.663123097 cpu, 9.8450964E7 io, 402212.0997653871 network, 2144731.198748731 memory}
         :  :  :        :                                   :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16754.83749022446, cumulative cost = {5736260.644980449 rows, 9331017.263279505 cpu, 9.8450964E7 io, 402212.0997653871 network, 1072421.5993743655 memory}
         :  :  :        :                                   :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16754.83749022446, cumulative cost = {5719505.807490225 rows, 6382165.865 cpu, 9.8450964E7 io, 96.0 network, 1072421.5993743655 memory}
         :  :  :        :                                   :        +- Union(all=[true], union=[X0, X1]): rowcount = 92430.6675, cumulative cost = {5702750.970000001 rows, 4903275.1850000005 cpu, 9.8450964E7 io, 96.0 network, 112.0 memory}
         :  :  :        :                                   :           :- Union(all=[true], union=[X0, X1]): rowcount = 92361.06749999999, cumulative cost = {5609716.1025 rows, 4810221.5175 cpu, 9.8445384E7 io, 72.0 network, 84.0 memory}
         :  :  :        :                                   :           :  :- Calc(select=[y0 AS X0, x0 AS X1]): rowcount = 92287.1175, cumulative cost = {5516713.135 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x, y0], build=[right]): rowcount = 92287.1175, cumulative cost = {5424426.0175 rows, 4717208.45 cpu, 9.8439456E7 io, 48.0 network, 56.0 memory}
         :  :  :        :                                   :           :  :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :  :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :  :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :  +- Calc(select=[y AS X0, x AS X1]): rowcount = 73.95, cumulative cost = {641.9000000000001 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :     +- NestedLoopJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, x0, y], build=[right]): rowcount = 73.95, cumulative cost = {567.95 rows, 652.0 cpu, 5928.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :           :        :- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           :        +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :           :           +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :           +- Calc(select=[y AS X0, x0 AS X1]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :        :                                   :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :        :                                   :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  :        :                                   +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :  :        :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :  :        +- Exchange(distribution=[broadcast]): rowcount = 69.6, cumulative cost = {673.8000000000001 rows, 11759.0 cpu, 5580.0 io, 1694.3999999999999 network, 28.0 memory}
         :  :  :           +- Calc(select=[x, x0]): rowcount = 69.6, cumulative cost = {604.2 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :              +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x)], select=[x, x0, y], build=[right]): rowcount = 69.6, cumulative cost = {534.6 rows, 623.0 cpu, 5580.0 io, 24.0 network, 28.0 memory}
         :  :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :  :                 +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :  :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :  +- Calc(select=[x AS X0, X1]): rowcount = 707603.2019324546, cumulative cost = {8.257770591534947E7 rows, 2.1461666327028456E9 cpu, 1.181342892E9 io, 2.5614861340479842E8 network, 1.7041068575208446E8 memory}
         :  :     +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, X1], build=[right]): rowcount = 707603.2019324546, cumulative cost = {8.187010271341701E7 rows, 2.1461666327028456E9 cpu, 1.181342892E9 io, 2.5614861340479842E8 network, 1.7041068575208446E8 memory}
         :  :        :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :        :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :        +- Exchange(distribution=[hash[x]]): rowcount = 615712.6795496978, cumulative cost = {7.295921551148455E7 rows, 1.419351939266448E9 cpu, 1.082903484E9 io, 1.5770920540479842E8 network, 1.359307756973014E8 memory}
         :  :           +- Calc(select=[x, X1]): rowcount = 615712.6795496978, cumulative cost = {7.234350283193485E7 rows, 1.3159122091020987E9 cpu, 1.082903484E9 io, 1.4293210109560567E8 network, 1.359307756973014E8 memory}
         :  :              +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 615712.6795496978, cumulative cost = {7.172779015238516E7 rows, 1.3159122091020987E9 cpu, 1.082903484E9 io, 1.4293210109560567E8 network, 1.359307756973014E8 memory}
         :  :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                 +- Exchange(distribution=[broadcast]): rowcount = 3109.196997985824, cumulative cost = {6.7010435472835466E7 rows, 1.2830741995261147E9 cpu, 9.84464076E8 io, 1.4293210109560567E8 network, 1.3575666066541418E8 memory}
         :  :                    +- Calc(select=[X1, x AS x0]): rowcount = 3109.196997985824, cumulative cost = {6.700732627583748E7 rows, 1.282576728006437E9 cpu, 9.84464076E8 io, 1.4285748036765403E8 network, 1.3575666066541418E8 memory}
         :  :                       +- HashJoin(joinType=[InnerJoin], where=[=(x, X00)], select=[X1, X00, x], isBroadcast=[true], build=[right]): rowcount = 3109.196997985824, cumulative cost = {6.7004217078839496E7 rows, 1.282576728006437E9 cpu, 9.84464076E8 io, 1.4285748036765403E8 network, 1.3575666066541418E8 memory}
         :  :                          :- Calc(select=[X1, X00]): rowcount = 20235.97998657216, cumulative cost = {6.700012388184151E7 rows, 1.2823321841665444E9 cpu, 9.84458172E8 io, 1.4285157636765403E8 network, 1.3573894866541418E8 memory}
         :  :                          :  +- HashJoin(joinType=[InnerJoin], where=[=(X0, X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right]): rowcount = 20235.97998657216, cumulative cost = {6.697988790185494E7 rows, 1.2823321841665444E9 cpu, 9.84458172E8 io, 1.4285157636765403E8 network, 1.3573894866541418E8 memory}
         :  :                          :     :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :  :                          :     :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :  :                          :     :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :  :                          :     :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :  :                          :     :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                          :     :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :  :                          :     :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :  :                          :     :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                          :     :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                          :     :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                          :     :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                          :     :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                          :     :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                          :     :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                          :     :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                          :     :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                          :     :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                          :     :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                          :     :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                          :     :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                          :     :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                          :     :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                          :     :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                          :     :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                          :     :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                          :     :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :  :                          :     :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                          :     :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :  :                          :     :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :  :                          :     :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :  :                          :     :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :  :                          :     :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :  :                          :     :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :  :                          :     :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                          :     :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :  :                          :     :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :  :                          :     :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                          :     :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :  :                          :     :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :  :                          :     :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :  :                          :     :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :  :                          :     :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :  :                          :     :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                          :     :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :  :                          :     :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :  :                          :     :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                          :     :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :  :                          :     :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                          :     :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                          :     :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                          :     :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                          :     :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :  :                          :     :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :  :                          :     :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :  :                          :     :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :  :                          :     :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :     :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :  :                          :     :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :  :                          :     :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                          :     :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :     +- Exchange(distribution=[broadcast]): rowcount = 2598.502685902536, cumulative cost = {5670952.76427576 rows, 1.4549613325114453E7 cpu, 9.8457144E7 io, 478148.49420606665 network, 2189864.958636831 memory}
         :  :                          :        +- Calc(select=[X0, X1]): rowcount = 2598.502685902536, cumulative cost = {5668354.261589858 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
         :  :                          :           +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 2598.502685902536, cumulative cost = {5665755.758903955 rows, 1.4133852895370048E7 cpu, 9.8457144E7 io, 415784.4297444058 network, 2189864.958636831 memory}
         :  :                          :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
         :  :                          :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
         :  :                          :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
         :  :                          :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
         :  :                          :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :                          :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :  :                          :              :           :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :  :                          :              :           :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :  :                          :              :           :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                          :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :  :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :  +- Calc(select=[X0, X10 AS X1]): rowcount = 128379.75760496623, cumulative cost = {9.641263679934074E7 rows, 2.4048130878148804E9 cpu, 1.378221384E9 io, 2.828321379153445E8 network, 2.1543689628897196E8 memory}
         :     +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[left]): rowcount = 128379.75760496623, cumulative cost = {9.628425704173577E7 rows, 2.4048130878148804E9 cpu, 1.378221384E9 io, 2.828321379153445E8 network, 2.1543689628897196E8 memory}
         :        :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
         :        :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
         :        :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
         :        :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
         :        :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
         :        :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
         :        :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :        :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :        :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
         :        :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :        :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
         :        :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :        :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :        :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :        :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :        +- Exchange(distribution=[hash[x]]): rowcount = 616073.2055060182, cumulative cost = {7.297492750085579E7 rows, 1.42198758064203E9 cpu, 1.08289758E9 io, 1.5811122654604414E8 network, 1.3684469957332075E8 memory}
         :           +- Calc(select=[x, X10]): rowcount = 616073.2055060182, cumulative cost = {7.235885429534978E7 rows, 1.318487282117019E9 cpu, 1.08289758E9 io, 1.433254696138997E8 network, 1.3684469957332075E8 memory}
         :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right]): rowcount = 616073.2055060182, cumulative cost = {7.174278108984376E7 rows, 1.318487282117019E9 cpu, 1.08289758E9 io, 1.433254696138997E8 network, 1.3684469957332075E8 memory}
         :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                 +- Exchange(distribution=[broadcast]): rowcount = 5512.703373455553, cumulative cost = {6.702506588433775E7 rows, 1.2856300444900312E9 cpu, 9.84458172E8 io, 1.433254696138997E8 network, 1.3653598818440723E8 memory}
         :                    +- Calc(select=[X0, X10]): rowcount = 5512.703373455553, cumulative cost = {6.70195531809643E7 rows, 1.2847480119502783E9 cpu, 9.84458172E8 io, 1.4319316473293677E8 network, 1.3653598818440723E8 memory}
         :                       +- HashJoin(joinType=[InnerJoin], where=[=(X1, X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left]): rowcount = 5512.703373455553, cumulative cost = {6.7014040477590844E7 rows, 1.2847480119502783E9 cpu, 9.84458172E8 io, 1.4319316473293677E8 network, 1.3653598818440723E8 memory}
         :                          :- Exchange(distribution=[broadcast]): rowcount = 16831.351239350242, cumulative cost = {5679004.607457403 rows, 1.6609562283751285E7 cpu, 9.845124E7 io, 813832.8594888116 network, 2172152.958636831 memory}
         :                          :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5662173.2562180525 rows, 1.3916546085455246E7 cpu, 9.845124E7 io, 409880.4297444058 network, 2172152.958636831 memory}
         :                          :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 16831.351239350242, cumulative cost = {5645341.904978702 rows, 1.3647244465625642E7 cpu, 9.845124E7 io, 409880.4297444058 network, 1094946.4793184155 memory}
         :                          :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 16831.351239350242, cumulative cost = {5628510.553739351 rows, 1.0684926647499999E7 cpu, 9.845124E7 io, 5928.0 network, 1094946.4793184155 memory}
         :                          :           +- Union(all=[true], union=[X0, X1]): rowcount = 92852.76749999999, cumulative cost = {5611679.202500001 rows, 9199282.3675 cpu, 9.845124E7 io, 5928.0 network, 17740.0 memory}
         :                          :              :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 92360.76749999999, cumulative cost = {5517842.4350000005 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                          :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x)], select=[y, x0, x], isBroadcast=[true], build=[right]): rowcount = 92360.76749999999, cumulative cost = {5425481.6675 rows, 9106429.6 cpu, 9.8445336E7 io, 5928.0 network, 17740.0 memory}
         :                          :              :     :- Calc(select=[y, x0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                          :              :     :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                          :              :     :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                          :              :     :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                          :              :     :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                          :              :     +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                          :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                          :              +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                          :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                          +- Calc(select=[X0, X1]): rowcount = 19920.004583686783, cumulative cost = {6.132952316675998E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
         :                             +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19920.004583686783, cumulative cost = {6.1309603162176296E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
         :                                :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
         :                                :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
         :                                :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
         :                                :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
         :                                :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :                                :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
         :                                :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
         :                                :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :                                :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :                                :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :                                :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :                                :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :                                :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :                                :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :                                :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :                                :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :                                :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :                                :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :                                :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :                                :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :                                :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :                                :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :                                :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :                                :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :                                :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                                :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
         :                                :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :                                :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
         :                                :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
         :                                :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
         :                                :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
         :                                :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
         :                                :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
         :                                :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
         :                                :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :                                :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
         :                                :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
         :                                :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :                                :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
         :                                :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
         :                                :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
         :                                :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
         :                                :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
         :                                :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :                                :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
         :                                :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
         :                                :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :                                :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
         :                                :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :                                :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :                                :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :                                :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :                                :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
         :                                :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
         :                                :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
         :                                :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
         :                                :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
         :                                :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
         :                                :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
         :                                :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
         :                                :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                                :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         :                                +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
         :                                   +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
         +- Calc(select=[X0, X10 AS X1]): rowcount = 49889.466044533445, cumulative cost = {9.024762227339225E7 rows, 2.3032583242624564E9 cpu, 1.2797757E9 io, 2.69811189635232E8 network, 2.0491437852362955E8 memory}
            +- HashJoin(joinType=[InnerJoin], where=[=(X1, x)], select=[X0, X1, x, X10], build=[right]): rowcount = 49889.466044533445, cumulative cost = {9.019773280734771E7 rows, 2.3032583242624564E9 cpu, 1.2797757E9 io, 2.69811189635232E8 network, 2.0491437852362955E8 memory}
               :- Exchange(distribution=[hash[X1]]): rowcount = 239791.84519375666, cumulative cost = {2.318094978327502E7 rows, 9.759785867672524E8 cpu, 2.95323804E8 io, 1.2472091136930032E8 network, 6.5163853384800844E7 memory}
               :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2941157938081264E7 rows, 9.356935567747014E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 6.5163853384800844E7 memory}
               :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 239791.84519375666, cumulative cost = {2.270136609288751E7 rows, 9.318568872516012E8 cpu, 2.95323804E8 io, 1.1896590708465016E8 network, 4.981717529240042E7 memory}
               :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 239791.84519375666, cumulative cost = {2.2461574247693755E7 rows, 8.896535224975001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 4.981717529240042E7 memory}
               :           +- Union(all=[true], union=[X0, X1]): rowcount = 1322849.0175, cumulative cost = {2.22217824025E7 rows, 8.684879382175001E8 cpu, 2.95323804E8 io, 1.132109028E8 network, 3.4470497199999996E7 memory}
               :              :- Calc(select=[x AS X0, y AS X1]): rowcount = 615315.75, cumulative cost = {5333199.5 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0], isBroadcast=[true], build=[right]): rowcount = 615315.75, cumulative cost = {4717883.75 rows, 3.289092E7 cpu, 9.8444964E7 io, 5556.0 network, 16668.0 memory}
               :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :              :     +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
               :              :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
               :              +- Calc(select=[x AS X0, y0 AS X1]): rowcount = 707533.2675, cumulative cost = {1.5565733885E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                 +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 707533.2675, cumulative cost = {1.48582006175E7 rows, 8.342741692E8 cpu, 1.9687884E8 io, 1.132053468E8 network, 3.4453829199999996E7 memory}
               :                    :- Exchange(distribution=[hash[y]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
               :                    :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                    +- Exchange(distribution=[hash[x]]): rowcount = 615246.45, cumulative cost = {5947383.350000001 rows, 1.074632056E8 cpu, 9.8439432E7 io, 1.4765938799999999E7 network, 28.0 memory}
               :                       +- Calc(select=[x, y0]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                          +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
               :                             :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
               :                             +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
               :                                +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
               +- Exchange(distribution=[hash[x]]): rowcount = 92804.59510313295, cumulative cost = {6.696689355802816E7 rows, 1.3246189659728289E9 cpu, 9.84451896E8 io, 1.4509027826593164E8 network, 1.3455346781305325E8 memory}
                  +- Calc(select=[x, X1]): rowcount = 92804.59510313295, cumulative cost = {6.687408896292503E7 rows, 1.3090277939955025E9 cpu, 9.84451896E8 io, 1.4286296798345643E8 network, 1.3455346781305325E8 memory}
                     +- HashJoin(joinType=[InnerJoin], where=[=(x, x0)], select=[x, X1, x0], isBroadcast=[true], build=[right]): rowcount = 92804.59510313295, cumulative cost = {6.67812843678219E7 rows, 1.3090277939955025E9 cpu, 9.84451896E8 io, 1.4286296798345643E8 network, 1.3455346781305325E8 memory}
                        :- Calc(select=[x, X1]): rowcount = 618234.300687553, cumulative cost = {6.668755377271877E7 rows, 1.304004135590002E9 cpu, 9.8444634E8 io, 1.4285741198345643E8 network, 1.3453679981305325E8 memory}
                        :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 618234.300687553, cumulative cost = {6.606931947203122E7 rows, 1.304004135590002E9 cpu, 9.8444634E8 io, 1.4285741198345643E8 network, 1.3453679981305325E8 memory}
                        :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :     +- Exchange(distribution=[broadcast]): rowcount = 19920.004583686783, cumulative cost = {6.134944317134367E7 rows, 1.2710316395533326E9 cpu, 8.86006932E8 io, 1.4285741198345643E8 network, 1.334212795563668E8 memory}
                        :        +- Calc(select=[X0, X1]): rowcount = 19920.004583686783, cumulative cost = {6.132952316675998E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                        :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 19920.004583686783, cumulative cost = {6.1309603162176296E7 rows, 1.2678444388199427E9 cpu, 8.86006932E8 io, 1.4237933187344795E8 network, 1.334212795563668E8 memory}
                        :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.128869915759261E7 rows, 1.2667033185754795E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.334035675563668E8 memory}
                        :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 132308.0305579119, cumulative cost = {6.1156391127034694E7 rows, 1.2645863900865529E9 cpu, 8.86001028E8 io, 1.4237342787344795E8 network, 1.2493585360066044E8 memory}
                        :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 132308.0305579119, cumulative cost = {6.102408309647678E7 rows, 1.2413001767083604E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.2493585360066044E8 memory}
                        :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 729897.833220605, cumulative cost = {6.089177506591886E7 rows, 1.2296218113768308E9 cpu, 8.86001028E8 io, 1.3919803514005807E8 network, 1.1646813964495409E8 memory}
                        :              :           :- Calc(select=[X10 AS X0, X1]): rowcount = 112052.33563582558, cumulative cost = {3.580258249390231E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :              :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, y, X10], build=[left]): rowcount = 112052.33563582558, cumulative cost = {3.5690530158266485E7 rows, 1.0505847867700511E9 cpu, 4.92220056E8 io, 1.302506531338952E8 network, 7.122887059354323E7 memory}
                        :              :           :     :- Exchange(distribution=[hash[X0]]): rowcount = 115027.89265686346, cumulative cost = {1.908402168458766E7 rows, 1.609046963037042E8 cpu, 2.9533566E8 io, 1.1286275816362873E7 network, 4.425118995309321E7 memory}
                        :              :           :     :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :              :           :     :     +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :              :           :     :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :              :           :     :           +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :              :           :     :              :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :              :           :     :              :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :              :           :     :              :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :              :           :     :              :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :              :           :     :              :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :              :           :     :              :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :              :           :     :              :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :              :           :     :              :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :              :           :     :              :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :              :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :              :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :              +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :              :           :     :                 +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :              :           :     :                    :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :              :           :     :                    :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :              :           :     :                    :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :              :           :     :                    :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :     :                    :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :     :                    :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :           :     :                    +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :              :           :     :                       +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :              :           :     +- Exchange(distribution=[hash[y]]): rowcount = 631987.6782486405, cumulative cost = {1.6494456138043001E7 rows, 8.837039658991029E8 cpu, 1.96884396E8 io, 1.1896437731753233E8 network, 2.053611865166568E7 memory}
                        :              :           :        +- Calc(select=[y, X1]): rowcount = 631987.6782486405, cumulative cost = {1.5862468459794361E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :              :           :           +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[x, y, X0, X1], build=[right]): rowcount = 631987.6782486405, cumulative cost = {1.5230480781545721E7 rows, 7.775300359533314E8 cpu, 1.96884396E8 io, 1.0379667303956497E8 network, 2.053611865166568E7 memory}
                        :              :           :              :- Exchange(distribution=[hash[x]]): rowcount = 4101642.0, cumulative cost = {8203284.0 rows, 6.89075856E8 cpu, 9.8439408E7 io, 9.8439408E7 network, 0.0 memory}
                        :              :           :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :           :              +- Exchange(distribution=[hash[X0]]): rowcount = 111609.18832427, cumulative cost = {6395209.10329708 rows, 5.47481704467372E7 cpu, 9.8444988E7 io, 5357265.03956496 network, 1.428600410550656E7 memory}
                        :              :           :                 +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6283599.91497281 rows, 3.599782680825984E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 1.428600410550656E7 memory}
                        :              :           :                    +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111609.18832427, cumulative cost = {6171990.72664854 rows, 3.421207979507152E7 cpu, 9.8444988E7 io, 2678644.51978248 network, 7143016.05275328 memory}
                        :              :           :                       +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111609.18832427, cumulative cost = {6060381.53832427 rows, 1.4568862649999999E7 cpu, 9.8444988E7 io, 24.0 network, 7143016.05275328 memory}
                        :              :           :                          +- Union(all=[true], union=[X0, X1]): rowcount = 615709.45, cumulative cost = {5948772.350000001 rows, 4717511.45 cpu, 9.8444988E7 io, 24.0 network, 28.0 memory}
                        :              :           :                             :- Calc(select=[x AS X0, x AS X1]): rowcount = 463.0, cumulative cost = {926.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :              :           :                             +- Calc(select=[y0 AS X0, x AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :                                +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :           :                                   :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :           :                                   +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :           :                                      +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :           +- Calc(select=[x AS X0, X1]): rowcount = 617845.4975847794, cumulative cost = {2.435929473879594E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :              :              +- HashJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right]): rowcount = 617845.4975847794, cumulative cost = {2.374144924121116E7 rows, 1.78307126773559E8 cpu, 3.93780972E8 io, 8947382.006162858 network, 4.523926905141086E7 memory}
                        :              :                 :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :                 +- Exchange(distribution=[broadcast]): rowcount = 17327.983898529517, cumulative cost = {1.9021961743626382E7 rows, 1.4535536690237078E8 cpu, 2.95341564E8 io, 8947382.006162858 network, 4.426890195309321E7 memory}
                        :              :                    +- Calc(select=[X0, X1]): rowcount = 17327.983898529517, cumulative cost = {1.9004633759727854E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :              :                       +- HashJoin(joinType=[InnerJoin], where=[=(X0, x)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 17327.983898529517, cumulative cost = {1.8987305775829326E7 rows, 1.4258288947860605E8 cpu, 2.95341564E8 io, 8531510.392598148 network, 4.426890195309321E7 memory}
                        :              :                          :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.89689937919308E7 rows, 1.4158001033735114E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 4.425118995309321E7 memory}
                        :              :                          :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 115027.89265686346, cumulative cost = {1.8853965899273936E7 rows, 1.3973956405484134E8 cpu, 2.9533566E8 io, 8525606.392598148 network, 3.688940482305395E7 memory}
                        :              :                          :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 115027.89265686346, cumulative cost = {1.8738938006617073E7 rows, 1.1949465494723338E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 3.688940482305395E7 memory}
                        :              :                          :        +- Union(all=[true], union=[X0, X1]): rowcount = 634569.2642853442, cumulative cost = {1.862391011396021E7 rows, 1.0934154671866786E8 cpu, 2.9533566E8 io, 5764936.968833425 network, 2.9527619693014685E7 memory}
                        :              :                          :           :- Calc(select=[x AS X0, X1]): rowcount = 617757.6475154796, cumulative cost = {1.1671088930737846E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :              :                          :           :  +- HashJoin(joinType=[InnerJoin], where=[=(y, x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right]): rowcount = 617757.6475154796, cumulative cost = {1.1053331283222366E7 rows, 7.173694877789637E7 cpu, 1.96884768E8 io, 3080610.285655088 network, 1.5224274716063552E7 memory}
                        :              :                          :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :                          :           :     +- Exchange(distribution=[broadcast]): rowcount = 16742.31676986461, cumulative cost = {6333931.635706886 rows, 3.878987424373747E7 cpu, 9.844536E7 io, 3080610.285655088 network, 1.4286704976951133E7 memory}
                        :              :                          :           :        +- Calc(select=[X1, x]): rowcount = 16742.31676986461, cumulative cost = {6317189.318937021 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :              :                          :           :           +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y, X0)], select=[X0, X1, x, y], build=[right]): rowcount = 16742.31676986461, cumulative cost = {6300447.002167157 rows, 3.611110356055913E7 cpu, 9.844536E7 io, 2678794.6831783373 network, 1.4286704976951133E7 memory}
                        :              :                          :           :              :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :              :                          :           :              :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :              :                          :           :              :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :              :                          :           :              :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :                          :           :              :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :              :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           :              +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :           :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :           +- Calc(select=[x AS X0, X1]): rowcount = 16811.61676986461, cumulative cost = {6318251.918937021 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :              :                          :              +- HashJoin(joinType=[InnerJoin], where=[=(x, X0)], select=[X0, X1, x], isBroadcast=[true], build=[right]): rowcount = 16811.61676986461, cumulative cost = {6301440.302167157 rows, 3.697002867648614E7 cpu, 9.8450892E7 io, 2684326.6831783373 network, 1.4303344976951133E7 memory}
                        :              :                          :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6283702.6853972925 rows, 3.59993291154267E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 1.4286676976951133E7 memory}
                        :              :                          :                 :  +- Exchange(distribution=[hash[X0, X1]]): rowcount = 111614.44513243073, cumulative cost = {6172088.240264862 rows, 3.421349799330781E7 cpu, 9.8445336E7 io, 2678770.6831783373 network, 7143352.488475567 memory}
                        :              :                          :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1]): rowcount = 111614.44513243073, cumulative cost = {6060473.795132431 rows, 1.4569355649999999E7 cpu, 9.8445336E7 io, 24.0 network, 7143352.488475567 memory}
                        :              :                          :                 :        +- Union(all=[true], union=[X0, X1]): rowcount = 615738.45, cumulative cost = {5948859.350000001 rows, 4717540.45 cpu, 9.8445336E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :- Calc(select=[x0 AS X0, y AS X1]): rowcount = 615246.45, cumulative cost = {5332136.9 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[=(y0, x)], select=[x, y, x0, y0], build=[right]): rowcount = 615246.45, cumulative cost = {4716890.45 rows, 4101802.0 cpu, 9.8439432E7 io, 24.0 network, 28.0 memory}
                        :              :                          :                 :           :     :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 4101642.0, cumulative cost = {4101642.0 rows, 0.0 cpu, 9.8439408E7 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           :     +- Exchange(distribution=[broadcast]): rowcount = 1.0, cumulative cost = {2.0 rows, 160.0 cpu, 24.0 io, 24.0 network, 0.0 memory}
                        :              :                          :                 :           :        +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y]): rowcount = 1.0, cumulative cost = {1.0 rows, 0.0 cpu, 24.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :           +- Calc(select=[x AS X0, x AS X1]): rowcount = 492.0, cumulative cost = {984.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              :                          :                 +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                        :              :                          :                    +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}
                        :              :                          +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :              :                             +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        :              +- Exchange(distribution=[broadcast]): rowcount = 492.0, cumulative cost = {984.0 rows, 78720.0 cpu, 5904.0 io, 5904.0 network, 0.0 memory}
                        :                 +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 492.0, cumulative cost = {492.0 rows, 0.0 cpu, 5904.0 io, 0.0 network, 0.0 memory}
                        +- Exchange(distribution=[broadcast]): rowcount = 463.0, cumulative cost = {926.0 rows, 74080.0 cpu, 5556.0 io, 5556.0 network, 0.0 memory}
                           +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x]): rowcount = 463.0, cumulative cost = {463.0 rows, 0.0 cpu, 5556.0 io, 0.0 network, 0.0 memory}

== Optimized Execution Plan ==
HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
+- Exchange(distribution=[hash[X0, X1]])
   +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
      +- MultipleInput(readOrder=[1,0,1,2,1,0,1,2,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Union(all=[true], union=[X0, X1])\n:  :  :- Union(all=[true], union=[X0, X1])\n:  :  :  :- Calc(select=[X0, X10 AS X1])\n:  :  :  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:  :  :  :     :- [#7] Exchange(distribution=[hash[X1]])\n:  :  :  :     +- [#8] Exchange(distribution=[hash[x]])\n:  :  :  +- Calc(select=[X0, x0 AS X1])\n:  :  :     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, x0], isBroadcast=[true], build=[right])\n:  :  :        :- [#9] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :  :        +- [#10] Exchange(distribution=[broadcast])\n:  :  +- Calc(select=[x AS X0, X1])\n:  :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X1], build=[right])\n:  :        :- [#5] Exchange(distribution=[hash[y]])\n:  :        +- [#6] Exchange(distribution=[hash[x]])\n:  +- Calc(select=[X0, X10 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[left])\n:        :- [#1] Exchange(distribution=[hash[X1]])\n:        +- [#4] Exchange(distribution=[hash[x]])\n+- Calc(select=[X0, X10 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X10], build=[right])\n      :- [#1] Exchange(distribution=[hash[X1]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :- Exchange(distribution=[hash[X1]])(reuse_id=[10])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[18])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,2,1], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, y AS X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0], isBroadcast=[true], build=[right])\n:     :- [#1] LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, y0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])\n      :- [#3] Exchange(distribution=[hash[y]])\n      +- [#4] Exchange(distribution=[hash[x]])\n])
         :              :- LegacyTableSourceScan(table=[[S_CAT, default_database, r, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])(reuse_id=[1])
         :              :- Exchange(distribution=[broadcast])(reuse_id=[2])
         :              :  +- LegacyTableSourceScan(table=[[S_CAT, default_database, b, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[5])
         :              :- Exchange(distribution=[hash[y]])(reuse_id=[14])
         :              :  +- Reused(reference_id=[1])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, y0])(reuse_id=[19])
         :                    +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, y0], build=[right])(reuse_id=[6])
         :                       :- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])(reuse_id=[3])
         :                          +- LegacyTableSourceScan(table=[[S_CAT, default_database, s, source: [CsvTableSource(read fields: x, y)]]], fields=[x, y])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, X1, x0], isBroadcast=[true], build=[right])\n:- Calc(select=[x, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n:     :- [#2] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :        :- Reused(reference_id=[2])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X1])(reuse_id=[13])
         :              +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[15])
         :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :        +- MultipleInput(readOrder=[0,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[X10 AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, y, X10], build=[left])\n:     :- [#1] Exchange(distribution=[hash[X0]])\n:     +- [#2] Exchange(distribution=[hash[y]])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])\n      :- [#3] Exchange(distribution=[any], shuffle_mode=[BATCH])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :- Exchange(distribution=[hash[X0]])
         :                 :           :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[7])
         :                 :           :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :           +- MultipleInput(readOrder=[2,1,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[x AS X0, X1])\n:  +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])\n:     :- [#1] Exchange(distribution=[any], shuffle_mode=[BATCH])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[x AS X0, X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n      :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n      +- [#4] Exchange(distribution=[broadcast])\n])
         :                 :           :              :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :              :  +- Reused(reference_id=[1])
         :                 :           :              :- Exchange(distribution=[broadcast])
         :                 :           :              :  +- Calc(select=[X1, x])
         :                 :           :              :     +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = X0)], select=[X0, X1, x, y], build=[right])
         :                 :           :              :        :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[4])
         :                 :           :              :        :  +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :              :        :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              :        :        +- Union(all=[true], union=[X0, X1])
         :                 :           :              :        :           :- Calc(select=[x0 AS X0, y AS X1])
         :                 :           :              :        :           :  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y0 = x)], select=[x, y, x0, y0], build=[right])(reuse_id=[11])
         :                 :           :              :        :           :     :- Reused(reference_id=[1])
         :                 :           :              :        :           :     +- Reused(reference_id=[3])
         :                 :           :              :        :           +- Calc(select=[x AS X0, x AS X1])(reuse_id=[12])
         :                 :           :              :        :              +- LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])(reuse_id=[8])
         :                 :           :              :        +- Reused(reference_id=[3])
         :                 :           :              :- Reused(reference_id=[4])
         :                 :           :              +- Reused(reference_id=[2])
         :                 :           :- Exchange(distribution=[hash[y]])
         :                 :           :  +- Calc(select=[y, X1])
         :                 :           :     +- HashJoin(joinType=[InnerJoin], where=[(x = X0)], select=[x, y, X0, X1], build=[right])
         :                 :           :        :- Exchange(distribution=[hash[x]])
         :                 :           :        :  +- Reused(reference_id=[1])
         :                 :           :        +- Exchange(distribution=[hash[X0]])
         :                 :           :           +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])
         :                 :           :              +- Exchange(distribution=[hash[X0, X1]])
         :                 :           :                 +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           :                    +- Union(all=[true], union=[X0, X1])
         :                 :           :                       :- Calc(select=[x AS X0, x AS X1])(reuse_id=[20])
         :                 :           :                       :  +- Reused(reference_id=[5])
         :                 :           :                       +- Calc(select=[y0 AS X0, x AS X1])
         :                 :           :                          +- Reused(reference_id=[6])
         :                 :           :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                 :           :  +- Reused(reference_id=[1])
         :                 :           +- Exchange(distribution=[broadcast])
         :                 :              +- Calc(select=[X0, X1])
         :                 :                 +- HashJoin(joinType=[InnerJoin], where=[(X0 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                 :                    :- Reused(reference_id=[7])
         :                 :                    +- Exchange(distribution=[broadcast])(reuse_id=[9])
         :                 :                       +- Reused(reference_id=[8])
         :                 +- Reused(reference_id=[9])
         :- Reused(reference_id=[10])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X10])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X10], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X0, X10])
         :              +- HashJoin(joinType=[InnerJoin], where=[(X1 = X00)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[left])
         :                 :- Exchange(distribution=[broadcast])
         :                 :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[16])
         :                 :     +- Exchange(distribution=[hash[X0, X1]])
         :                 :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :                 :           +- Union(all=[true], union=[X0, X1])
         :                 :              :- Calc(select=[x0 AS X0, y AS X1])
         :                 :              :  +- HashJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x], isBroadcast=[true], build=[right])
         :                 :              :     :- Calc(select=[y, x0])(reuse_id=[17])
         :                 :              :     :  +- Reused(reference_id=[11])
         :                 :              :     +- Reused(reference_id=[9])
         :                 :              +- Reused(reference_id=[12])
         :                 +- Reused(reference_id=[13])
         :- Reused(reference_id=[14])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, X1, x0], isBroadcast=[true], build=[right])
         :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :        :  +- Reused(reference_id=[1])
         :        +- Exchange(distribution=[broadcast])
         :           +- Calc(select=[X1, x AS x0])
         :              +- MultipleInput(readOrder=[0,1,0], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X00)], select=[X1, X00, x], isBroadcast=[true], build=[right])\n:- Calc(select=[X1, X00])\n:  +- HashJoin(joinType=[InnerJoin], where=[(X0 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:     :- [#2] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:     +- [#3] Exchange(distribution=[broadcast])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :                 :- Reused(reference_id=[9])
         :                 :- Reused(reference_id=[15])
         :                 +- Exchange(distribution=[broadcast])
         :                    +- Calc(select=[X0, X1])
         :                       +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :                          :- Reused(reference_id=[16])
         :                          +- Reused(reference_id=[9])
         :- Exchange(distribution=[hash[X1]])
         :  +- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[22])
         :     +- Exchange(distribution=[hash[X0, X1]])
         :        +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :           +- MultipleInput(readOrder=[1,0,1,0,1,2], members=[\nUnion(all=[true], union=[X0, X1])\n:- Union(all=[true], union=[X0, X1])\n:  :- Calc(select=[X0, X00 AS X1])\n:  :  +- HashJoin(joinType=[InnerJoin], where=[(X1 = X10)], select=[X0, X1, X00, X10], isBroadcast=[true], build=[right])\n:  :     :- [#3] HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  :     +- [#4] Exchange(distribution=[broadcast])\n:  +- Calc(select=[X0, X00 AS X1])\n:     +- HashJoin(joinType=[InnerJoin], where=[(X1 = x)], select=[X0, X1, x, X00], build=[left])\n:        :- [#5] Exchange(distribution=[hash[X1]])\n:        +- [#6] Exchange(distribution=[hash[x]])\n+- Calc(select=[x AS X0, X0 AS X1])\n   +- HashJoin(joinType=[InnerJoin], where=[(y = x0)], select=[x, y, x0, X0], build=[right])\n      :- [#1] Exchange(distribution=[hash[y]])\n      +- [#2] Exchange(distribution=[hash[x]])\n])
         :              :- Reused(reference_id=[14])
         :              :- Exchange(distribution=[hash[x]])
         :              :  +- Calc(select=[x, X0])
         :              :     +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :              :        :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :              :        :  +- Reused(reference_id=[1])
         :              :        +- Exchange(distribution=[broadcast])
         :              :           +- Calc(select=[X0, X1])
         :              :              +- HashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])
         :              :                 :- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])(reuse_id=[21])
         :              :                 :  +- Exchange(distribution=[hash[X0, X1]])
         :              :                 :     +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :                 :        +- Union(all=[true], union=[X0, X1])
         :              :                 :           :- MultipleInput(readOrder=[1,0,1,0], members=[\nUnion(all=[true], union=[X0, X1])\n:- Calc(select=[y0 AS X0, x0 AS X1])\n:  +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[y, x0, x, y0], build=[right])\n:     :- [#1] Calc(select=[y, x0])\n:     +- [#2] Exchange(distribution=[broadcast])\n+- Calc(select=[y AS X0, x AS X1])\n   +- NestedLoopJoin(joinType=[InnerJoin], where=[(x = x0)], select=[x, x0, y], build=[right])\n      :- [#3] LegacyTableSourceScan(table=[[S_CAT, default_database, a, source: [CsvTableSource(read fields: x)]]], fields=[x])\n      +- [#2] Exchange(distribution=[broadcast])\n])
         :              :                 :           :  :- Reused(reference_id=[17])
         :              :                 :           :  :- Reused(reference_id=[3])
         :              :                 :           :  :- Reused(reference_id=[8])
         :              :                 :           :  +- Reused(reference_id=[3])
         :              :                 :           +- Calc(select=[y AS X0, x0 AS X1])
         :              :                 :              +- NestedLoopJoin(joinType=[InnerJoin], where=[(y = x)], select=[x, x0, y], build=[right])(reuse_id=[23])
         :              :                 :                 :- Reused(reference_id=[5])
         :              :                 :                 +- Reused(reference_id=[3])
         :              :                 +- Reused(reference_id=[9])
         :              :- Reused(reference_id=[18])
         :              :- Exchange(distribution=[broadcast])
         :              :  +- Calc(select=[X0, X1])
         :              :     +- MultipleInput(readOrder=[0,1], members=[\nHashJoin(joinType=[InnerJoin], where=[(x = X1)], select=[X0, X1, x], isBroadcast=[true], build=[right])\n:- HashAggregate(isMerge=[true], groupBy=[X0, X1], select=[X0, X1])\n:  +- [#2] Exchange(distribution=[hash[X0, X1]])\n+- [#1] Exchange(distribution=[broadcast])\n])
         :              :        :- Reused(reference_id=[2])
         :              :        +- Exchange(distribution=[hash[X0, X1]])
         :              :           +- LocalHashAggregate(groupBy=[X0, X1], select=[X0, X1])
         :              :              +- Union(all=[true], union=[X0, X1])
         :              :                 :- Calc(select=[y0 AS X0, x0 AS X1])
         :              :                 :  +- HashJoin(joinType=[InnerJoin], where=[(x0 = x)], select=[x, y0, x0], isBroadcast=[true], build=[right])
         :              :                 :     :- Reused(reference_id=[19])
         :              :                 :     +- Reused(reference_id=[2])
         :              :                 +- Reused(reference_id=[20])
         :              :- Reused(reference_id=[10])
         :              +- Exchange(distribution=[hash[x]])
         :                 +- Calc(select=[x, X0])
         :                    +- HashJoin(joinType=[InnerJoin], where=[(y = X1)], select=[x, y, X0, X1], isBroadcast=[true], build=[right])
         :                       :- Exchange(distribution=[any], shuffle_mode=[BATCH])
         :                       :  +- Reused(reference_id=[1])
         :                       +- Exchange(distribution=[broadcast])
         :                          +- Reused(reference_id=[21])
         :- Exchange(distribution=[hash[x]])
         :  +- Calc(select=[x, X1])
         :     +- HashJoin(joinType=[InnerJoin], where=[(y = X0)], select=[x, y, X0, X1], build=[right])
         :        :- Reused(reference_id=[14])
         :        +- Exchange(distribution=[hash[X0]])
         :           +- Reused(reference_id=[15])
         :- Reused(reference_id=[22])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[x, x0])
               +- Reused(reference_id=[23])

Job has been submitted with JobID 27705c74f19718748307c1f127019e27
